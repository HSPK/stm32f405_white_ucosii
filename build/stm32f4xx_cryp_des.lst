ARM GAS  /tmp/ccVi0rSz.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_cryp_des.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CRYP_DES_ECB,"ax",%progbits
  18              		.align	1
  19              		.global	CRYP_DES_ECB
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	CRYP_DES_ECB:
  27              	.LVL0:
  28              	.LFB130:
  29              		.file 1 "Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c"
   1:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /**
   2:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @file    stm32f4xx_cryp_des.c
   4:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @version V1.0.2
   6:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @date    05-March-2012
   7:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief   This file provides high level functions to encrypt and decrypt an 
   8:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          input message using DES in ECB/CBC modes.
   9:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          It uses the stm32f4xx_cryp.c/.h drivers to access the STM32F4xx CRYP
  10:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          peripheral.
  11:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  12:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *  @verbatim
  13:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  14:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          ===================================================================
  15:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *                                   How to use this driver
  16:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          ===================================================================
  17:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          1. Enable The CRYP controller clock using 
  18:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  19:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  20:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          2. Encrypt and decrypt using DES in ECB Mode using CRYP_DES_ECB()
  21:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *             function.
  22:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  23:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          3. Encrypt and decrypt using DES in CBC Mode using CRYP_DES_CBC()
  24:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *             function.
  25:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  26:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *  @endverbatim
  27:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  28:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ******************************************************************************
  29:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @attention
ARM GAS  /tmp/ccVi0rSz.s 			page 2


  30:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  31:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  32:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  33:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  34:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * You may not use this file except in compliance with the License.
  35:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * You may obtain a copy of the License at:
  36:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  37:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  38:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  39:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * Unless required by applicable law or agreed to in writing, software 
  40:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  41:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  42:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * See the License for the specific language governing permissions and
  43:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * limitations under the License.
  44:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  45:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ******************************************************************************
  46:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  47:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  48:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Includes ------------------------------------------------------------------*/
  49:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** #include "stm32f4xx_cryp.h"
  50:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  51:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  52:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  53:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  54:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  55:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  56:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @defgroup CRYP 
  57:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief CRYP driver modules
  58:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  59:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  60:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  61:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private typedef -----------------------------------------------------------*/
  62:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private define ------------------------------------------------------------*/
  63:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** #define DESBUSY_TIMEOUT    ((uint32_t) 0x00010000)
  64:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  65:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private macro -------------------------------------------------------------*/
  66:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private variables ---------------------------------------------------------*/
  67:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private function prototypes -----------------------------------------------*/
  68:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private functions ---------------------------------------------------------*/
  69:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  70:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  71:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @defgroup CRYP_Private_Functions
  72:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  73:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */ 
  74:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  75:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @defgroup CRYP_Group8 High Level DES functions
  76:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  *  @brief   High Level DES functions 
  77:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  *
  78:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** @verbatim   
  79:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  ===============================================================================
  80:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****                           High Level DES functions
  81:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  ===============================================================================
  82:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** @endverbatim
  83:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  84:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  85:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  86:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /**
ARM GAS  /tmp/ccVi0rSz.s 			page 3


  87:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief  Encrypt and decrypt using DES in ECB Mode
  88:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Mode: encryption or decryption Mode.
  89:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *           This parameter can be one of the following values:
  90:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_ENCRYPT: Encryption
  91:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_DECRYPT: Decryption
  92:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Key: Key used for DES algorithm.
  93:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 8.
  94:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Input: pointer to the Input buffer.
  95:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Output: pointer to the returned buffer.
  96:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @retval An ErrorStatus enumeration value:
  97:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - SUCCESS: Operation done
  98:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - ERROR: Operation failed
  99:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
 100:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** ErrorStatus CRYP_DES_ECB(uint8_t Mode, uint8_t Key[8], uint8_t *Input, 
 101:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****                          uint32_t Ilength, uint8_t *Output)
 102:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** {
  30              		.loc 1 102 1 view -0
  31              		.cfi_startproc
  32              		@ args = 4, pretend = 0, frame = 48
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 102 1 is_stmt 0 view .LVU1
  35 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 24
  38              		.cfi_offset 4, -24
  39              		.cfi_offset 5, -20
  40              		.cfi_offset 6, -16
  41              		.cfi_offset 7, -12
  42              		.cfi_offset 8, -8
  43              		.cfi_offset 14, -4
  44 0004 8CB0     		sub	sp, sp, #48
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 72
  47 0006 0646     		mov	r6, r0
  48 0008 0D46     		mov	r5, r1
  49 000a 1F46     		mov	r7, r3
 103:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_InitTypeDef DES_CRYP_InitStructure;
  50              		.loc 1 103 3 is_stmt 1 view .LVU2
 104:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInitTypeDef DES_CRYP_KeyInitStructure;
  51              		.loc 1 104 3 view .LVU3
 105:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   __IO uint32_t counter = 0;
  52              		.loc 1 105 3 view .LVU4
  53              		.loc 1 105 17 is_stmt 0 view .LVU5
  54 000c 0023     		movs	r3, #0
  55              	.LVL1:
  56              		.loc 1 105 17 view .LVU6
  57 000e 0193     		str	r3, [sp, #4]
 106:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t busystatus = 0;
  58              		.loc 1 106 3 is_stmt 1 view .LVU7
  59              	.LVL2:
 107:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ErrorStatus status = SUCCESS;
  60              		.loc 1 107 3 view .LVU8
 108:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t keyaddr    = (uint32_t)Key;
  61              		.loc 1 108 3 view .LVU9
 109:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t inputaddr  = (uint32_t)Input;
  62              		.loc 1 109 3 view .LVU10
  63              		.loc 1 109 12 is_stmt 0 view .LVU11
ARM GAS  /tmp/ccVi0rSz.s 			page 4


  64 0010 1446     		mov	r4, r2
  65              	.LVL3:
 110:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t outputaddr = (uint32_t)Output;
  66              		.loc 1 110 3 is_stmt 1 view .LVU12
  67              		.loc 1 110 12 is_stmt 0 view .LVU13
  68 0012 DDF84880 		ldr	r8, [sp, #72]
  69              	.LVL4:
 111:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t i = 0;
  70              		.loc 1 111 3 is_stmt 1 view .LVU14
 112:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 113:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto structures initialisation*/
 114:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyStructInit(&DES_CRYP_KeyInitStructure);
  71              		.loc 1 114 3 view .LVU15
  72 0016 02A8     		add	r0, sp, #8
  73              	.LVL5:
  74              		.loc 1 114 3 is_stmt 0 view .LVU16
  75 0018 FFF7FEFF 		bl	CRYP_KeyStructInit
  76              	.LVL6:
 115:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 116:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto Init for Encryption process */
 117:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   if( Mode == MODE_ENCRYPT ) /* DES encryption */
  77              		.loc 1 117 3 is_stmt 1 view .LVU17
  78              		.loc 1 117 5 is_stmt 0 view .LVU18
  79 001c 012E     		cmp	r6, #1
  80 001e 1CD0     		beq	.L12
 118:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 119:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 120:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 121:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   else/* if( Mode == MODE_DECRYPT )*/ /* DES decryption */
 122:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {      
 123:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Decrypt;
  81              		.loc 1 123 6 is_stmt 1 view .LVU19
  82              		.loc 1 123 43 is_stmt 0 view .LVU20
  83 0020 0423     		movs	r3, #4
  84 0022 ADF82830 		strh	r3, [sp, #40]	@ movhi
  85              	.L3:
 124:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 125:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 126:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_DES_ECB;
  86              		.loc 1 126 3 is_stmt 1 view .LVU21
  87              		.loc 1 126 40 is_stmt 0 view .LVU22
  88 0026 1023     		movs	r3, #16
  89 0028 ADF82A30 		strh	r3, [sp, #42]	@ movhi
 127:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
  90              		.loc 1 127 3 is_stmt 1 view .LVU23
  91              		.loc 1 127 40 is_stmt 0 view .LVU24
  92 002c 8023     		movs	r3, #128
  93 002e ADF82C30 		strh	r3, [sp, #44]	@ movhi
 128:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Init(&DES_CRYP_InitStructure);
  94              		.loc 1 128 3 is_stmt 1 view .LVU25
  95 0032 0AA8     		add	r0, sp, #40
  96 0034 FFF7FEFF 		bl	CRYP_Init
  97              	.LVL7:
 129:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 130:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Key Initialisation */
 131:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
  98              		.loc 1 131 3 view .LVU26
ARM GAS  /tmp/ccVi0rSz.s 			page 5


  99              		.loc 1 131 45 is_stmt 0 view .LVU27
 100 0038 2B68     		ldr	r3, [r5]
 101              	.LVL8:
 102              	.LBB14:
 103              	.LBI14:
 104              		.file 2 "Drivers/CMSIS/Core/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif                                           
ARM GAS  /tmp/ccVi0rSz.s 			page 6


  52:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  /tmp/ccVi0rSz.s 			page 7


 109:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccVi0rSz.s 			page 8


 166:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccVi0rSz.s 			page 9


 223:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
ARM GAS  /tmp/ccVi0rSz.s 			page 10


 280:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccVi0rSz.s 			page 11


 337:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
ARM GAS  /tmp/ccVi0rSz.s 			page 12


 394:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
ARM GAS  /tmp/ccVi0rSz.s 			page 13


 451:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccVi0rSz.s 			page 14


 508:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccVi0rSz.s 			page 15


 565:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
ARM GAS  /tmp/ccVi0rSz.s 			page 16


 622:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccVi0rSz.s 			page 17


 679:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccVi0rSz.s 			page 18


 736:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
ARM GAS  /tmp/ccVi0rSz.s 			page 19


 793:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccVi0rSz.s 			page 20


 850:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 105              		.loc 2 900 31 is_stmt 1 view .LVU28
 106              	.LBB15:
 901:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Core/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 107              		.loc 2 903 3 view .LVU29
ARM GAS  /tmp/ccVi0rSz.s 			page 21


 108              		.loc 2 903 10 is_stmt 0 view .LVU30
 109 003a 1BBA     		rev	r3, r3
 110              	.LVL9:
 111              		.loc 2 903 10 view .LVU31
 112              	.LBE15:
 113              	.LBE14:
 114              		.loc 1 131 43 view .LVU32
 115 003c 0493     		str	r3, [sp, #16]
 132:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   keyaddr+=4;
 116              		.loc 1 132 3 is_stmt 1 view .LVU33
 117              	.LVL10:
 133:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 118              		.loc 1 133 3 view .LVU34
 119              		.loc 1 133 45 is_stmt 0 view .LVU35
 120 003e 6B68     		ldr	r3, [r5, #4]
 121              	.LVL11:
 122              	.LBB16:
 123              	.LBI16:
 900:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 124              		.loc 2 900 31 is_stmt 1 view .LVU36
 125              	.LBB17:
 126              		.loc 2 903 3 view .LVU37
 127              		.loc 2 903 10 is_stmt 0 view .LVU38
 128 0040 1BBA     		rev	r3, r3
 129              	.LVL12:
 130              		.loc 2 903 10 view .LVU39
 131              	.LBE17:
 132              	.LBE16:
 133              		.loc 1 133 43 view .LVU40
 134 0042 0593     		str	r3, [sp, #20]
 134:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInit(& DES_CRYP_KeyInitStructure);
 135              		.loc 1 134 3 is_stmt 1 view .LVU41
 136 0044 02A8     		add	r0, sp, #8
 137 0046 FFF7FEFF 		bl	CRYP_KeyInit
 138              	.LVL13:
 135:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 136:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Flush IN/OUT FIFO */
 137:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_FIFOFlush();
 139              		.loc 1 137 3 view .LVU42
 140 004a FFF7FEFF 		bl	CRYP_FIFOFlush
 141              	.LVL14:
 138:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 139:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Enable Crypto processor */
 140:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Cmd(ENABLE);
 142              		.loc 1 140 3 view .LVU43
 143 004e 0120     		movs	r0, #1
 144 0050 FFF7FEFF 		bl	CRYP_Cmd
 145              	.LVL15:
 141:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 142:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=8)
 146              		.loc 1 142 3 view .LVU44
 147              		.loc 1 142 8 is_stmt 0 view .LVU45
 148 0054 0025     		movs	r5, #0
 149              	.LVL16:
 107:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t keyaddr    = (uint32_t)Key;
 150              		.loc 1 107 15 view .LVU46
 151 0056 0126     		movs	r6, #1
ARM GAS  /tmp/ccVi0rSz.s 			page 22


 152              		.loc 1 142 3 view .LVU47
 153 0058 06E0     		b	.L4
 154              	.LVL17:
 155              	.L12:
 119:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 156              		.loc 1 119 6 is_stmt 1 view .LVU48
 119:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 157              		.loc 1 119 43 is_stmt 0 view .LVU49
 158 005a 0023     		movs	r3, #0
 159 005c ADF82830 		strh	r3, [sp, #40]	@ movhi
 160 0060 E1E7     		b	.L3
 161              	.LVL18:
 162              	.L5:
 143:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 144:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 145:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     /* Write the Input block in the Input FIFO */
 146:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 147:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 148:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 149:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 150:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 151:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Wait until the complete message has been processed */
 152:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     counter = 0;
 153:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     do
 154:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 155:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 156:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter++;
 157:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 158:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 159:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     if (busystatus != RESET)
 163              		.loc 1 159 5 is_stmt 1 view .LVU50
 164              		.loc 1 159 8 is_stmt 0 view .LVU51
 165 0062 DAB1     		cbz	r2, .L13
 160:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****    {
 161:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****        status = ERROR;
 166              		.loc 1 161 15 view .LVU52
 167 0064 0026     		movs	r6, #0
 168              	.LVL19:
 169              	.L7:
 142:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 170              		.loc 1 142 48 is_stmt 1 discriminator 2 view .LVU53
 142:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 171              		.loc 1 142 49 is_stmt 0 discriminator 2 view .LVU54
 172 0066 0835     		adds	r5, r5, #8
 173              	.LVL20:
 174              	.L4:
 142:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 175              		.loc 1 142 12 is_stmt 1 discriminator 1 view .LVU55
 142:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 176              		.loc 1 142 3 is_stmt 0 discriminator 1 view .LVU56
 177 0068 BD42     		cmp	r5, r7
 178 006a 22D2     		bcs	.L8
 142:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 179              		.loc 1 142 25 discriminator 3 view .LVU57
 180 006c 0EB3     		cbz	r6, .L8
 146:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 181              		.loc 1 146 5 is_stmt 1 view .LVU58
ARM GAS  /tmp/ccVi0rSz.s 			page 23


 182 006e 2068     		ldr	r0, [r4]
 183 0070 FFF7FEFF 		bl	CRYP_DataIn
 184              	.LVL21:
 147:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 185              		.loc 1 147 5 view .LVU59
 148:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 186              		.loc 1 148 5 view .LVU60
 187 0074 6068     		ldr	r0, [r4, #4]
 188 0076 FFF7FEFF 		bl	CRYP_DataIn
 189              	.LVL22:
 149:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 190              		.loc 1 149 5 view .LVU61
 149:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 191              		.loc 1 149 14 is_stmt 0 view .LVU62
 192 007a 0834     		adds	r4, r4, #8
 193              	.LVL23:
 152:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     do
 194              		.loc 1 152 5 is_stmt 1 view .LVU63
 152:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     do
 195              		.loc 1 152 13 is_stmt 0 view .LVU64
 196 007c 0023     		movs	r3, #0
 197 007e 0193     		str	r3, [sp, #4]
 198              	.L6:
 153:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 199              		.loc 1 153 5 is_stmt 1 discriminator 2 view .LVU65
 155:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter++;
 200              		.loc 1 155 7 discriminator 2 view .LVU66
 155:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter++;
 201              		.loc 1 155 20 is_stmt 0 discriminator 2 view .LVU67
 202 0080 1020     		movs	r0, #16
 203 0082 FFF7FEFF 		bl	CRYP_GetFlagStatus
 204              	.LVL24:
 155:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter++;
 205              		.loc 1 155 18 discriminator 2 view .LVU68
 206 0086 0246     		mov	r2, r0
 207              	.LVL25:
 156:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 208              		.loc 1 156 7 is_stmt 1 discriminator 2 view .LVU69
 156:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 209              		.loc 1 156 14 is_stmt 0 discriminator 2 view .LVU70
 210 0088 0199     		ldr	r1, [sp, #4]
 211 008a 0131     		adds	r1, r1, #1
 212 008c 0191     		str	r1, [sp, #4]
 157:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 213              		.loc 1 157 12 is_stmt 1 discriminator 2 view .LVU71
 157:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 214              		.loc 1 157 22 is_stmt 0 discriminator 2 view .LVU72
 215 008e 019B     		ldr	r3, [sp, #4]
 157:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 216              		.loc 1 157 5 discriminator 2 view .LVU73
 217 0090 B3F5803F 		cmp	r3, #65536
 218 0094 E5D0     		beq	.L5
 157:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 219              		.loc 1 157 42 discriminator 1 view .LVU74
 220 0096 0028     		cmp	r0, #0
 221 0098 F2D1     		bne	.L6
 222 009a E2E7     		b	.L5
ARM GAS  /tmp/ccVi0rSz.s 			page 24


 223              	.L13:
 162:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }
 163:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     else
 164:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 165:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 166:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       /* Read the Output block from the Output FIFO */
 167:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 224              		.loc 1 167 7 is_stmt 1 view .LVU75
 225              		.loc 1 167 34 is_stmt 0 view .LVU76
 226 009c FFF7FEFF 		bl	CRYP_DataOut
 227              	.LVL26:
 228              		.loc 1 167 32 view .LVU77
 229 00a0 C8F80000 		str	r0, [r8]
 168:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       outputaddr+=4;
 230              		.loc 1 168 7 is_stmt 1 view .LVU78
 231              	.LVL27:
 169:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 232              		.loc 1 169 7 view .LVU79
 233              		.loc 1 169 34 is_stmt 0 view .LVU80
 234 00a4 FFF7FEFF 		bl	CRYP_DataOut
 235              	.LVL28:
 236              		.loc 1 169 32 view .LVU81
 237 00a8 C8F80400 		str	r0, [r8, #4]
 170:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       outputaddr+=4;
 238              		.loc 1 170 7 is_stmt 1 view .LVU82
 239              		.loc 1 170 17 is_stmt 0 view .LVU83
 240 00ac 08F10808 		add	r8, r8, #8
 241              	.LVL29:
 242              		.loc 1 170 17 view .LVU84
 243 00b0 D9E7     		b	.L7
 244              	.L8:
 171:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }
 172:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 173:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 174:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Disable Crypto */
 175:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Cmd(DISABLE);
 245              		.loc 1 175 3 is_stmt 1 view .LVU85
 246 00b2 0020     		movs	r0, #0
 247 00b4 FFF7FEFF 		bl	CRYP_Cmd
 248              	.LVL30:
 176:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 177:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   return status; 
 249              		.loc 1 177 3 view .LVU86
 178:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** }
 250              		.loc 1 178 1 is_stmt 0 view .LVU87
 251 00b8 3046     		mov	r0, r6
 252 00ba 0CB0     		add	sp, sp, #48
 253              	.LCFI2:
 254              		.cfi_def_cfa_offset 24
 255              		@ sp needed
 256 00bc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 257              		.loc 1 178 1 view .LVU88
 258              		.cfi_endproc
 259              	.LFE130:
 261              		.section	.text.CRYP_DES_CBC,"ax",%progbits
 262              		.align	1
 263              		.global	CRYP_DES_CBC
ARM GAS  /tmp/ccVi0rSz.s 			page 25


 264              		.syntax unified
 265              		.thumb
 266              		.thumb_func
 267              		.fpu fpv4-sp-d16
 269              	CRYP_DES_CBC:
 270              	.LVL31:
 271              	.LFB131:
 179:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 180:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /**
 181:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief  Encrypt and decrypt using DES in CBC Mode
 182:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Mode: encryption or decryption Mode.
 183:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          This parameter can be one of the following values:
 184:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_ENCRYPT: Encryption
 185:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_DECRYPT: Decryption
 186:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Key: Key used for DES algorithm.
 187:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  InitVectors: Initialisation Vectors used for DES algorithm.
 188:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 8.
 189:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Input: pointer to the Input buffer.
 190:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Output: pointer to the returned buffer.
 191:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @retval An ErrorStatus enumeration value:
 192:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - SUCCESS: Operation done
 193:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - ERROR: Operation failed
 194:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
 195:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** ErrorStatus CRYP_DES_CBC(uint8_t Mode, uint8_t Key[8], uint8_t InitVectors[8],
 196:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****                          uint8_t *Input, uint32_t Ilength, uint8_t *Output)
 197:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** {
 272              		.loc 1 197 1 is_stmt 1 view -0
 273              		.cfi_startproc
 274              		@ args = 8, pretend = 0, frame = 64
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              		.loc 1 197 1 is_stmt 0 view .LVU90
 277 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 278              	.LCFI3:
 279              		.cfi_def_cfa_offset 28
 280              		.cfi_offset 4, -28
 281              		.cfi_offset 5, -24
 282              		.cfi_offset 6, -20
 283              		.cfi_offset 7, -16
 284              		.cfi_offset 8, -12
 285              		.cfi_offset 9, -8
 286              		.cfi_offset 14, -4
 287 0004 91B0     		sub	sp, sp, #68
 288              	.LCFI4:
 289              		.cfi_def_cfa_offset 96
 290 0006 8146     		mov	r9, r0
 291 0008 0E46     		mov	r6, r1
 292 000a 1546     		mov	r5, r2
 293 000c DDF86080 		ldr	r8, [sp, #96]
 198:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_InitTypeDef DES_CRYP_InitStructure;
 294              		.loc 1 198 3 is_stmt 1 view .LVU91
 199:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInitTypeDef DES_CRYP_KeyInitStructure;
 295              		.loc 1 199 3 view .LVU92
 200:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_IVInitTypeDef DES_CRYP_IVInitStructure;
 296              		.loc 1 200 3 view .LVU93
 201:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   __IO uint32_t counter = 0;
 297              		.loc 1 201 3 view .LVU94
 298              		.loc 1 201 17 is_stmt 0 view .LVU95
ARM GAS  /tmp/ccVi0rSz.s 			page 26


 299 0010 0022     		movs	r2, #0
 300              	.LVL32:
 301              		.loc 1 201 17 view .LVU96
 302 0012 0192     		str	r2, [sp, #4]
 202:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t busystatus = 0;
 303              		.loc 1 202 3 is_stmt 1 view .LVU97
 304              	.LVL33:
 203:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ErrorStatus status = SUCCESS;
 305              		.loc 1 203 3 view .LVU98
 204:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t keyaddr    = (uint32_t)Key;
 306              		.loc 1 204 3 view .LVU99
 205:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t inputaddr  = (uint32_t)Input;
 307              		.loc 1 205 3 view .LVU100
 308              		.loc 1 205 12 is_stmt 0 view .LVU101
 309 0014 1C46     		mov	r4, r3
 310              	.LVL34:
 206:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t outputaddr = (uint32_t)Output;
 311              		.loc 1 206 3 is_stmt 1 view .LVU102
 312              		.loc 1 206 12 is_stmt 0 view .LVU103
 313 0016 199F     		ldr	r7, [sp, #100]
 314              	.LVL35:
 207:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t ivaddr     = (uint32_t)InitVectors;
 315              		.loc 1 207 3 is_stmt 1 view .LVU104
 208:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t i = 0;
 316              		.loc 1 208 3 view .LVU105
 209:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 210:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto structures initialisation*/
 211:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyStructInit(&DES_CRYP_KeyInitStructure);
 317              		.loc 1 211 3 view .LVU106
 318 0018 06A8     		add	r0, sp, #24
 319              	.LVL36:
 320              		.loc 1 211 3 is_stmt 0 view .LVU107
 321 001a FFF7FEFF 		bl	CRYP_KeyStructInit
 322              	.LVL37:
 212:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 213:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto Init for Encryption process */
 214:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   if(Mode == MODE_ENCRYPT) /* DES encryption */
 323              		.loc 1 214 3 is_stmt 1 view .LVU108
 324              		.loc 1 214 5 is_stmt 0 view .LVU109
 325 001e B9F1010F 		cmp	r9, #1
 326 0022 25D0     		beq	.L25
 215:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 216:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 217:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 218:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   else /*if(Mode == MODE_DECRYPT)*/ /* DES decryption */
 219:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 220:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Decrypt;
 327              		.loc 1 220 6 is_stmt 1 view .LVU110
 328              		.loc 1 220 43 is_stmt 0 view .LVU111
 329 0024 0423     		movs	r3, #4
 330 0026 ADF83830 		strh	r3, [sp, #56]	@ movhi
 331              	.L16:
 221:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 222:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 223:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_DES_CBC;
 332              		.loc 1 223 3 is_stmt 1 view .LVU112
 333              		.loc 1 223 40 is_stmt 0 view .LVU113
ARM GAS  /tmp/ccVi0rSz.s 			page 27


 334 002a 1823     		movs	r3, #24
 335 002c ADF83A30 		strh	r3, [sp, #58]	@ movhi
 224:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 336              		.loc 1 224 3 is_stmt 1 view .LVU114
 337              		.loc 1 224 40 is_stmt 0 view .LVU115
 338 0030 8023     		movs	r3, #128
 339 0032 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 225:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Init(&DES_CRYP_InitStructure);
 340              		.loc 1 225 3 is_stmt 1 view .LVU116
 341 0036 0EA8     		add	r0, sp, #56
 342 0038 FFF7FEFF 		bl	CRYP_Init
 343              	.LVL38:
 226:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 227:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Key Initialisation */
 228:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 344              		.loc 1 228 3 view .LVU117
 345              		.loc 1 228 45 is_stmt 0 view .LVU118
 346 003c 3368     		ldr	r3, [r6]
 347              	.LVL39:
 348              	.LBB18:
 349              	.LBI18:
 900:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 350              		.loc 2 900 31 is_stmt 1 view .LVU119
 351              	.LBB19:
 352              		.loc 2 903 3 view .LVU120
 353              		.loc 2 903 10 is_stmt 0 view .LVU121
 354 003e 1BBA     		rev	r3, r3
 355              	.LVL40:
 356              		.loc 2 903 10 view .LVU122
 357              	.LBE19:
 358              	.LBE18:
 359              		.loc 1 228 43 view .LVU123
 360 0040 0893     		str	r3, [sp, #32]
 229:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   keyaddr+=4;
 361              		.loc 1 229 3 is_stmt 1 view .LVU124
 362              	.LVL41:
 230:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 363              		.loc 1 230 3 view .LVU125
 364              		.loc 1 230 45 is_stmt 0 view .LVU126
 365 0042 7368     		ldr	r3, [r6, #4]
 366              	.LVL42:
 367              	.LBB20:
 368              	.LBI20:
 900:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 369              		.loc 2 900 31 is_stmt 1 view .LVU127
 370              	.LBB21:
 371              		.loc 2 903 3 view .LVU128
 372              		.loc 2 903 10 is_stmt 0 view .LVU129
 373 0044 1BBA     		rev	r3, r3
 374              	.LVL43:
 375              		.loc 2 903 10 view .LVU130
 376              	.LBE21:
 377              	.LBE20:
 378              		.loc 1 230 43 view .LVU131
 379 0046 0993     		str	r3, [sp, #36]
 231:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInit(& DES_CRYP_KeyInitStructure);
 380              		.loc 1 231 3 is_stmt 1 view .LVU132
ARM GAS  /tmp/ccVi0rSz.s 			page 28


 381 0048 06A8     		add	r0, sp, #24
 382 004a FFF7FEFF 		bl	CRYP_KeyInit
 383              	.LVL44:
 232:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 233:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Initialization Vectors */
 234:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 384              		.loc 1 234 3 view .LVU133
 385              		.loc 1 234 43 is_stmt 0 view .LVU134
 386 004e 2B68     		ldr	r3, [r5]
 387              	.LVL45:
 388              	.LBB22:
 389              	.LBI22:
 900:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 390              		.loc 2 900 31 is_stmt 1 view .LVU135
 391              	.LBB23:
 392              		.loc 2 903 3 view .LVU136
 393              		.loc 2 903 10 is_stmt 0 view .LVU137
 394 0050 1BBA     		rev	r3, r3
 395              	.LVL46:
 396              		.loc 2 903 10 view .LVU138
 397              	.LBE23:
 398              	.LBE22:
 399              		.loc 1 234 41 view .LVU139
 400 0052 0293     		str	r3, [sp, #8]
 235:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ivaddr+=4;
 401              		.loc 1 235 3 is_stmt 1 view .LVU140
 402              	.LVL47:
 236:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 403              		.loc 1 236 3 view .LVU141
 404              		.loc 1 236 43 is_stmt 0 view .LVU142
 405 0054 6B68     		ldr	r3, [r5, #4]
 406              	.LVL48:
 407              	.LBB24:
 408              	.LBI24:
 900:Drivers/CMSIS/Core/Include/cmsis_gcc.h **** {
 409              		.loc 2 900 31 is_stmt 1 view .LVU143
 410              	.LBB25:
 411              		.loc 2 903 3 view .LVU144
 412              		.loc 2 903 10 is_stmt 0 view .LVU145
 413 0056 1BBA     		rev	r3, r3
 414              	.LVL49:
 415              		.loc 2 903 10 view .LVU146
 416              	.LBE25:
 417              	.LBE24:
 418              		.loc 1 236 41 view .LVU147
 419 0058 0393     		str	r3, [sp, #12]
 237:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_IVInit(&DES_CRYP_IVInitStructure);
 420              		.loc 1 237 3 is_stmt 1 view .LVU148
 421 005a 02A8     		add	r0, sp, #8
 422 005c FFF7FEFF 		bl	CRYP_IVInit
 423              	.LVL50:
 238:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 239:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Flush IN/OUT FIFO */
 240:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_FIFOFlush();
 424              		.loc 1 240 3 view .LVU149
 425 0060 FFF7FEFF 		bl	CRYP_FIFOFlush
 426              	.LVL51:
ARM GAS  /tmp/ccVi0rSz.s 			page 29


 241:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   
 242:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Enable Crypto processor */
 243:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Cmd(ENABLE);
 427              		.loc 1 243 3 view .LVU150
 428 0064 0120     		movs	r0, #1
 429 0066 FFF7FEFF 		bl	CRYP_Cmd
 430              	.LVL52:
 244:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 245:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=8)
 431              		.loc 1 245 3 view .LVU151
 432              		.loc 1 245 8 is_stmt 0 view .LVU152
 433 006a 0025     		movs	r5, #0
 434              	.LVL53:
 203:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t keyaddr    = (uint32_t)Key;
 435              		.loc 1 203 15 view .LVU153
 436 006c 0126     		movs	r6, #1
 437              	.LVL54:
 438              		.loc 1 245 3 view .LVU154
 439 006e 06E0     		b	.L17
 440              	.LVL55:
 441              	.L25:
 216:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 442              		.loc 1 216 6 is_stmt 1 view .LVU155
 216:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 443              		.loc 1 216 43 is_stmt 0 view .LVU156
 444 0070 0023     		movs	r3, #0
 445 0072 ADF83830 		strh	r3, [sp, #56]	@ movhi
 446 0076 D8E7     		b	.L16
 447              	.LVL56:
 448              	.L18:
 246:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 247:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     /* Write the Input block in the Input FIFO */
 248:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 249:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 250:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 251:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 252:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 253:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     /* Wait until the complete message has been processed */
 254:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     counter = 0;
 255:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     do
 256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 257:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 258:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter++;
 259:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 260:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 261:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     if (busystatus != RESET)
 449              		.loc 1 261 5 is_stmt 1 view .LVU157
 450              		.loc 1 261 8 is_stmt 0 view .LVU158
 451 0078 D9B1     		cbz	r1, .L26
 262:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****    {
 263:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****        status = ERROR;
 452              		.loc 1 263 15 view .LVU159
 453 007a 0026     		movs	r6, #0
 454              	.LVL57:
 455              	.L20:
 245:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 456              		.loc 1 245 48 is_stmt 1 discriminator 2 view .LVU160
ARM GAS  /tmp/ccVi0rSz.s 			page 30


 245:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 457              		.loc 1 245 49 is_stmt 0 discriminator 2 view .LVU161
 458 007c 0835     		adds	r5, r5, #8
 459              	.LVL58:
 460              	.L17:
 245:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 461              		.loc 1 245 12 is_stmt 1 discriminator 1 view .LVU162
 245:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 462              		.loc 1 245 3 is_stmt 0 discriminator 1 view .LVU163
 463 007e 4545     		cmp	r5, r8
 464 0080 1FD2     		bcs	.L21
 245:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 465              		.loc 1 245 25 discriminator 3 view .LVU164
 466 0082 F6B1     		cbz	r6, .L21
 248:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 467              		.loc 1 248 5 is_stmt 1 view .LVU165
 468 0084 2068     		ldr	r0, [r4]
 469 0086 FFF7FEFF 		bl	CRYP_DataIn
 470              	.LVL59:
 249:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 471              		.loc 1 249 5 view .LVU166
 250:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 472              		.loc 1 250 5 view .LVU167
 473 008a 6068     		ldr	r0, [r4, #4]
 474 008c FFF7FEFF 		bl	CRYP_DataIn
 475              	.LVL60:
 251:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 476              		.loc 1 251 5 view .LVU168
 251:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 477              		.loc 1 251 14 is_stmt 0 view .LVU169
 478 0090 0834     		adds	r4, r4, #8
 479              	.LVL61:
 254:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     do
 480              		.loc 1 254 5 is_stmt 1 view .LVU170
 254:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     do
 481              		.loc 1 254 13 is_stmt 0 view .LVU171
 482 0092 0023     		movs	r3, #0
 483 0094 0193     		str	r3, [sp, #4]
 484              	.L19:
 255:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 485              		.loc 1 255 5 is_stmt 1 discriminator 2 view .LVU172
 257:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter++;
 486              		.loc 1 257 7 discriminator 2 view .LVU173
 257:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter++;
 487              		.loc 1 257 20 is_stmt 0 discriminator 2 view .LVU174
 488 0096 1020     		movs	r0, #16
 489 0098 FFF7FEFF 		bl	CRYP_GetFlagStatus
 490              	.LVL62:
 257:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter++;
 491              		.loc 1 257 18 discriminator 2 view .LVU175
 492 009c 0146     		mov	r1, r0
 493              	.LVL63:
 258:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 494              		.loc 1 258 7 is_stmt 1 discriminator 2 view .LVU176
 258:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 495              		.loc 1 258 14 is_stmt 0 discriminator 2 view .LVU177
 496 009e 019A     		ldr	r2, [sp, #4]
ARM GAS  /tmp/ccVi0rSz.s 			page 31


 497 00a0 0132     		adds	r2, r2, #1
 498 00a2 0192     		str	r2, [sp, #4]
 259:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 499              		.loc 1 259 12 is_stmt 1 discriminator 2 view .LVU178
 259:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 500              		.loc 1 259 22 is_stmt 0 discriminator 2 view .LVU179
 501 00a4 019B     		ldr	r3, [sp, #4]
 259:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 502              		.loc 1 259 5 discriminator 2 view .LVU180
 503 00a6 B3F5803F 		cmp	r3, #65536
 504 00aa E5D0     		beq	.L18
 259:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 505              		.loc 1 259 42 discriminator 1 view .LVU181
 506 00ac 0028     		cmp	r0, #0
 507 00ae F2D1     		bne	.L19
 508 00b0 E2E7     		b	.L18
 509              	.L26:
 264:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }
 265:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     else
 266:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 267:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       /* Read the Output block from the Output FIFO */
 268:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 510              		.loc 1 268 7 is_stmt 1 view .LVU182
 511              		.loc 1 268 34 is_stmt 0 view .LVU183
 512 00b2 FFF7FEFF 		bl	CRYP_DataOut
 513              	.LVL64:
 514              		.loc 1 268 32 view .LVU184
 515 00b6 3860     		str	r0, [r7]
 269:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       outputaddr+=4;
 516              		.loc 1 269 7 is_stmt 1 view .LVU185
 517              	.LVL65:
 270:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 518              		.loc 1 270 7 view .LVU186
 519              		.loc 1 270 34 is_stmt 0 view .LVU187
 520 00b8 FFF7FEFF 		bl	CRYP_DataOut
 521              	.LVL66:
 522              		.loc 1 270 32 view .LVU188
 523 00bc 7860     		str	r0, [r7, #4]
 271:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       outputaddr+=4;
 524              		.loc 1 271 7 is_stmt 1 view .LVU189
 525              		.loc 1 271 17 is_stmt 0 view .LVU190
 526 00be 0837     		adds	r7, r7, #8
 527              	.LVL67:
 528              		.loc 1 271 17 view .LVU191
 529 00c0 DCE7     		b	.L20
 530              	.L21:
 272:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }
 273:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 274:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 275:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Disable Crypto */
 276:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Cmd(DISABLE);
 531              		.loc 1 276 3 is_stmt 1 view .LVU192
 532 00c2 0020     		movs	r0, #0
 533 00c4 FFF7FEFF 		bl	CRYP_Cmd
 534              	.LVL68:
 277:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 278:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   return status; 
ARM GAS  /tmp/ccVi0rSz.s 			page 32


 535              		.loc 1 278 3 view .LVU193
 279:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** }
 536              		.loc 1 279 1 is_stmt 0 view .LVU194
 537 00c8 3046     		mov	r0, r6
 538 00ca 11B0     		add	sp, sp, #68
 539              	.LCFI5:
 540              		.cfi_def_cfa_offset 28
 541              		@ sp needed
 542 00cc BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 543              		.loc 1 279 1 view .LVU195
 544              		.cfi_endproc
 545              	.LFE131:
 547              		.text
 548              	.Letext0:
 549              		.file 3 "/home/way/Programs/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 550              		.file 4 "/home/way/Programs/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 551              		.file 5 "Drivers/CMSIS/Core/Include/core_cm4.h"
 552              		.file 6 "Inc/system_stm32f4xx.h"
 553              		.file 7 "Inc/stm32f4xx.h"
 554              		.file 8 "Drivers/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
ARM GAS  /tmp/ccVi0rSz.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_cryp_des.c
     /tmp/ccVi0rSz.s:18     .text.CRYP_DES_ECB:0000000000000000 $t
     /tmp/ccVi0rSz.s:26     .text.CRYP_DES_ECB:0000000000000000 CRYP_DES_ECB
     /tmp/ccVi0rSz.s:262    .text.CRYP_DES_CBC:0000000000000000 $t
     /tmp/ccVi0rSz.s:269    .text.CRYP_DES_CBC:0000000000000000 CRYP_DES_CBC

UNDEFINED SYMBOLS
CRYP_KeyStructInit
CRYP_Init
CRYP_KeyInit
CRYP_FIFOFlush
CRYP_Cmd
CRYP_DataIn
CRYP_GetFlagStatus
CRYP_DataOut
CRYP_IVInit
