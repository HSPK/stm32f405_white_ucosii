ARM GAS  /tmp/ccum4pBp.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.USART_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	USART_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	USART_DeInit:
  27              	.LVL0:
  28              	.LFB130:
  29              		.file 1 "Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c"
   1:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
   2:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @file    stm32f4xx_usart.c
   4:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @version V1.0.2
   6:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @date    05-March-2012
   7:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief   This file provides firmware functions to manage the following 
   8:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          functionalities of the Universal synchronous asynchronous receiver
   9:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          transmitter (USART):           
  10:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           - Initialization and Configuration
  11:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           - Data transfers
  12:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           - Multi-Processor Communication
  13:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           - LIN mode
  14:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           - Half-duplex mode
  15:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           - Smartcard mode
  16:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           - IrDA mode
  17:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           - DMA transfers management
  18:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           - Interrupts and flags management 
  19:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           
  20:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *  @verbatim
  21:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *      
  22:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          ===================================================================
  23:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                                 How to use this driver
  24:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          ===================================================================
  25:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          1. Enable peripheral clock using the follwoing functions
  26:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *             RCC_APB2PeriphClockCmd(RCC_APB2Periph_USARTx, ENABLE) for USART1 and USART6 
  27:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *             RCC_APB1PeriphClockCmd(RCC_APB1Periph_USARTx, ENABLE) for USART2, USART3, UART4 or 
  28:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  29:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          2.  According to the USART mode, enable the GPIO clocks using 
ARM GAS  /tmp/ccum4pBp.s 			page 2


  30:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *              RCC_AHB1PeriphClockCmd() function. (The I/O can be TX, RX, CTS, 
  31:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *              or/and SCLK). 
  32:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  33:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          3. Peripheral's alternate function: 
  34:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  35:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  36:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                 - Configure the desired pin in alternate function by:
  37:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  38:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  39:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  40:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                 - Call GPIO_Init() function
  41:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *        
  42:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          4. Program the Baud Rate, Word Length , Stop Bit, Parity, Hardware 
  43:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *             flow control and Mode(Receiver/Transmitter) using the USART_Init()
  44:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *             function.
  45:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  46:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          5. For synchronous mode, enable the clock and program the polarity,
  47:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *             phase and last bit using the USART_ClockInit() function.
  48:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  49:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          5. Enable the NVIC and the corresponding interrupt using the function 
  50:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *             USART_ITConfig() if you need to use interrupt mode. 
  51:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  52:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          6. When using the DMA mode 
  53:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                   - Configure the DMA using DMA_Init() function
  54:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                   - Active the needed channel Request using USART_DMACmd() function
  55:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * 
  56:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          7. Enable the USART using the USART_Cmd() function.
  57:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * 
  58:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          8. Enable the DMA using the DMA_Cmd() function, when using DMA mode. 
  59:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  60:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          Refer to Multi-Processor, LIN, half-duplex, Smartcard, IrDA sub-sections
  61:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          for more details
  62:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          
  63:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          In order to reach higher communication baudrates, it is possible to
  64:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          enable the oversampling by 8 mode using the function USART_OverSampling8Cmd().
  65:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This function should be called after enabling the USART clock (RCC_APBxPeriphClockCmd(
  66:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          and before calling the function USART_Init().
  67:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          
  68:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *  @endverbatim
  69:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *        
  70:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   ******************************************************************************
  71:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @attention
  72:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  73:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  74:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  75:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  76:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * You may not use this file except in compliance with the License.
  77:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * You may obtain a copy of the License at:
  78:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  79:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  80:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  81:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * Unless required by applicable law or agreed to in writing, software 
  82:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  83:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  84:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * See the License for the specific language governing permissions and
  85:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * limitations under the License.
  86:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
ARM GAS  /tmp/ccum4pBp.s 			page 3


  87:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   ******************************************************************************
  88:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */ 
  89:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
  90:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Includes ------------------------------------------------------------------*/
  91:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** #include "stm32f4xx_usart.h"
  92:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** #include "stm32f4xx_rcc.h"
  93:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
  94:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  95:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
  96:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
  97:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
  98:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART 
  99:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief USART driver modules
 100:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 101:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 102:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 103:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Private typedef -----------------------------------------------------------*/
 104:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Private define ------------------------------------------------------------*/
 105:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 106:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*!< USART CR1 register clear Mask ((~(uint16_t)0xE9F3)) */
 107:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** #define CR1_CLEAR_MASK            ((uint16_t)(USART_CR1_M | USART_CR1_PCE | \
 108:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                                               USART_CR1_PS | USART_CR1_TE | \
 109:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                                               USART_CR1_RE))
 110:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 111:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*!< USART CR2 register clock bits clear Mask ((~(uint16_t)0xF0FF)) */
 112:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** #define CR2_CLOCK_CLEAR_MASK      ((uint16_t)(USART_CR2_CLKEN | USART_CR2_CPOL | \
 113:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                                               USART_CR2_CPHA | USART_CR2_LBCL))
 114:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 115:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*!< USART CR3 register clear Mask ((~(uint16_t)0xFCFF)) */
 116:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** #define CR3_CLEAR_MASK            ((uint16_t)(USART_CR3_RTSE | USART_CR3_CTSE))
 117:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 118:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*!< USART Interrupts mask */
 119:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** #define IT_MASK                   ((uint16_t)0x001F)
 120:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 121:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Private macro -------------------------------------------------------------*/
 122:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Private variables ---------------------------------------------------------*/
 123:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Private function prototypes -----------------------------------------------*/
 124:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Private functions ---------------------------------------------------------*/
 125:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 126:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Private_Functions
 127:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 128:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 129:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 130:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group1 Initialization and Configuration functions
 131:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   Initialization and Configuration functions 
 132:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 133:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 134:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 135:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                   Initialization and Configuration functions
 136:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 137:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 138:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to initialize the USART 
 139:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   in asynchronous and in synchronous modes.
 140:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    - For the asynchronous mode only these parameters can be configured: 
 141:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Baud Rate
 142:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Word Length 
 143:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Stop Bit
ARM GAS  /tmp/ccum4pBp.s 			page 4


 144:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Parity: If the parity is enabled, then the MSB bit of the data written
 145:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           in the data register is transmitted but is changed by the parity bit.
 146:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           Depending on the frame length defined by the M bit (8-bits or 9-bits),
 147:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           the possible USART frame formats are as listed in the following table:
 148:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    +-------------------------------------------------------------+     
 149:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |   M bit |  PCE bit  |            USART frame                |
 150:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |---------------------|---------------------------------------|             
 151:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |    0    |    0      |    | SB | 8 bit data | STB |          |
 152:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |---------|-----------|---------------------------------------|  
 153:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 154:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |---------|-----------|---------------------------------------|  
 155:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |    1    |    0      |    | SB | 9 bit data | STB |          |
 156:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |---------|-----------|---------------------------------------|  
 157:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 158:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    +-------------------------------------------------------------+            
 159:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Hardware flow control
 160:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Receiver/transmitter modes
 161:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 162:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   The USART_Init() function follows the USART  asynchronous configuration procedure
 163:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   (details for the procedure are available in reference manual (RM0090)).
 164:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 165:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   - For the synchronous mode in addition to the asynchronous mode parameters these 
 166:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     parameters should be also configured:
 167:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - USART Clock Enabled
 168:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - USART polarity
 169:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - USART phase
 170:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - USART LastBit
 171:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 172:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   These parameters can be configured using the USART_ClockInit() function.
 173:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 174:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
 175:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 176:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 177:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 178:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 179:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Deinitializes the USARTx peripheral registers to their default reset values.
 180:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 181:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 182:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 183:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 184:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_DeInit(USART_TypeDef* USARTx)
 185:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
  30              		.loc 1 185 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 185 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 186:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 187:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
  40              		.loc 1 187 3 is_stmt 1 view .LVU2
 188:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 189:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (USARTx == USART1)
ARM GAS  /tmp/ccum4pBp.s 			page 5


  41              		.loc 1 189 3 view .LVU3
  42              		.loc 1 189 6 is_stmt 0 view .LVU4
  43 0002 284B     		ldr	r3, .L15
  44 0004 9842     		cmp	r0, r3
  45 0006 0FD0     		beq	.L9
 190:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 191:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, ENABLE);
 192:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, DISABLE);
 193:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 194:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (USARTx == USART2)
  46              		.loc 1 194 8 is_stmt 1 view .LVU5
  47              		.loc 1 194 11 is_stmt 0 view .LVU6
  48 0008 274B     		ldr	r3, .L15+4
  49 000a 9842     		cmp	r0, r3
  50 000c 15D0     		beq	.L10
 195:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 196:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, ENABLE);
 197:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, DISABLE);
 198:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 199:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (USARTx == USART3)
  51              		.loc 1 199 8 is_stmt 1 view .LVU7
  52              		.loc 1 199 11 is_stmt 0 view .LVU8
  53 000e 274B     		ldr	r3, .L15+8
  54 0010 9842     		cmp	r0, r3
  55 0012 1DD0     		beq	.L11
 200:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 201:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, ENABLE);
 202:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, DISABLE);
 203:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }    
 204:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (USARTx == UART4)
  56              		.loc 1 204 8 is_stmt 1 view .LVU9
  57              		.loc 1 204 11 is_stmt 0 view .LVU10
  58 0014 264B     		ldr	r3, .L15+12
  59 0016 9842     		cmp	r0, r3
  60 0018 25D0     		beq	.L12
 205:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 206:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, ENABLE);
 207:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
 208:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 209:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (USARTx == UART5)
  61              		.loc 1 209 8 is_stmt 1 view .LVU11
  62              		.loc 1 209 11 is_stmt 0 view .LVU12
  63 001a 264B     		ldr	r3, .L15+16
  64 001c 9842     		cmp	r0, r3
  65 001e 2DD0     		beq	.L13
 210:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 211:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
 212:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
 213:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }     
 214:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 215:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 216:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     if (USARTx == USART6)
  66              		.loc 1 216 5 is_stmt 1 view .LVU13
  67              		.loc 1 216 8 is_stmt 0 view .LVU14
  68 0020 254B     		ldr	r3, .L15+20
  69 0022 9842     		cmp	r0, r3
  70 0024 35D0     		beq	.L14
ARM GAS  /tmp/ccum4pBp.s 			page 6


  71              	.LVL1:
  72              	.L1:
 217:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     { 
 218:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART6, ENABLE);
 219:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART6, DISABLE);
 220:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     }
 221:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 222:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
  73              		.loc 1 222 1 view .LVU15
  74 0026 08BD     		pop	{r3, pc}
  75              	.LVL2:
  76              	.L9:
 191:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, DISABLE);
  77              		.loc 1 191 5 is_stmt 1 view .LVU16
  78 0028 0121     		movs	r1, #1
  79 002a 1020     		movs	r0, #16
  80              	.LVL3:
 191:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, DISABLE);
  81              		.loc 1 191 5 is_stmt 0 view .LVU17
  82 002c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  83              	.LVL4:
 192:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
  84              		.loc 1 192 5 is_stmt 1 view .LVU18
  85 0030 0021     		movs	r1, #0
  86 0032 1020     		movs	r0, #16
  87 0034 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  88              	.LVL5:
  89 0038 F5E7     		b	.L1
  90              	.LVL6:
  91              	.L10:
 196:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, DISABLE);
  92              		.loc 1 196 5 view .LVU19
  93 003a 0121     		movs	r1, #1
  94 003c 4FF40030 		mov	r0, #131072
  95              	.LVL7:
 196:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, DISABLE);
  96              		.loc 1 196 5 is_stmt 0 view .LVU20
  97 0040 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  98              	.LVL8:
 197:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
  99              		.loc 1 197 5 is_stmt 1 view .LVU21
 100 0044 0021     		movs	r1, #0
 101 0046 4FF40030 		mov	r0, #131072
 102 004a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 103              	.LVL9:
 104 004e EAE7     		b	.L1
 105              	.LVL10:
 106              	.L11:
 201:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, DISABLE);
 107              		.loc 1 201 5 view .LVU22
 108 0050 0121     		movs	r1, #1
 109 0052 4FF48020 		mov	r0, #262144
 110              	.LVL11:
 201:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, DISABLE);
 111              		.loc 1 201 5 is_stmt 0 view .LVU23
 112 0056 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 113              	.LVL12:
ARM GAS  /tmp/ccum4pBp.s 			page 7


 202:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }    
 114              		.loc 1 202 5 is_stmt 1 view .LVU24
 115 005a 0021     		movs	r1, #0
 116 005c 4FF48020 		mov	r0, #262144
 117 0060 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 118              	.LVL13:
 119 0064 DFE7     		b	.L1
 120              	.LVL14:
 121              	.L12:
 206:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
 122              		.loc 1 206 5 view .LVU25
 123 0066 0121     		movs	r1, #1
 124 0068 4FF40020 		mov	r0, #524288
 125              	.LVL15:
 206:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
 126              		.loc 1 206 5 is_stmt 0 view .LVU26
 127 006c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 128              	.LVL16:
 207:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 129              		.loc 1 207 5 is_stmt 1 view .LVU27
 130 0070 0021     		movs	r1, #0
 131 0072 4FF40020 		mov	r0, #524288
 132 0076 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 133              	.LVL17:
 134 007a D4E7     		b	.L1
 135              	.LVL18:
 136              	.L13:
 211:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
 137              		.loc 1 211 5 view .LVU28
 138 007c 0121     		movs	r1, #1
 139 007e 4FF48010 		mov	r0, #1048576
 140              	.LVL19:
 211:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
 141              		.loc 1 211 5 is_stmt 0 view .LVU29
 142 0082 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 143              	.LVL20:
 212:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }     
 144              		.loc 1 212 5 is_stmt 1 view .LVU30
 145 0086 0021     		movs	r1, #0
 146 0088 4FF48010 		mov	r0, #1048576
 147 008c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 148              	.LVL21:
 149 0090 C9E7     		b	.L1
 150              	.LVL22:
 151              	.L14:
 218:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART6, DISABLE);
 152              		.loc 1 218 7 view .LVU31
 153 0092 0121     		movs	r1, #1
 154 0094 2020     		movs	r0, #32
 155              	.LVL23:
 218:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART6, DISABLE);
 156              		.loc 1 218 7 is_stmt 0 view .LVU32
 157 0096 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 158              	.LVL24:
 219:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     }
 159              		.loc 1 219 7 is_stmt 1 view .LVU33
 160 009a 0021     		movs	r1, #0
ARM GAS  /tmp/ccum4pBp.s 			page 8


 161 009c 2020     		movs	r0, #32
 162 009e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 163              	.LVL25:
 164              		.loc 1 222 1 is_stmt 0 view .LVU34
 165 00a2 C0E7     		b	.L1
 166              	.L16:
 167              		.align	2
 168              	.L15:
 169 00a4 00100140 		.word	1073811456
 170 00a8 00440040 		.word	1073759232
 171 00ac 00480040 		.word	1073760256
 172 00b0 004C0040 		.word	1073761280
 173 00b4 00500040 		.word	1073762304
 174 00b8 00140140 		.word	1073812480
 175              		.cfi_endproc
 176              	.LFE130:
 178              		.section	.text.USART_Init,"ax",%progbits
 179              		.align	1
 180              		.global	USART_Init
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	USART_Init:
 187              	.LVL26:
 188              	.LFB131:
 223:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 224:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 225:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Initializes the USARTx peripheral according to the specified
 226:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         parameters in the USART_InitStruct .
 227:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 228:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 229:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure that contains
 230:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         the configuration information for the specified USART peripheral.
 231:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 232:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 233:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
 234:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 189              		.loc 1 234 1 is_stmt 1 view -0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 16
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		.loc 1 234 1 is_stmt 0 view .LVU36
 194 0000 30B5     		push	{r4, r5, lr}
 195              	.LCFI1:
 196              		.cfi_def_cfa_offset 12
 197              		.cfi_offset 4, -12
 198              		.cfi_offset 5, -8
 199              		.cfi_offset 14, -4
 200 0002 85B0     		sub	sp, sp, #20
 201              	.LCFI2:
 202              		.cfi_def_cfa_offset 32
 203 0004 0446     		mov	r4, r0
 204 0006 0D46     		mov	r5, r1
 235:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t tmpreg = 0x00, apbclock = 0x00;
 205              		.loc 1 235 3 is_stmt 1 view .LVU37
 206              	.LVL27:
ARM GAS  /tmp/ccum4pBp.s 			page 9


 236:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t integerdivider = 0x00;
 207              		.loc 1 236 3 view .LVU38
 237:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t fractionaldivider = 0x00;
 208              		.loc 1 237 3 view .LVU39
 238:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   RCC_ClocksTypeDef RCC_ClocksStatus;
 209              		.loc 1 238 3 view .LVU40
 239:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 240:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 241:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 210              		.loc 1 241 3 view .LVU41
 242:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_BAUDRATE(USART_InitStruct->USART_BaudRate));  
 211              		.loc 1 242 3 view .LVU42
 243:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_WORD_LENGTH(USART_InitStruct->USART_WordLength));
 212              		.loc 1 243 3 view .LVU43
 244:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_STOPBITS(USART_InitStruct->USART_StopBits));
 213              		.loc 1 244 3 view .LVU44
 245:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_PARITY(USART_InitStruct->USART_Parity));
 214              		.loc 1 245 3 view .LVU45
 246:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_MODE(USART_InitStruct->USART_Mode));
 215              		.loc 1 246 3 view .LVU46
 247:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_HARDWARE_FLOW_CONTROL(USART_InitStruct->USART_HardwareFlowControl));
 216              		.loc 1 247 3 view .LVU47
 248:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 249:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* The hardware flow control is available only for USART1, USART2, USART3 and USART6 */
 250:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (USART_InitStruct->USART_HardwareFlowControl != USART_HardwareFlowControl_None)
 217              		.loc 1 250 3 view .LVU48
 251:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 252:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
 218              		.loc 1 252 5 view .LVU49
 253:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 254:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 255:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*---------------------------- USART CR2 Configuration -----------------------*/
 256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR2;
 219              		.loc 1 256 3 view .LVU50
 220              		.loc 1 256 18 is_stmt 0 view .LVU51
 221 0008 038A     		ldrh	r3, [r0, #16]
 222 000a 9BB2     		uxth	r3, r3
 223              	.LVL28:
 257:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 258:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear STOP[13:12] bits */
 259:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 224              		.loc 1 259 3 is_stmt 1 view .LVU52
 225              		.loc 1 259 10 is_stmt 0 view .LVU53
 226 000c 23F44053 		bic	r3, r3, #12288
 227              	.LVL29:
 260:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 261:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Configure the USART Stop Bits, Clock, CPOL, CPHA and LastBit :
 262:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       Set STOP[13:12] bits according to USART_StopBits value */
 263:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg |= (uint32_t)USART_InitStruct->USART_StopBits;
 228              		.loc 1 263 3 is_stmt 1 view .LVU54
 229              		.loc 1 263 39 is_stmt 0 view .LVU55
 230 0010 CA88     		ldrh	r2, [r1, #6]
 231              	.LVL30:
 264:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 265:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Write to USART CR2 */
 266:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR2 = (uint16_t)tmpreg;
 232              		.loc 1 266 3 is_stmt 1 view .LVU56
ARM GAS  /tmp/ccum4pBp.s 			page 10


 233              		.loc 1 266 17 is_stmt 0 view .LVU57
 234 0012 1343     		orrs	r3, r3, r2
 235              	.LVL31:
 236              		.loc 1 266 15 view .LVU58
 237 0014 0382     		strh	r3, [r0, #16]	@ movhi
 267:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 268:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*---------------------------- USART CR1 Configuration -----------------------*/
 269:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR1;
 238              		.loc 1 269 3 is_stmt 1 view .LVU59
 239              		.loc 1 269 18 is_stmt 0 view .LVU60
 240 0016 8389     		ldrh	r3, [r0, #12]
 241              	.LVL32:
 242              		.loc 1 269 18 view .LVU61
 243 0018 9BB2     		uxth	r3, r3
 244              	.LVL33:
 270:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 271:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear M, PCE, PS, TE and RE bits */
 272:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR1_CLEAR_MASK);
 245              		.loc 1 272 3 is_stmt 1 view .LVU62
 246              		.loc 1 272 10 is_stmt 0 view .LVU63
 247 001a 23F4B053 		bic	r3, r3, #5632
 248              	.LVL34:
 249              		.loc 1 272 10 view .LVU64
 250 001e 23F00C03 		bic	r3, r3, #12
 251              	.LVL35:
 273:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 274:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Configure the USART Word Length, Parity and mode: 
 275:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      Set the M bits according to USART_WordLength value 
 276:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      Set PCE and PS bits according to USART_Parity value
 277:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      Set TE and RE bits according to USART_Mode value */
 278:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 252              		.loc 1 278 3 is_stmt 1 view .LVU65
 253              		.loc 1 278 39 is_stmt 0 view .LVU66
 254 0022 8988     		ldrh	r1, [r1, #4]
 255              	.LVL36:
 256              		.loc 1 278 76 view .LVU67
 257 0024 2889     		ldrh	r0, [r5, #8]
 258              	.LVL37:
 279:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****             USART_InitStruct->USART_Mode;
 259              		.loc 1 279 29 view .LVU68
 260 0026 6A89     		ldrh	r2, [r5, #10]
 278:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****             USART_InitStruct->USART_Mode;
 261              		.loc 1 278 91 view .LVU69
 262 0028 0143     		orrs	r1, r1, r0
 263 002a 0A43     		orrs	r2, r2, r1
 264              	.LVL38:
 280:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 281:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Write to USART CR1 */
 282:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR1 = (uint16_t)tmpreg;
 265              		.loc 1 282 3 is_stmt 1 view .LVU70
 266              		.loc 1 282 17 is_stmt 0 view .LVU71
 267 002c 1343     		orrs	r3, r3, r2
 268              	.LVL39:
 269              		.loc 1 282 15 view .LVU72
 270 002e A381     		strh	r3, [r4, #12]	@ movhi
 283:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 284:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*---------------------------- USART CR3 Configuration -----------------------*/  
ARM GAS  /tmp/ccum4pBp.s 			page 11


 285:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR3;
 271              		.loc 1 285 3 is_stmt 1 view .LVU73
 272              		.loc 1 285 18 is_stmt 0 view .LVU74
 273 0030 A38A     		ldrh	r3, [r4, #20]
 274              	.LVL40:
 275              		.loc 1 285 18 view .LVU75
 276 0032 9BB2     		uxth	r3, r3
 277              	.LVL41:
 286:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 287:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear CTSE and RTSE bits */
 288:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR3_CLEAR_MASK);
 278              		.loc 1 288 3 is_stmt 1 view .LVU76
 279              		.loc 1 288 10 is_stmt 0 view .LVU77
 280 0034 23F44073 		bic	r3, r3, #768
 281              	.LVL42:
 289:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 290:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Configure the USART HFC : 
 291:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       Set CTSE and RTSE bits according to USART_HardwareFlowControl value */
 292:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
 282              		.loc 1 292 3 is_stmt 1 view .LVU78
 283              		.loc 1 292 29 is_stmt 0 view .LVU79
 284 0038 AA89     		ldrh	r2, [r5, #12]
 285              	.LVL43:
 293:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 294:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Write to USART CR3 */
 295:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR3 = (uint16_t)tmpreg;
 286              		.loc 1 295 3 is_stmt 1 view .LVU80
 287              		.loc 1 295 17 is_stmt 0 view .LVU81
 288 003a 1343     		orrs	r3, r3, r2
 289              	.LVL44:
 290              		.loc 1 295 15 view .LVU82
 291 003c A382     		strh	r3, [r4, #20]	@ movhi
 296:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 297:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*---------------------------- USART BRR Configuration -----------------------*/
 298:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Configure the USART Baud Rate */
 299:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   RCC_GetClocksFreq(&RCC_ClocksStatus);
 292              		.loc 1 299 3 is_stmt 1 view .LVU83
 293 003e 6846     		mov	r0, sp
 294 0040 FFF7FEFF 		bl	RCC_GetClocksFreq
 295              	.LVL45:
 300:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 301:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if ((USARTx == USART1) || (USARTx == USART6))
 296              		.loc 1 301 3 view .LVU84
 297              		.loc 1 301 6 is_stmt 0 view .LVU85
 298 0044 204B     		ldr	r3, .L28
 299 0046 9C42     		cmp	r4, r3
 300 0048 05D0     		beq	.L18
 301              		.loc 1 301 26 discriminator 1 view .LVU86
 302 004a 03F58063 		add	r3, r3, #1024
 303 004e 9C42     		cmp	r4, r3
 304 0050 01D0     		beq	.L18
 302:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 303:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     apbclock = RCC_ClocksStatus.PCLK2_Frequency;
 304:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 305:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 306:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 307:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     apbclock = RCC_ClocksStatus.PCLK1_Frequency;
ARM GAS  /tmp/ccum4pBp.s 			page 12


 305              		.loc 1 307 5 is_stmt 1 view .LVU87
 306              		.loc 1 307 14 is_stmt 0 view .LVU88
 307 0052 029B     		ldr	r3, [sp, #8]
 308              	.LVL46:
 309              		.loc 1 307 14 view .LVU89
 310 0054 00E0     		b	.L20
 311              	.LVL47:
 312              	.L18:
 303:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 313              		.loc 1 303 5 is_stmt 1 view .LVU90
 303:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 314              		.loc 1 303 14 is_stmt 0 view .LVU91
 315 0056 039B     		ldr	r3, [sp, #12]
 316              	.LVL48:
 317              	.L20:
 308:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 309:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 310:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Determine the integer part */
 311:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if ((USARTx->CR1 & USART_CR1_OVER8) != 0)
 318              		.loc 1 311 3 is_stmt 1 view .LVU92
 319              		.loc 1 311 14 is_stmt 0 view .LVU93
 320 0058 A289     		ldrh	r2, [r4, #12]
 321              		.loc 1 311 6 view .LVU94
 322 005a 12F4004F 		tst	r2, #32768
 323 005e 1FD1     		bne	.L26
 312:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 313:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Integer part computing in case Oversampling mode is 8 Samples */
 314:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     integerdivider = ((25 * apbclock) / (2 * (USART_InitStruct->USART_BaudRate)));    
 315:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 316:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else /* if ((USARTx->CR1 & USART_CR1_OVER8) == 0) */
 317:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 318:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Integer part computing in case Oversampling mode is 16 Samples */
 319:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     integerdivider = ((25 * apbclock) / (4 * (USART_InitStruct->USART_BaudRate)));    
 324              		.loc 1 319 5 is_stmt 1 view .LVU95
 325              		.loc 1 319 27 is_stmt 0 view .LVU96
 326 0060 03EB8303 		add	r3, r3, r3, lsl #2
 327              	.LVL49:
 328              		.loc 1 319 27 view .LVU97
 329 0064 03EB8303 		add	r3, r3, r3, lsl #2
 330              		.loc 1 319 63 view .LVU98
 331 0068 2968     		ldr	r1, [r5]
 332              		.loc 1 319 44 view .LVU99
 333 006a 8900     		lsls	r1, r1, #2
 334              		.loc 1 319 20 view .LVU100
 335 006c B3FBF1F1 		udiv	r1, r3, r1
 336              	.LVL50:
 337              	.L22:
 320:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 321:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg = (integerdivider / 100) << 4;
 338              		.loc 1 321 3 is_stmt 1 view .LVU101
 339              		.loc 1 321 28 is_stmt 0 view .LVU102
 340 0070 164B     		ldr	r3, .L28+4
 341 0072 A3FB0123 		umull	r2, r3, r3, r1
 342 0076 5809     		lsrs	r0, r3, #5
 343              		.loc 1 321 10 view .LVU103
 344 0078 0501     		lsls	r5, r0, #4
 345              	.LVL51:
ARM GAS  /tmp/ccum4pBp.s 			page 13


 322:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 323:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Determine the fractional part */
 324:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   fractionaldivider = integerdivider - (100 * (tmpreg >> 4));
 346              		.loc 1 324 3 is_stmt 1 view .LVU104
 347              		.loc 1 324 21 is_stmt 0 view .LVU105
 348 007a 6423     		movs	r3, #100
 349 007c 00FB1313 		mls	r3, r0, r3, r1
 350              	.LVL52:
 325:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 326:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Implement the fractional part in the register */
 327:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if ((USARTx->CR1 & USART_CR1_OVER8) != 0)
 351              		.loc 1 327 3 is_stmt 1 view .LVU106
 352              		.loc 1 327 14 is_stmt 0 view .LVU107
 353 0080 A289     		ldrh	r2, [r4, #12]
 354              		.loc 1 327 6 view .LVU108
 355 0082 12F4004F 		tst	r2, #32768
 356 0086 14D1     		bne	.L27
 328:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     tmpreg |= ((((fractionaldivider * 8) + 50) / 100)) & ((uint8_t)0x07);
 330:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 331:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else /* if ((USARTx->CR1 & USART_CR1_OVER8) == 0) */
 332:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 333:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     tmpreg |= ((((fractionaldivider * 16) + 50) / 100)) & ((uint8_t)0x0F);
 357              		.loc 1 333 5 is_stmt 1 view .LVU109
 358              		.loc 1 333 37 is_stmt 0 view .LVU110
 359 0088 1B01     		lsls	r3, r3, #4
 360              	.LVL53:
 361              		.loc 1 333 43 view .LVU111
 362 008a 3233     		adds	r3, r3, #50
 363              		.loc 1 333 49 view .LVU112
 364 008c 0F4A     		ldr	r2, .L28+4
 365 008e A2FB0323 		umull	r2, r3, r2, r3
 366              		.loc 1 333 57 view .LVU113
 367 0092 C3F34313 		ubfx	r3, r3, #5, #4
 368              		.loc 1 333 12 view .LVU114
 369 0096 2B43     		orrs	r3, r3, r5
 370              	.LVL54:
 371              	.L24:
 334:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 335:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 336:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Write to USART BRR register */
 337:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->BRR = (uint16_t)tmpreg;
 372              		.loc 1 337 3 is_stmt 1 view .LVU115
 373              		.loc 1 337 17 is_stmt 0 view .LVU116
 374 0098 9BB2     		uxth	r3, r3
 375              	.LVL55:
 376              		.loc 1 337 15 view .LVU117
 377 009a 2381     		strh	r3, [r4, #8]	@ movhi
 338:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 378              		.loc 1 338 1 view .LVU118
 379 009c 05B0     		add	sp, sp, #20
 380              	.LCFI3:
 381              		.cfi_remember_state
 382              		.cfi_def_cfa_offset 12
 383              		@ sp needed
 384 009e 30BD     		pop	{r4, r5, pc}
 385              	.LVL56:
ARM GAS  /tmp/ccum4pBp.s 			page 14


 386              	.L26:
 387              	.LCFI4:
 388              		.cfi_restore_state
 314:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 389              		.loc 1 314 5 is_stmt 1 view .LVU119
 314:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 390              		.loc 1 314 27 is_stmt 0 view .LVU120
 391 00a0 03EB8303 		add	r3, r3, r3, lsl #2
 392              	.LVL57:
 314:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 393              		.loc 1 314 27 view .LVU121
 394 00a4 03EB8303 		add	r3, r3, r3, lsl #2
 314:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 395              		.loc 1 314 63 view .LVU122
 396 00a8 2968     		ldr	r1, [r5]
 314:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 397              		.loc 1 314 44 view .LVU123
 398 00aa 4900     		lsls	r1, r1, #1
 314:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 399              		.loc 1 314 20 view .LVU124
 400 00ac B3FBF1F1 		udiv	r1, r3, r1
 401              	.LVL58:
 314:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 402              		.loc 1 314 20 view .LVU125
 403 00b0 DEE7     		b	.L22
 404              	.LVL59:
 405              	.L27:
 329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 406              		.loc 1 329 5 is_stmt 1 view .LVU126
 329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 407              		.loc 1 329 37 is_stmt 0 view .LVU127
 408 00b2 DA00     		lsls	r2, r3, #3
 329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 409              		.loc 1 329 42 view .LVU128
 410 00b4 3232     		adds	r2, r2, #50
 329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 411              		.loc 1 329 48 view .LVU129
 412 00b6 054B     		ldr	r3, .L28+4
 413              	.LVL60:
 329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 414              		.loc 1 329 48 view .LVU130
 415 00b8 A3FB0232 		umull	r3, r2, r3, r2
 329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 416              		.loc 1 329 56 view .LVU131
 417 00bc C2F34212 		ubfx	r2, r2, #5, #3
 329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 418              		.loc 1 329 12 view .LVU132
 419 00c0 42EA0503 		orr	r3, r2, r5
 420              	.LVL61:
 329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 421              		.loc 1 329 12 view .LVU133
 422 00c4 E8E7     		b	.L24
 423              	.L29:
 424 00c6 00BF     		.align	2
 425              	.L28:
 426 00c8 00100140 		.word	1073811456
 427 00cc 1F85EB51 		.word	1374389535
ARM GAS  /tmp/ccum4pBp.s 			page 15


 428              		.cfi_endproc
 429              	.LFE131:
 431              		.section	.text.USART_StructInit,"ax",%progbits
 432              		.align	1
 433              		.global	USART_StructInit
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu fpv4-sp-d16
 439              	USART_StructInit:
 440              	.LVL62:
 441              	.LFB132:
 339:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 340:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 341:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Fills each USART_InitStruct member with its default value.
 342:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure which will
 343:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         be initialized.
 344:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 345:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 346:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_StructInit(USART_InitTypeDef* USART_InitStruct)
 347:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 442              		.loc 1 347 1 is_stmt 1 view -0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 348:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* USART_InitStruct members default value */
 349:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_InitStruct->USART_BaudRate = 9600;
 447              		.loc 1 349 3 view .LVU135
 448              		.loc 1 349 36 is_stmt 0 view .LVU136
 449 0000 4FF41653 		mov	r3, #9600
 450 0004 0360     		str	r3, [r0]
 350:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_InitStruct->USART_WordLength = USART_WordLength_8b;
 451              		.loc 1 350 3 is_stmt 1 view .LVU137
 452              		.loc 1 350 38 is_stmt 0 view .LVU138
 453 0006 0023     		movs	r3, #0
 454 0008 8380     		strh	r3, [r0, #4]	@ movhi
 351:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_InitStruct->USART_StopBits = USART_StopBits_1;
 455              		.loc 1 351 3 is_stmt 1 view .LVU139
 456              		.loc 1 351 36 is_stmt 0 view .LVU140
 457 000a C380     		strh	r3, [r0, #6]	@ movhi
 352:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_InitStruct->USART_Parity = USART_Parity_No ;
 458              		.loc 1 352 3 is_stmt 1 view .LVU141
 459              		.loc 1 352 34 is_stmt 0 view .LVU142
 460 000c 0381     		strh	r3, [r0, #8]	@ movhi
 353:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_InitStruct->USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 461              		.loc 1 353 3 is_stmt 1 view .LVU143
 462              		.loc 1 353 32 is_stmt 0 view .LVU144
 463 000e 0C22     		movs	r2, #12
 464 0010 4281     		strh	r2, [r0, #10]	@ movhi
 354:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_InitStruct->USART_HardwareFlowControl = USART_HardwareFlowControl_None;  
 465              		.loc 1 354 3 is_stmt 1 view .LVU145
 466              		.loc 1 354 47 is_stmt 0 view .LVU146
 467 0012 8381     		strh	r3, [r0, #12]	@ movhi
 355:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 468              		.loc 1 355 1 view .LVU147
 469 0014 7047     		bx	lr
ARM GAS  /tmp/ccum4pBp.s 			page 16


 470              		.cfi_endproc
 471              	.LFE132:
 473              		.section	.text.USART_ClockInit,"ax",%progbits
 474              		.align	1
 475              		.global	USART_ClockInit
 476              		.syntax unified
 477              		.thumb
 478              		.thumb_func
 479              		.fpu fpv4-sp-d16
 481              	USART_ClockInit:
 482              	.LVL63:
 483              	.LFB133:
 356:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 357:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 358:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Initializes the USARTx peripheral Clock according to the 
 359:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         specified parameters in the USART_ClockInitStruct .
 360:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3 or 6 to select the USART peripheral.
 361:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_ClockInitStruct: pointer to a USART_ClockInitTypeDef structure that
 362:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         contains the configuration information for the specified  USART peripheral.
 363:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   The Smart Card and Synchronous modes are not available for UART4 and UART5.    
 364:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 365:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 366:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_ClockInit(USART_TypeDef* USARTx, USART_ClockInitTypeDef* USART_ClockInitStruct)
 367:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 484              		.loc 1 367 1 is_stmt 1 view -0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 489              		.loc 1 367 1 is_stmt 0 view .LVU149
 490 0000 70B4     		push	{r4, r5, r6}
 491              	.LCFI5:
 492              		.cfi_def_cfa_offset 12
 493              		.cfi_offset 4, -12
 494              		.cfi_offset 5, -8
 495              		.cfi_offset 6, -4
 368:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t tmpreg = 0x00;
 496              		.loc 1 368 3 is_stmt 1 view .LVU150
 497              	.LVL64:
 369:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 370:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_1236_PERIPH(USARTx));
 498              		.loc 1 370 3 view .LVU151
 371:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_CLOCK(USART_ClockInitStruct->USART_Clock));
 499              		.loc 1 371 3 view .LVU152
 372:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_CPOL(USART_ClockInitStruct->USART_CPOL));
 500              		.loc 1 372 3 view .LVU153
 373:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_CPHA(USART_ClockInitStruct->USART_CPHA));
 501              		.loc 1 373 3 view .LVU154
 374:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_LASTBIT(USART_ClockInitStruct->USART_LastBit));
 502              		.loc 1 374 3 view .LVU155
 375:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 376:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*---------------------------- USART CR2 Configuration -----------------------*/
 377:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR2;
 503              		.loc 1 377 3 view .LVU156
 504              		.loc 1 377 18 is_stmt 0 view .LVU157
 505 0002 038A     		ldrh	r3, [r0, #16]
 506 0004 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccum4pBp.s 			page 17


 507              	.LVL65:
 378:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear CLKEN, CPOL, CPHA and LBCL bits */
 379:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR2_CLOCK_CLEAR_MASK);
 508              		.loc 1 379 3 is_stmt 1 view .LVU158
 509              		.loc 1 379 10 is_stmt 0 view .LVU159
 510 0006 23F47062 		bic	r2, r3, #3840
 511              	.LVL66:
 380:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Configure the USART Clock, CPOL, CPHA and LastBit ------------*/
 381:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set CLKEN bit according to USART_Clock value */
 382:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set CPOL bit according to USART_CPOL value */
 383:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set CPHA bit according to USART_CPHA value */
 384:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set LBCL bit according to USART_LastBit value */
 385:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg |= (uint32_t)USART_ClockInitStruct->USART_Clock | USART_ClockInitStruct->USART_CPOL | 
 512              		.loc 1 385 3 is_stmt 1 view .LVU160
 513              		.loc 1 385 44 is_stmt 0 view .LVU161
 514 000a 0D88     		ldrh	r5, [r1]
 515              		.loc 1 385 81 view .LVU162
 516 000c 4E88     		ldrh	r6, [r1, #2]
 386:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                  USART_ClockInitStruct->USART_CPHA | USART_ClockInitStruct->USART_LastBit;
 517              		.loc 1 386 39 view .LVU163
 518 000e 8C88     		ldrh	r4, [r1, #4]
 519              		.loc 1 386 75 view .LVU164
 520 0010 CB88     		ldrh	r3, [r1, #6]
 521              		.loc 1 386 52 view .LVU165
 522 0012 45EA0601 		orr	r1, r5, r6
 523              	.LVL67:
 524              		.loc 1 386 52 view .LVU166
 525 0016 2143     		orrs	r1, r1, r4
 526 0018 0B43     		orrs	r3, r3, r1
 527              	.LVL68:
 387:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Write to USART CR2 */
 388:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR2 = (uint16_t)tmpreg;
 528              		.loc 1 388 3 is_stmt 1 view .LVU167
 529              		.loc 1 388 17 is_stmt 0 view .LVU168
 530 001a 1343     		orrs	r3, r3, r2
 531              	.LVL69:
 532              		.loc 1 388 15 view .LVU169
 533 001c 0382     		strh	r3, [r0, #16]	@ movhi
 389:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 534              		.loc 1 389 1 view .LVU170
 535 001e 70BC     		pop	{r4, r5, r6}
 536              	.LCFI6:
 537              		.cfi_restore 6
 538              		.cfi_restore 5
 539              		.cfi_restore 4
 540              		.cfi_def_cfa_offset 0
 541 0020 7047     		bx	lr
 542              		.cfi_endproc
 543              	.LFE133:
 545              		.section	.text.USART_ClockStructInit,"ax",%progbits
 546              		.align	1
 547              		.global	USART_ClockStructInit
 548              		.syntax unified
 549              		.thumb
 550              		.thumb_func
 551              		.fpu fpv4-sp-d16
 553              	USART_ClockStructInit:
ARM GAS  /tmp/ccum4pBp.s 			page 18


 554              	.LVL70:
 555              	.LFB134:
 390:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 391:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 392:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Fills each USART_ClockInitStruct member with its default value.
 393:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_ClockInitStruct: pointer to a USART_ClockInitTypeDef structure
 394:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         which will be initialized.
 395:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 396:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 397:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_ClockStructInit(USART_ClockInitTypeDef* USART_ClockInitStruct)
 398:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 556              		.loc 1 398 1 is_stmt 1 view -0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560              		@ link register save eliminated.
 399:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* USART_ClockInitStruct members default value */
 400:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_ClockInitStruct->USART_Clock = USART_Clock_Disable;
 561              		.loc 1 400 3 view .LVU172
 562              		.loc 1 400 38 is_stmt 0 view .LVU173
 563 0000 0023     		movs	r3, #0
 564 0002 0380     		strh	r3, [r0]	@ movhi
 401:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_ClockInitStruct->USART_CPOL = USART_CPOL_Low;
 565              		.loc 1 401 3 is_stmt 1 view .LVU174
 566              		.loc 1 401 37 is_stmt 0 view .LVU175
 567 0004 4380     		strh	r3, [r0, #2]	@ movhi
 402:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_ClockInitStruct->USART_CPHA = USART_CPHA_1Edge;
 568              		.loc 1 402 3 is_stmt 1 view .LVU176
 569              		.loc 1 402 37 is_stmt 0 view .LVU177
 570 0006 8380     		strh	r3, [r0, #4]	@ movhi
 403:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_ClockInitStruct->USART_LastBit = USART_LastBit_Disable;
 571              		.loc 1 403 3 is_stmt 1 view .LVU178
 572              		.loc 1 403 40 is_stmt 0 view .LVU179
 573 0008 C380     		strh	r3, [r0, #6]	@ movhi
 404:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 574              		.loc 1 404 1 view .LVU180
 575 000a 7047     		bx	lr
 576              		.cfi_endproc
 577              	.LFE134:
 579              		.section	.text.USART_Cmd,"ax",%progbits
 580              		.align	1
 581              		.global	USART_Cmd
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 585              		.fpu fpv4-sp-d16
 587              	USART_Cmd:
 588              	.LVL71:
 589              	.LFB135:
 405:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 406:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 407:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the specified USART peripheral.
 408:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 409:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 410:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USARTx peripheral.
 411:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 412:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
ARM GAS  /tmp/ccum4pBp.s 			page 19


 413:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 414:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
 415:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 590              		.loc 1 415 1 is_stmt 1 view -0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 594              		@ link register save eliminated.
 416:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 417:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 595              		.loc 1 417 3 view .LVU182
 418:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 596              		.loc 1 418 3 view .LVU183
 419:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 420:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 597              		.loc 1 420 3 view .LVU184
 598              		.loc 1 420 6 is_stmt 0 view .LVU185
 599 0000 29B1     		cbz	r1, .L35
 421:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 422:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the selected USART by setting the UE bit in the CR1 register */
 423:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR1 |= USART_CR1_UE;
 600              		.loc 1 423 5 is_stmt 1 view .LVU186
 601              		.loc 1 423 17 is_stmt 0 view .LVU187
 602 0002 8389     		ldrh	r3, [r0, #12]
 603 0004 9BB2     		uxth	r3, r3
 604 0006 43F40053 		orr	r3, r3, #8192
 605 000a 8381     		strh	r3, [r0, #12]	@ movhi
 606 000c 7047     		bx	lr
 607              	.L35:
 424:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 425:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 426:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 427:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the selected USART by clearing the UE bit in the CR1 register */
 428:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR1 &= (uint16_t)~((uint16_t)USART_CR1_UE);
 608              		.loc 1 428 5 is_stmt 1 view .LVU188
 609              		.loc 1 428 17 is_stmt 0 view .LVU189
 610 000e 8389     		ldrh	r3, [r0, #12]
 611 0010 9BB2     		uxth	r3, r3
 612 0012 23F40053 		bic	r3, r3, #8192
 613 0016 9BB2     		uxth	r3, r3
 614 0018 8381     		strh	r3, [r0, #12]	@ movhi
 429:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 430:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 615              		.loc 1 430 1 view .LVU190
 616 001a 7047     		bx	lr
 617              		.cfi_endproc
 618              	.LFE135:
 620              		.section	.text.USART_SetPrescaler,"ax",%progbits
 621              		.align	1
 622              		.global	USART_SetPrescaler
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 626              		.fpu fpv4-sp-d16
 628              	USART_SetPrescaler:
 629              	.LVL72:
 630              	.LFB136:
ARM GAS  /tmp/ccum4pBp.s 			page 20


 431:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 432:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 433:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Sets the system clock prescaler.
 434:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 435:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 436:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_Prescaler: specifies the prescaler clock. 
 437:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   The function is used for IrDA mode with UART4 and UART5.   
 438:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 439:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 440:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SetPrescaler(USART_TypeDef* USARTx, uint8_t USART_Prescaler)
 441:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** { 
 631              		.loc 1 441 1 is_stmt 1 view -0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635              		@ link register save eliminated.
 442:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 443:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 636              		.loc 1 443 3 view .LVU192
 444:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 445:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear the USART prescaler */
 446:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->GTPR &= USART_GTPR_GT;
 637              		.loc 1 446 3 view .LVU193
 638              		.loc 1 446 16 is_stmt 0 view .LVU194
 639 0000 028B     		ldrh	r2, [r0, #24]
 640 0002 02F47F42 		and	r2, r2, #65280
 641 0006 0283     		strh	r2, [r0, #24]	@ movhi
 447:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set the USART prescaler */
 448:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->GTPR |= USART_Prescaler;
 642              		.loc 1 448 3 is_stmt 1 view .LVU195
 643              		.loc 1 448 16 is_stmt 0 view .LVU196
 644 0008 038B     		ldrh	r3, [r0, #24]
 645 000a 9BB2     		uxth	r3, r3
 646 000c 0B43     		orrs	r3, r3, r1
 647 000e 0383     		strh	r3, [r0, #24]	@ movhi
 449:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 648              		.loc 1 449 1 view .LVU197
 649 0010 7047     		bx	lr
 650              		.cfi_endproc
 651              	.LFE136:
 653              		.section	.text.USART_OverSampling8Cmd,"ax",%progbits
 654              		.align	1
 655              		.global	USART_OverSampling8Cmd
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 659              		.fpu fpv4-sp-d16
 661              	USART_OverSampling8Cmd:
 662              	.LVL73:
 663              	.LFB137:
 450:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 451:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 452:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's 8x oversampling mode.
 453:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   This function has to be called before calling USART_Init() function
 454:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         in order to have correct baudrate Divider value.
 455:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 456:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
ARM GAS  /tmp/ccum4pBp.s 			page 21


 457:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART 8x oversampling mode.
 458:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 459:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 460:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 461:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_OverSampling8Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
 462:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 664              		.loc 1 462 1 is_stmt 1 view -0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 463:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 464:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 669              		.loc 1 464 3 view .LVU199
 465:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 670              		.loc 1 465 3 view .LVU200
 466:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 467:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 671              		.loc 1 467 3 view .LVU201
 672              		.loc 1 467 6 is_stmt 0 view .LVU202
 673 0000 39B1     		cbz	r1, .L39
 468:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 469:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the 8x Oversampling mode by setting the OVER8 bit in the CR1 register */
 470:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR1 |= USART_CR1_OVER8;
 674              		.loc 1 470 5 is_stmt 1 view .LVU203
 675              		.loc 1 470 17 is_stmt 0 view .LVU204
 676 0002 8389     		ldrh	r3, [r0, #12]
 677 0004 6FEA4343 		mvn	r3, r3, lsl #17
 678 0008 6FEA5343 		mvn	r3, r3, lsr #17
 679 000c 9BB2     		uxth	r3, r3
 680 000e 8381     		strh	r3, [r0, #12]	@ movhi
 681 0010 7047     		bx	lr
 682              	.L39:
 471:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 472:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 473:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 474:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the 8x Oversampling mode by clearing the OVER8 bit in the CR1 register */
 475:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR1 &= (uint16_t)~((uint16_t)USART_CR1_OVER8);
 683              		.loc 1 475 5 is_stmt 1 view .LVU205
 684              		.loc 1 475 17 is_stmt 0 view .LVU206
 685 0012 8389     		ldrh	r3, [r0, #12]
 686 0014 C3F30E03 		ubfx	r3, r3, #0, #15
 687 0018 8381     		strh	r3, [r0, #12]	@ movhi
 476:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 477:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }  
 688              		.loc 1 477 1 view .LVU207
 689 001a 7047     		bx	lr
 690              		.cfi_endproc
 691              	.LFE137:
 693              		.section	.text.USART_OneBitMethodCmd,"ax",%progbits
 694              		.align	1
 695              		.global	USART_OneBitMethodCmd
 696              		.syntax unified
 697              		.thumb
 698              		.thumb_func
 699              		.fpu fpv4-sp-d16
 701              	USART_OneBitMethodCmd:
ARM GAS  /tmp/ccum4pBp.s 			page 22


 702              	.LVL74:
 703              	.LFB138:
 478:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 479:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 480:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's one bit sampling method.
 481:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 482:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 483:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART one bit sampling method.
 484:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 485:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 486:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 487:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_OneBitMethodCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 488:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 704              		.loc 1 488 1 is_stmt 1 view -0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 489:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 490:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 709              		.loc 1 490 3 view .LVU209
 491:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 710              		.loc 1 491 3 view .LVU210
 492:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 493:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 711              		.loc 1 493 3 view .LVU211
 712              		.loc 1 493 6 is_stmt 0 view .LVU212
 713 0000 29B1     		cbz	r1, .L42
 494:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 495:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the one bit method by setting the ONEBITE bit in the CR3 register */
 496:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_ONEBIT;
 714              		.loc 1 496 5 is_stmt 1 view .LVU213
 715              		.loc 1 496 17 is_stmt 0 view .LVU214
 716 0002 838A     		ldrh	r3, [r0, #20]
 717 0004 9BB2     		uxth	r3, r3
 718 0006 43F40063 		orr	r3, r3, #2048
 719 000a 8382     		strh	r3, [r0, #20]	@ movhi
 720 000c 7047     		bx	lr
 721              	.L42:
 497:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 498:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 499:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 500:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the one bit method by clearing the ONEBITE bit in the CR3 register */
 501:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_ONEBIT);
 722              		.loc 1 501 5 is_stmt 1 view .LVU215
 723              		.loc 1 501 17 is_stmt 0 view .LVU216
 724 000e 838A     		ldrh	r3, [r0, #20]
 725 0010 9BB2     		uxth	r3, r3
 726 0012 23F40063 		bic	r3, r3, #2048
 727 0016 9BB2     		uxth	r3, r3
 728 0018 8382     		strh	r3, [r0, #20]	@ movhi
 502:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 503:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 729              		.loc 1 503 1 view .LVU217
 730 001a 7047     		bx	lr
 731              		.cfi_endproc
 732              	.LFE138:
ARM GAS  /tmp/ccum4pBp.s 			page 23


 734              		.section	.text.USART_SendData,"ax",%progbits
 735              		.align	1
 736              		.global	USART_SendData
 737              		.syntax unified
 738              		.thumb
 739              		.thumb_func
 740              		.fpu fpv4-sp-d16
 742              	USART_SendData:
 743              	.LVL75:
 744              	.LFB139:
 504:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 505:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 506:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
 507:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 508:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 509:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group2 Data transfers functions
 510:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   Data transfers functions 
 511:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 512:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 513:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 514:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                             Data transfers functions
 515:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 516:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 517:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to manage the USART data 
 518:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   transfers.
 519:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 520:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   During an USART reception, data shifts in least significant bit first through 
 521:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   the RX pin. In this mode, the USART_DR register consists of a buffer (RDR) 
 522:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   between the internal bus and the received shift register.
 523:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 524:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   When a transmission is taking place, a write instruction to the USART_DR register 
 525:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   stores the data in the TDR register and which is copied in the shift register 
 526:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   at the end of the current transmission.
 527:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 528:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   The read access of the USART_DR register can be done using the USART_ReceiveData()
 529:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   function and returns the RDR buffered value. Whereas a write access to the USART_DR 
 530:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   can be done using USART_SendData() function and stores the written data into 
 531:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   TDR buffer.
 532:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 533:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
 534:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 535:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 536:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 537:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 538:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Transmits single data through the USARTx peripheral.
 539:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 540:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 541:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  Data: the data to transmit.
 542:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 543:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 544:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SendData(USART_TypeDef* USARTx, uint16_t Data)
 545:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 745              		.loc 1 545 1 is_stmt 1 view -0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 749              		@ link register save eliminated.
ARM GAS  /tmp/ccum4pBp.s 			page 24


 546:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 547:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 750              		.loc 1 547 3 view .LVU219
 548:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_DATA(Data)); 
 751              		.loc 1 548 3 view .LVU220
 549:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
 550:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Transmit Data */
 551:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->DR = (Data & (uint16_t)0x01FF);
 752              		.loc 1 551 3 view .LVU221
 753              		.loc 1 551 22 is_stmt 0 view .LVU222
 754 0000 C1F30801 		ubfx	r1, r1, #0, #9
 755              	.LVL76:
 756              		.loc 1 551 14 view .LVU223
 757 0004 8180     		strh	r1, [r0, #4]	@ movhi
 552:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 758              		.loc 1 552 1 view .LVU224
 759 0006 7047     		bx	lr
 760              		.cfi_endproc
 761              	.LFE139:
 763              		.section	.text.USART_ReceiveData,"ax",%progbits
 764              		.align	1
 765              		.global	USART_ReceiveData
 766              		.syntax unified
 767              		.thumb
 768              		.thumb_func
 769              		.fpu fpv4-sp-d16
 771              	USART_ReceiveData:
 772              	.LVL77:
 773              	.LFB140:
 553:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 554:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 555:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Returns the most recent received data by the USARTx peripheral.
 556:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 557:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 558:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval The received data.
 559:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 560:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** uint16_t USART_ReceiveData(USART_TypeDef* USARTx)
 561:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 774              		.loc 1 561 1 is_stmt 1 view -0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              		@ link register save eliminated.
 562:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 563:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 779              		.loc 1 563 3 view .LVU226
 564:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 565:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Receive Data */
 566:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   return (uint16_t)(USARTx->DR & (uint16_t)0x01FF);
 780              		.loc 1 566 3 view .LVU227
 781              		.loc 1 566 27 is_stmt 0 view .LVU228
 782 0000 8088     		ldrh	r0, [r0, #4]
 783              	.LVL78:
 567:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 784              		.loc 1 567 1 view .LVU229
 785 0002 C0F30800 		ubfx	r0, r0, #0, #9
 786 0006 7047     		bx	lr
ARM GAS  /tmp/ccum4pBp.s 			page 25


 787              		.cfi_endproc
 788              	.LFE140:
 790              		.section	.text.USART_SetAddress,"ax",%progbits
 791              		.align	1
 792              		.global	USART_SetAddress
 793              		.syntax unified
 794              		.thumb
 795              		.thumb_func
 796              		.fpu fpv4-sp-d16
 798              	USART_SetAddress:
 799              	.LVL79:
 800              	.LFB141:
 568:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 569:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 570:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
 571:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 572:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 573:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group3 MultiProcessor Communication functions
 574:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   Multi-Processor Communication functions 
 575:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 576:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 577:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 578:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                     Multi-Processor Communication functions
 579:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 580:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 581:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to manage the USART 
 582:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   multiprocessor communication.
 583:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 584:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   For instance one of the USARTs can be the master, its TX output is connected to 
 585:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   the RX input of the other USART. The others are slaves, their respective TX outputs 
 586:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   are logically ANDed together and connected to the RX input of the master.
 587:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 588:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART multiprocessor communication is possible through the following procedure:
 589:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. Program the Baud rate, Word length = 9 bits, Stop bits, Parity, Mode transmitter 
 590:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         or Mode receiver and hardware flow control values using the USART_Init()
 591:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         function.
 592:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. Configures the USART address using the USART_SetAddress() function.
 593:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      3. Configures the wake up method (USART_WakeUp_IdleLine or USART_WakeUp_AddressMark)
 594:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         using USART_WakeUpConfig() function only for the slaves.
 595:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      4. Enable the USART using the USART_Cmd() function.
 596:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      5. Enter the USART slaves in mute mode using USART_ReceiverWakeUpCmd() function.
 597:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 598:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   The USART Slave exit from mute mode when receive the wake up condition.
 599:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 600:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
 601:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 602:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 603:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 604:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 605:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Sets the address of the USART node.
 606:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 607:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 608:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_Address: Indicates the address of the USART node.
 609:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 610:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 611:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SetAddress(USART_TypeDef* USARTx, uint8_t USART_Address)
 612:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
ARM GAS  /tmp/ccum4pBp.s 			page 26


 801              		.loc 1 612 1 is_stmt 1 view -0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 613:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 614:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 806              		.loc 1 614 3 view .LVU231
 615:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ADDRESS(USART_Address)); 
 807              		.loc 1 615 3 view .LVU232
 616:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
 617:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear the USART address */
 618:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR2 &= (uint16_t)~((uint16_t)USART_CR2_ADD);
 808              		.loc 1 618 3 view .LVU233
 809              		.loc 1 618 15 is_stmt 0 view .LVU234
 810 0000 038A     		ldrh	r3, [r0, #16]
 811 0002 9BB2     		uxth	r3, r3
 812 0004 23F00F03 		bic	r3, r3, #15
 813 0008 9BB2     		uxth	r3, r3
 814 000a 0382     		strh	r3, [r0, #16]	@ movhi
 619:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set the USART address node */
 620:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR2 |= USART_Address;
 815              		.loc 1 620 3 is_stmt 1 view .LVU235
 816              		.loc 1 620 15 is_stmt 0 view .LVU236
 817 000c 038A     		ldrh	r3, [r0, #16]
 818 000e 9BB2     		uxth	r3, r3
 819 0010 0B43     		orrs	r3, r3, r1
 820 0012 0382     		strh	r3, [r0, #16]	@ movhi
 621:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 821              		.loc 1 621 1 view .LVU237
 822 0014 7047     		bx	lr
 823              		.cfi_endproc
 824              	.LFE141:
 826              		.section	.text.USART_ReceiverWakeUpCmd,"ax",%progbits
 827              		.align	1
 828              		.global	USART_ReceiverWakeUpCmd
 829              		.syntax unified
 830              		.thumb
 831              		.thumb_func
 832              		.fpu fpv4-sp-d16
 834              	USART_ReceiverWakeUpCmd:
 835              	.LVL80:
 836              	.LFB142:
 622:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 623:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 624:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Determines if the USART is in mute mode or not.
 625:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 626:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 627:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART mute mode.
 628:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 629:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 630:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 631:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_ReceiverWakeUpCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 632:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 837              		.loc 1 632 1 is_stmt 1 view -0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccum4pBp.s 			page 27


 840              		@ frame_needed = 0, uses_anonymous_args = 0
 841              		@ link register save eliminated.
 633:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 634:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 842              		.loc 1 634 3 view .LVU239
 635:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
 843              		.loc 1 635 3 view .LVU240
 636:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 637:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 844              		.loc 1 637 3 view .LVU241
 845              		.loc 1 637 6 is_stmt 0 view .LVU242
 846 0000 29B1     		cbz	r1, .L48
 638:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 639:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
 640:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR1 |= USART_CR1_RWU;
 847              		.loc 1 640 5 is_stmt 1 view .LVU243
 848              		.loc 1 640 17 is_stmt 0 view .LVU244
 849 0002 8389     		ldrh	r3, [r0, #12]
 850 0004 9BB2     		uxth	r3, r3
 851 0006 43F00203 		orr	r3, r3, #2
 852 000a 8381     		strh	r3, [r0, #12]	@ movhi
 853 000c 7047     		bx	lr
 854              	.L48:
 641:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 642:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 643:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 644:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
 645:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR1 &= (uint16_t)~((uint16_t)USART_CR1_RWU);
 855              		.loc 1 645 5 is_stmt 1 view .LVU245
 856              		.loc 1 645 17 is_stmt 0 view .LVU246
 857 000e 8389     		ldrh	r3, [r0, #12]
 858 0010 9BB2     		uxth	r3, r3
 859 0012 23F00203 		bic	r3, r3, #2
 860 0016 9BB2     		uxth	r3, r3
 861 0018 8381     		strh	r3, [r0, #12]	@ movhi
 646:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 647:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 862              		.loc 1 647 1 view .LVU247
 863 001a 7047     		bx	lr
 864              		.cfi_endproc
 865              	.LFE142:
 867              		.section	.text.USART_WakeUpConfig,"ax",%progbits
 868              		.align	1
 869              		.global	USART_WakeUpConfig
 870              		.syntax unified
 871              		.thumb
 872              		.thumb_func
 873              		.fpu fpv4-sp-d16
 875              	USART_WakeUpConfig:
 876              	.LVL81:
 877              	.LFB143:
 648:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 649:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Selects the USART WakeUp method.
 650:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 651:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 652:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_WakeUp: specifies the USART wakeup method.
 653:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/ccum4pBp.s 			page 28


 654:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_WakeUp_IdleLine: WakeUp by an idle line detection
 655:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_WakeUp_AddressMark: WakeUp by an address mark
 656:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 657:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 658:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_WakeUpConfig(USART_TypeDef* USARTx, uint16_t USART_WakeUp)
 659:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 878              		.loc 1 659 1 is_stmt 1 view -0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 0
 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882              		@ link register save eliminated.
 660:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 661:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 883              		.loc 1 661 3 view .LVU249
 662:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_WAKEUP(USART_WakeUp));
 884              		.loc 1 662 3 view .LVU250
 663:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 664:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR1 &= (uint16_t)~((uint16_t)USART_CR1_WAKE);
 885              		.loc 1 664 3 view .LVU251
 886              		.loc 1 664 15 is_stmt 0 view .LVU252
 887 0000 8389     		ldrh	r3, [r0, #12]
 888 0002 9BB2     		uxth	r3, r3
 889 0004 23F40063 		bic	r3, r3, #2048
 890 0008 9BB2     		uxth	r3, r3
 891 000a 8381     		strh	r3, [r0, #12]	@ movhi
 665:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR1 |= USART_WakeUp;
 892              		.loc 1 665 3 is_stmt 1 view .LVU253
 893              		.loc 1 665 15 is_stmt 0 view .LVU254
 894 000c 8389     		ldrh	r3, [r0, #12]
 895 000e 9BB2     		uxth	r3, r3
 896 0010 0B43     		orrs	r3, r3, r1
 897 0012 8381     		strh	r3, [r0, #12]	@ movhi
 666:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 898              		.loc 1 666 1 view .LVU255
 899 0014 7047     		bx	lr
 900              		.cfi_endproc
 901              	.LFE143:
 903              		.section	.text.USART_LINBreakDetectLengthConfig,"ax",%progbits
 904              		.align	1
 905              		.global	USART_LINBreakDetectLengthConfig
 906              		.syntax unified
 907              		.thumb
 908              		.thumb_func
 909              		.fpu fpv4-sp-d16
 911              	USART_LINBreakDetectLengthConfig:
 912              	.LVL82:
 913              	.LFB144:
 667:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 668:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 669:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
 670:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 671:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 672:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group4 LIN mode functions
 673:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   LIN mode functions 
 674:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 675:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 676:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
ARM GAS  /tmp/ccum4pBp.s 			page 29


 677:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                                 LIN mode functions
 678:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 679:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 680:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to manage the USART LIN 
 681:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Mode communication.
 682:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 683:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   In LIN mode, 8-bit data format with 1 stop bit is required in accordance with 
 684:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   the LIN standard.
 685:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 686:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Only this LIN Feature is supported by the USART IP:
 687:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     - LIN Master Synchronous Break send capability and LIN slave break detection
 688:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       capability :  13-bit break generation and 10/11 bit break detection
 689:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 690:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 691:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART LIN Master transmitter communication is possible through the following procedure:
 692:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. Program the Baud rate, Word length = 8bits, Stop bits = 1bit, Parity, 
 693:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         Mode transmitter or Mode receiver and hardware flow control values using 
 694:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         the USART_Init() function.
 695:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. Enable the USART using the USART_Cmd() function.
 696:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      3. Enable the LIN mode using the USART_LINCmd() function.
 697:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      4. Send the break character using USART_SendBreak() function.
 698:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 699:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART LIN Master receiver communication is possible through the following procedure:
 700:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. Program the Baud rate, Word length = 8bits, Stop bits = 1bit, Parity, 
 701:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         Mode transmitter or Mode receiver and hardware flow control values using 
 702:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         the USART_Init() function.
 703:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. Enable the USART using the USART_Cmd() function.
 704:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      3. Configures the break detection length using the USART_LINBreakDetectLengthConfig()
 705:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         function.
 706:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      4. Enable the LIN mode using the USART_LINCmd() function.
 707:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 708:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 709:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note In LIN mode, the following bits must be kept cleared:
 710:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - CLKEN in the USART_CR2 register,
 711:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - STOP[1:0], SCEN, HDSEL and IREN in the USART_CR3 register.
 712:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 713:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
 714:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 715:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 716:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 717:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 718:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Sets the USART LIN Break detection length.
 719:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 720:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 721:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_LINBreakDetectLength: specifies the LIN break detection length.
 722:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
 723:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_LINBreakDetectLength_10b: 10-bit break detection
 724:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_LINBreakDetectLength_11b: 11-bit break detection
 725:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 726:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 727:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_LINBreakDetectLengthConfig(USART_TypeDef* USARTx, uint16_t USART_LINBreakDetectLength)
 728:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 914              		.loc 1 728 1 is_stmt 1 view -0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 918              		@ link register save eliminated.
ARM GAS  /tmp/ccum4pBp.s 			page 30


 729:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 730:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 919              		.loc 1 730 3 view .LVU257
 731:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_LIN_BREAK_DETECT_LENGTH(USART_LINBreakDetectLength));
 920              		.loc 1 731 3 view .LVU258
 732:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 733:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR2 &= (uint16_t)~((uint16_t)USART_CR2_LBDL);
 921              		.loc 1 733 3 view .LVU259
 922              		.loc 1 733 15 is_stmt 0 view .LVU260
 923 0000 038A     		ldrh	r3, [r0, #16]
 924 0002 9BB2     		uxth	r3, r3
 925 0004 23F02003 		bic	r3, r3, #32
 926 0008 9BB2     		uxth	r3, r3
 927 000a 0382     		strh	r3, [r0, #16]	@ movhi
 734:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR2 |= USART_LINBreakDetectLength;  
 928              		.loc 1 734 3 is_stmt 1 view .LVU261
 929              		.loc 1 734 15 is_stmt 0 view .LVU262
 930 000c 038A     		ldrh	r3, [r0, #16]
 931 000e 9BB2     		uxth	r3, r3
 932 0010 0B43     		orrs	r3, r3, r1
 933 0012 0382     		strh	r3, [r0, #16]	@ movhi
 735:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 934              		.loc 1 735 1 view .LVU263
 935 0014 7047     		bx	lr
 936              		.cfi_endproc
 937              	.LFE144:
 939              		.section	.text.USART_LINCmd,"ax",%progbits
 940              		.align	1
 941              		.global	USART_LINCmd
 942              		.syntax unified
 943              		.thumb
 944              		.thumb_func
 945              		.fpu fpv4-sp-d16
 947              	USART_LINCmd:
 948              	.LVL83:
 949              	.LFB145:
 736:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 737:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 738:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's LIN mode.
 739:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 740:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 741:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART LIN mode.
 742:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 743:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 744:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 745:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_LINCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 746:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 950              		.loc 1 746 1 is_stmt 1 view -0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              		@ link register save eliminated.
 747:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 748:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 955              		.loc 1 748 3 view .LVU265
 749:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 956              		.loc 1 749 3 view .LVU266
ARM GAS  /tmp/ccum4pBp.s 			page 31


 750:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 751:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 957              		.loc 1 751 3 view .LVU267
 958              		.loc 1 751 6 is_stmt 0 view .LVU268
 959 0000 29B1     		cbz	r1, .L53
 752:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 753:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 754:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR2 |= USART_CR2_LINEN;
 960              		.loc 1 754 5 is_stmt 1 view .LVU269
 961              		.loc 1 754 17 is_stmt 0 view .LVU270
 962 0002 038A     		ldrh	r3, [r0, #16]
 963 0004 9BB2     		uxth	r3, r3
 964 0006 43F48043 		orr	r3, r3, #16384
 965 000a 0382     		strh	r3, [r0, #16]	@ movhi
 966 000c 7047     		bx	lr
 967              	.L53:
 755:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 756:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 757:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 758:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the LIN mode by clearing the LINEN bit in the CR2 register */
 759:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR2 &= (uint16_t)~((uint16_t)USART_CR2_LINEN);
 968              		.loc 1 759 5 is_stmt 1 view .LVU271
 969              		.loc 1 759 17 is_stmt 0 view .LVU272
 970 000e 038A     		ldrh	r3, [r0, #16]
 971 0010 9BB2     		uxth	r3, r3
 972 0012 23F48043 		bic	r3, r3, #16384
 973 0016 9BB2     		uxth	r3, r3
 974 0018 0382     		strh	r3, [r0, #16]	@ movhi
 760:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 761:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 975              		.loc 1 761 1 view .LVU273
 976 001a 7047     		bx	lr
 977              		.cfi_endproc
 978              	.LFE145:
 980              		.section	.text.USART_SendBreak,"ax",%progbits
 981              		.align	1
 982              		.global	USART_SendBreak
 983              		.syntax unified
 984              		.thumb
 985              		.thumb_func
 986              		.fpu fpv4-sp-d16
 988              	USART_SendBreak:
 989              	.LVL84:
 990              	.LFB146:
 762:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 763:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 764:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Transmits break characters.
 765:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 766:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 767:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 768:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 769:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SendBreak(USART_TypeDef* USARTx)
 770:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 991              		.loc 1 770 1 is_stmt 1 view -0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccum4pBp.s 			page 32


 995              		@ link register save eliminated.
 771:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 772:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 996              		.loc 1 772 3 view .LVU275
 773:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 774:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Send break characters */
 775:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR1 |= USART_CR1_SBK;
 997              		.loc 1 775 3 view .LVU276
 998              		.loc 1 775 15 is_stmt 0 view .LVU277
 999 0000 8389     		ldrh	r3, [r0, #12]
 1000 0002 9BB2     		uxth	r3, r3
 1001 0004 43F00103 		orr	r3, r3, #1
 1002 0008 8381     		strh	r3, [r0, #12]	@ movhi
 776:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1003              		.loc 1 776 1 view .LVU278
 1004 000a 7047     		bx	lr
 1005              		.cfi_endproc
 1006              	.LFE146:
 1008              		.section	.text.USART_HalfDuplexCmd,"ax",%progbits
 1009              		.align	1
 1010              		.global	USART_HalfDuplexCmd
 1011              		.syntax unified
 1012              		.thumb
 1013              		.thumb_func
 1014              		.fpu fpv4-sp-d16
 1016              	USART_HalfDuplexCmd:
 1017              	.LVL85:
 1018              	.LFB147:
 777:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 778:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 779:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
 780:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 781:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 782:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group5 Halfduplex mode function
 783:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   Half-duplex mode function 
 784:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 785:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 786:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 787:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                          Half-duplex mode function
 788:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 789:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 790:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to manage the USART 
 791:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Half-duplex communication.
 792:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 793:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   The USART can be configured to follow a single-wire half-duplex protocol where 
 794:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   the TX and RX lines are internally connected.
 795:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 796:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART Half duplex communication is possible through the following procedure:
 797:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. Program the Baud rate, Word length, Stop bits, Parity, Mode transmitter 
 798:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         or Mode receiver and hardware flow control values using the USART_Init()
 799:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         function.
 800:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. Configures the USART address using the USART_SetAddress() function.
 801:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      3. Enable the USART using the USART_Cmd() function.
 802:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      4. Enable the half duplex mode using USART_HalfDuplexCmd() function.
 803:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 804:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 805:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note The RX pin is no longer used
ARM GAS  /tmp/ccum4pBp.s 			page 33


 806:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note In Half-duplex mode the following bits must be kept cleared:
 807:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - LINEN and CLKEN bits in the USART_CR2 register.
 808:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - SCEN and IREN bits in the USART_CR3 register.
 809:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 810:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
 811:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 812:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 813:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 814:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 815:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's Half Duplex communication.
 816:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 817:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 818:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART Communication.
 819:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 820:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 821:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 822:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_HalfDuplexCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 823:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1019              		.loc 1 823 1 is_stmt 1 view -0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 0, uses_anonymous_args = 0
 1023              		@ link register save eliminated.
 824:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 825:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1024              		.loc 1 825 3 view .LVU280
 826:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1025              		.loc 1 826 3 view .LVU281
 827:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 828:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1026              		.loc 1 828 3 view .LVU282
 1027              		.loc 1 828 6 is_stmt 0 view .LVU283
 1028 0000 29B1     		cbz	r1, .L57
 829:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 830:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 831:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_HDSEL;
 1029              		.loc 1 831 5 is_stmt 1 view .LVU284
 1030              		.loc 1 831 17 is_stmt 0 view .LVU285
 1031 0002 838A     		ldrh	r3, [r0, #20]
 1032 0004 9BB2     		uxth	r3, r3
 1033 0006 43F00803 		orr	r3, r3, #8
 1034 000a 8382     		strh	r3, [r0, #20]	@ movhi
 1035 000c 7047     		bx	lr
 1036              	.L57:
 832:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 833:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 834:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 835:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the Half-Duplex mode by clearing the HDSEL bit in the CR3 register */
 836:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_HDSEL);
 1037              		.loc 1 836 5 is_stmt 1 view .LVU286
 1038              		.loc 1 836 17 is_stmt 0 view .LVU287
 1039 000e 838A     		ldrh	r3, [r0, #20]
 1040 0010 9BB2     		uxth	r3, r3
 1041 0012 23F00803 		bic	r3, r3, #8
 1042 0016 9BB2     		uxth	r3, r3
 1043 0018 8382     		strh	r3, [r0, #20]	@ movhi
 837:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
ARM GAS  /tmp/ccum4pBp.s 			page 34


 838:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1044              		.loc 1 838 1 view .LVU288
 1045 001a 7047     		bx	lr
 1046              		.cfi_endproc
 1047              	.LFE147:
 1049              		.section	.text.USART_SetGuardTime,"ax",%progbits
 1050              		.align	1
 1051              		.global	USART_SetGuardTime
 1052              		.syntax unified
 1053              		.thumb
 1054              		.thumb_func
 1055              		.fpu fpv4-sp-d16
 1057              	USART_SetGuardTime:
 1058              	.LVL86:
 1059              	.LFB148:
 839:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 840:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 841:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
 842:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 843:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 844:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 845:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group6 Smartcard mode functions
 846:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   Smartcard mode functions 
 847:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 848:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 849:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 850:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                                Smartcard mode functions
 851:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 852:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 853:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to manage the USART 
 854:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Smartcard communication.
 855:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 856:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   The Smartcard interface is designed to support asynchronous protocol Smartcards as
 857:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   defined in the ISO 7816-3 standard.
 858:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 859:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   The USART can provide a clock to the smartcard through the SCLK output.
 860:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   In smartcard mode, SCLK is not associated to the communication but is simply derived 
 861:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   from the internal peripheral input clock through a 5-bit prescaler.
 862:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 863:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Smartcard communication is possible through the following procedure:
 864:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. Configures the Smartcard Prescaler using the USART_SetPrescaler() function.
 865:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. Configures the Smartcard Guard Time using the USART_SetGuardTime() function.
 866:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      3. Program the USART clock using the USART_ClockInit() function as following:
 867:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - USART Clock enabled
 868:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - USART CPOL Low
 869:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - USART CPHA on first edge
 870:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - USART Last Bit Clock Enabled
 871:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      4. Program the Smartcard interface using the USART_Init() function as following:
 872:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Word Length = 9 Bits
 873:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - 1.5 Stop Bit
 874:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Even parity
 875:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - BaudRate = 12096 baud
 876:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Hardware flow control disabled (RTS and CTS signals)
 877:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Tx and Rx enabled
 878:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      5. Optionally you can enable the parity error interrupt using the USART_ITConfig()
 879:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         function
 880:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      6. Enable the USART using the USART_Cmd() function.
ARM GAS  /tmp/ccum4pBp.s 			page 35


 881:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      7. Enable the Smartcard NACK using the USART_SmartCardNACKCmd() function.
 882:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      8. Enable the Smartcard interface using the USART_SmartCardCmd() function.
 883:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 884:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Please refer to the ISO 7816-3 specification for more details.
 885:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 886:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 887:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note It is also possible to choose 0.5 stop bit for receiving but it is recommended 
 888:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       to use 1.5 stop bits for both transmitting and receiving to avoid switching 
 889:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       between the two configurations.
 890:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note In smartcard mode, the following bits must be kept cleared:
 891:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - LINEN bit in the USART_CR2 register.
 892:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - HDSEL and IREN bits in the USART_CR3 register.
 893:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note Smartcard mode is available on USART peripherals only (not available on UART4 
 894:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       and UART5 peripherals).
 895:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 896:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
 897:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 898:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 899:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 900:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 901:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Sets the specified USART guard time.
 902:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3 or 6 to select the USART or 
 903:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 904:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_GuardTime: specifies the guard time.   
 905:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 906:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 907:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SetGuardTime(USART_TypeDef* USARTx, uint8_t USART_GuardTime)
 908:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {    
 1060              		.loc 1 908 1 is_stmt 1 view -0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 1064              		@ link register save eliminated.
 909:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 910:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_1236_PERIPH(USARTx));
 1065              		.loc 1 910 3 view .LVU290
 911:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 912:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear the USART Guard time */
 913:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->GTPR &= USART_GTPR_PSC;
 1066              		.loc 1 913 3 view .LVU291
 1067              		.loc 1 913 16 is_stmt 0 view .LVU292
 1068 0000 028B     		ldrh	r2, [r0, #24]
 1069 0002 D2B2     		uxtb	r2, r2
 1070 0004 0283     		strh	r2, [r0, #24]	@ movhi
 914:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set the USART guard time */
 915:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->GTPR |= (uint16_t)((uint16_t)USART_GuardTime << 0x08);
 1071              		.loc 1 915 3 is_stmt 1 view .LVU293
 1072              		.loc 1 915 16 is_stmt 0 view .LVU294
 1073 0006 038B     		ldrh	r3, [r0, #24]
 1074 0008 9BB2     		uxth	r3, r3
 1075 000a 43EA0123 		orr	r3, r3, r1, lsl #8
 1076 000e 0383     		strh	r3, [r0, #24]	@ movhi
 916:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1077              		.loc 1 916 1 view .LVU295
 1078 0010 7047     		bx	lr
 1079              		.cfi_endproc
 1080              	.LFE148:
ARM GAS  /tmp/ccum4pBp.s 			page 36


 1082              		.section	.text.USART_SmartCardCmd,"ax",%progbits
 1083              		.align	1
 1084              		.global	USART_SmartCardCmd
 1085              		.syntax unified
 1086              		.thumb
 1087              		.thumb_func
 1088              		.fpu fpv4-sp-d16
 1090              	USART_SmartCardCmd:
 1091              	.LVL87:
 1092              	.LFB149:
 917:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 918:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 919:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's Smart Card mode.
 920:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3 or 6 to select the USART or 
 921:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 922:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the Smart Card mode.
 923:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.      
 924:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 925:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 926:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SmartCardCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 927:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1093              		.loc 1 927 1 is_stmt 1 view -0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 0
 1096              		@ frame_needed = 0, uses_anonymous_args = 0
 1097              		@ link register save eliminated.
 928:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 929:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_1236_PERIPH(USARTx));
 1098              		.loc 1 929 3 view .LVU297
 930:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1099              		.loc 1 930 3 view .LVU298
 931:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1100              		.loc 1 931 3 view .LVU299
 1101              		.loc 1 931 6 is_stmt 0 view .LVU300
 1102 0000 29B1     		cbz	r1, .L61
 932:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 933:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the SC mode by setting the SCEN bit in the CR3 register */
 934:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_SCEN;
 1103              		.loc 1 934 5 is_stmt 1 view .LVU301
 1104              		.loc 1 934 17 is_stmt 0 view .LVU302
 1105 0002 838A     		ldrh	r3, [r0, #20]
 1106 0004 9BB2     		uxth	r3, r3
 1107 0006 43F02003 		orr	r3, r3, #32
 1108 000a 8382     		strh	r3, [r0, #20]	@ movhi
 1109 000c 7047     		bx	lr
 1110              	.L61:
 935:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 936:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 937:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 938:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the SC mode by clearing the SCEN bit in the CR3 register */
 939:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_SCEN);
 1111              		.loc 1 939 5 is_stmt 1 view .LVU303
 1112              		.loc 1 939 17 is_stmt 0 view .LVU304
 1113 000e 838A     		ldrh	r3, [r0, #20]
 1114 0010 9BB2     		uxth	r3, r3
 1115 0012 23F02003 		bic	r3, r3, #32
 1116 0016 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccum4pBp.s 			page 37


 1117 0018 8382     		strh	r3, [r0, #20]	@ movhi
 940:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 941:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1118              		.loc 1 941 1 view .LVU305
 1119 001a 7047     		bx	lr
 1120              		.cfi_endproc
 1121              	.LFE149:
 1123              		.section	.text.USART_SmartCardNACKCmd,"ax",%progbits
 1124              		.align	1
 1125              		.global	USART_SmartCardNACKCmd
 1126              		.syntax unified
 1127              		.thumb
 1128              		.thumb_func
 1129              		.fpu fpv4-sp-d16
 1131              	USART_SmartCardNACKCmd:
 1132              	.LVL88:
 1133              	.LFB150:
 942:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 943:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 944:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables NACK transmission.
 945:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3 or 6 to select the USART or 
 946:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 947:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the NACK transmission.
 948:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.  
 949:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 950:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 951:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SmartCardNACKCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 952:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1134              		.loc 1 952 1 is_stmt 1 view -0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138              		@ link register save eliminated.
 953:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 954:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_1236_PERIPH(USARTx)); 
 1139              		.loc 1 954 3 view .LVU307
 955:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1140              		.loc 1 955 3 view .LVU308
 956:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1141              		.loc 1 956 3 view .LVU309
 1142              		.loc 1 956 6 is_stmt 0 view .LVU310
 1143 0000 29B1     		cbz	r1, .L64
 957:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 958:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the NACK transmission by setting the NACK bit in the CR3 register */
 959:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_NACK;
 1144              		.loc 1 959 5 is_stmt 1 view .LVU311
 1145              		.loc 1 959 17 is_stmt 0 view .LVU312
 1146 0002 838A     		ldrh	r3, [r0, #20]
 1147 0004 9BB2     		uxth	r3, r3
 1148 0006 43F01003 		orr	r3, r3, #16
 1149 000a 8382     		strh	r3, [r0, #20]	@ movhi
 1150 000c 7047     		bx	lr
 1151              	.L64:
 960:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 961:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 962:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 963:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the NACK transmission by clearing the NACK bit in the CR3 register */
ARM GAS  /tmp/ccum4pBp.s 			page 38


 964:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_NACK);
 1152              		.loc 1 964 5 is_stmt 1 view .LVU313
 1153              		.loc 1 964 17 is_stmt 0 view .LVU314
 1154 000e 838A     		ldrh	r3, [r0, #20]
 1155 0010 9BB2     		uxth	r3, r3
 1156 0012 23F01003 		bic	r3, r3, #16
 1157 0016 9BB2     		uxth	r3, r3
 1158 0018 8382     		strh	r3, [r0, #20]	@ movhi
 965:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 966:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1159              		.loc 1 966 1 view .LVU315
 1160 001a 7047     		bx	lr
 1161              		.cfi_endproc
 1162              	.LFE150:
 1164              		.section	.text.USART_IrDAConfig,"ax",%progbits
 1165              		.align	1
 1166              		.global	USART_IrDAConfig
 1167              		.syntax unified
 1168              		.thumb
 1169              		.thumb_func
 1170              		.fpu fpv4-sp-d16
 1172              	USART_IrDAConfig:
 1173              	.LVL89:
 1174              	.LFB151:
 967:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 968:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 969:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
 970:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 971:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 972:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group7 IrDA mode functions
 973:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   IrDA mode functions 
 974:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 975:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 976:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 977:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                                 IrDA mode functions
 978:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 979:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 980:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to manage the USART 
 981:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   IrDA communication.
 982:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 983:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   IrDA is a half duplex communication protocol. If the Transmitter is busy, any data
 984:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   on the IrDA receive line will be ignored by the IrDA decoder and if the Receiver 
 985:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   is busy, data on the TX from the USART to IrDA will not be encoded by IrDA.
 986:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   While receiving data, transmission should be avoided as the data to be transmitted
 987:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   could be corrupted.
 988:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 989:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   IrDA communication is possible through the following procedure:
 990:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. Program the Baud rate, Word length = 8 bits, Stop bits, Parity, Transmitter/Receiver 
 991:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         modes and hardware flow control values using the USART_Init() function.
 992:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. Enable the USART using the USART_Cmd() function.
 993:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      3. Configures the IrDA pulse width by configuring the prescaler using  
 994:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         the USART_SetPrescaler() function.
 995:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      4. Configures the IrDA  USART_IrDAMode_LowPower or USART_IrDAMode_Normal mode
 996:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         using the USART_IrDAConfig() function.
 997:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      5. Enable the IrDA using the USART_IrDACmd() function.
 998:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 999:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note A pulse of width less than two and greater than one PSC period(s) may or may
ARM GAS  /tmp/ccum4pBp.s 			page 39


1000:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       not be rejected.
1001:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note The receiver set up time should be managed by software. The IrDA physical layer
1002:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       specification specifies a minimum of 10 ms delay between transmission and 
1003:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       reception (IrDA is a half duplex protocol).
1004:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note In IrDA mode, the following bits must be kept cleared:
1005:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - LINEN, STOP and CLKEN bits in the USART_CR2 register.
1006:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - SCEN and HDSEL bits in the USART_CR3 register.
1007:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1008:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
1009:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
1010:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1011:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1012:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1013:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Configures the USART's IrDA interface.
1014:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1015:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1016:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_IrDAMode: specifies the IrDA mode.
1017:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1018:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IrDAMode_LowPower
1019:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IrDAMode_Normal
1020:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
1021:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1022:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_IrDAConfig(USART_TypeDef* USARTx, uint16_t USART_IrDAMode)
1023:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1175              		.loc 1 1023 1 is_stmt 1 view -0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 0
 1178              		@ frame_needed = 0, uses_anonymous_args = 0
 1179              		@ link register save eliminated.
1024:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1025:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1180              		.loc 1 1025 3 view .LVU317
1026:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_IRDA_MODE(USART_IrDAMode));
 1181              		.loc 1 1026 3 view .LVU318
1027:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1028:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_IRLP);
 1182              		.loc 1 1028 3 view .LVU319
 1183              		.loc 1 1028 15 is_stmt 0 view .LVU320
 1184 0000 838A     		ldrh	r3, [r0, #20]
 1185 0002 9BB2     		uxth	r3, r3
 1186 0004 23F00403 		bic	r3, r3, #4
 1187 0008 9BB2     		uxth	r3, r3
 1188 000a 8382     		strh	r3, [r0, #20]	@ movhi
1029:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR3 |= USART_IrDAMode;
 1189              		.loc 1 1029 3 is_stmt 1 view .LVU321
 1190              		.loc 1 1029 15 is_stmt 0 view .LVU322
 1191 000c 838A     		ldrh	r3, [r0, #20]
 1192 000e 9BB2     		uxth	r3, r3
 1193 0010 0B43     		orrs	r3, r3, r1
 1194 0012 8382     		strh	r3, [r0, #20]	@ movhi
1030:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1195              		.loc 1 1030 1 view .LVU323
 1196 0014 7047     		bx	lr
 1197              		.cfi_endproc
 1198              	.LFE151:
 1200              		.section	.text.USART_IrDACmd,"ax",%progbits
 1201              		.align	1
ARM GAS  /tmp/ccum4pBp.s 			page 40


 1202              		.global	USART_IrDACmd
 1203              		.syntax unified
 1204              		.thumb
 1205              		.thumb_func
 1206              		.fpu fpv4-sp-d16
 1208              	USART_IrDACmd:
 1209              	.LVL90:
 1210              	.LFB152:
1031:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1032:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1033:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's IrDA interface.
1034:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1035:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1036:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the IrDA mode.
1037:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
1038:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
1039:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1040:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_IrDACmd(USART_TypeDef* USARTx, FunctionalState NewState)
1041:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1211              		.loc 1 1041 1 is_stmt 1 view -0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 1215              		@ link register save eliminated.
1042:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1043:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1216              		.loc 1 1043 3 view .LVU325
1044:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1217              		.loc 1 1044 3 view .LVU326
1045:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1046:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1218              		.loc 1 1046 3 view .LVU327
 1219              		.loc 1 1046 6 is_stmt 0 view .LVU328
 1220 0000 29B1     		cbz	r1, .L68
1047:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1048:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the IrDA mode by setting the IREN bit in the CR3 register */
1049:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_IREN;
 1221              		.loc 1 1049 5 is_stmt 1 view .LVU329
 1222              		.loc 1 1049 17 is_stmt 0 view .LVU330
 1223 0002 838A     		ldrh	r3, [r0, #20]
 1224 0004 9BB2     		uxth	r3, r3
 1225 0006 43F00203 		orr	r3, r3, #2
 1226 000a 8382     		strh	r3, [r0, #20]	@ movhi
 1227 000c 7047     		bx	lr
 1228              	.L68:
1050:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1051:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
1052:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1053:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the IrDA mode by clearing the IREN bit in the CR3 register */
1054:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_IREN);
 1229              		.loc 1 1054 5 is_stmt 1 view .LVU331
 1230              		.loc 1 1054 17 is_stmt 0 view .LVU332
 1231 000e 838A     		ldrh	r3, [r0, #20]
 1232 0010 9BB2     		uxth	r3, r3
 1233 0012 23F00203 		bic	r3, r3, #2
 1234 0016 9BB2     		uxth	r3, r3
 1235 0018 8382     		strh	r3, [r0, #20]	@ movhi
ARM GAS  /tmp/ccum4pBp.s 			page 41


1055:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1056:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1236              		.loc 1 1056 1 view .LVU333
 1237 001a 7047     		bx	lr
 1238              		.cfi_endproc
 1239              	.LFE152:
 1241              		.section	.text.USART_DMACmd,"ax",%progbits
 1242              		.align	1
 1243              		.global	USART_DMACmd
 1244              		.syntax unified
 1245              		.thumb
 1246              		.thumb_func
 1247              		.fpu fpv4-sp-d16
 1249              	USART_DMACmd:
 1250              	.LVL91:
 1251              	.LFB153:
1057:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1058:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1059:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
1060:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1061:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1062:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group8 DMA transfers management functions
1063:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   DMA transfers management functions
1064:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
1065:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
1066:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
1067:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                       DMA transfers management functions
1068:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
1069:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1070:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
1071:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
1072:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1073:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
1074:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1075:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's DMA interface.
1076:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1077:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1078:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_DMAReq: specifies the DMA request.
1079:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be any combination of the following values:
1080:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_DMAReq_Tx: USART DMA transmit request
1081:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_DMAReq_Rx: USART DMA receive request
1082:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the DMA Request sources.
1083:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.   
1084:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
1085:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1086:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_DMACmd(USART_TypeDef* USARTx, uint16_t USART_DMAReq, FunctionalState NewState)
1087:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1252              		.loc 1 1087 1 is_stmt 1 view -0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 0
 1255              		@ frame_needed = 0, uses_anonymous_args = 0
 1256              		@ link register save eliminated.
1088:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1089:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1257              		.loc 1 1089 3 view .LVU335
1090:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_DMAREQ(USART_DMAReq));  
 1258              		.loc 1 1090 3 view .LVU336
ARM GAS  /tmp/ccum4pBp.s 			page 42


1091:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
 1259              		.loc 1 1091 3 view .LVU337
1092:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1093:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1260              		.loc 1 1093 3 view .LVU338
 1261              		.loc 1 1093 6 is_stmt 0 view .LVU339
 1262 0000 22B1     		cbz	r2, .L71
1094:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1095:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the DMA transfer for selected requests by setting the DMAT and/or
1096:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****        DMAR bits in the USART CR3 register */
1097:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_DMAReq;
 1263              		.loc 1 1097 5 is_stmt 1 view .LVU340
 1264              		.loc 1 1097 17 is_stmt 0 view .LVU341
 1265 0002 838A     		ldrh	r3, [r0, #20]
 1266 0004 9BB2     		uxth	r3, r3
 1267 0006 1943     		orrs	r1, r1, r3
 1268              	.LVL92:
 1269              		.loc 1 1097 17 view .LVU342
 1270 0008 8182     		strh	r1, [r0, #20]	@ movhi
 1271 000a 7047     		bx	lr
 1272              	.LVL93:
 1273              	.L71:
1098:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1099:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
1100:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1101:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the DMA transfer for selected requests by clearing the DMAT and/or
1102:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****        DMAR bits in the USART CR3 register */
1103:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~USART_DMAReq;
 1274              		.loc 1 1103 5 is_stmt 1 view .LVU343
 1275              		.loc 1 1103 17 is_stmt 0 view .LVU344
 1276 000c 838A     		ldrh	r3, [r0, #20]
 1277              		.loc 1 1103 20 view .LVU345
 1278 000e C943     		mvns	r1, r1
 1279              	.LVL94:
 1280              		.loc 1 1103 20 view .LVU346
 1281 0010 89B2     		uxth	r1, r1
 1282              		.loc 1 1103 17 view .LVU347
 1283 0012 1940     		ands	r1, r1, r3
 1284 0014 8182     		strh	r1, [r0, #20]	@ movhi
1104:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1105:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1285              		.loc 1 1105 1 view .LVU348
 1286 0016 7047     		bx	lr
 1287              		.cfi_endproc
 1288              	.LFE153:
 1290              		.section	.text.USART_ITConfig,"ax",%progbits
 1291              		.align	1
 1292              		.global	USART_ITConfig
 1293              		.syntax unified
 1294              		.thumb
 1295              		.thumb_func
 1296              		.fpu fpv4-sp-d16
 1298              	USART_ITConfig:
 1299              	.LVL95:
 1300              	.LFB154:
1106:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1107:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
ARM GAS  /tmp/ccum4pBp.s 			page 43


1108:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
1109:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1110:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
1111:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group9 Interrupts and flags management functions
1112:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   Interrupts and flags management functions 
1113:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
1114:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
1115:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
1116:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                    Interrupts and flags management functions
1117:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
1118:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1119:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to configure the USART 
1120:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Interrupts sources, DMA channels requests and check or clear the flags or 
1121:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   pending bits status.
1122:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   The user should identify which mode will be used in his application to manage 
1123:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   the communication: Polling mode, Interrupt mode or DMA mode. 
1124:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1125:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Polling Mode
1126:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   =============
1127:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   In Polling Mode, the SPI communication can be managed by 10 flags:
1128:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. USART_FLAG_TXE : to indicate the status of the transmit buffer register
1129:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. USART_FLAG_RXNE : to indicate the status of the receive buffer register
1130:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      3. USART_FLAG_TC : to indicate the status of the transmit operation
1131:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      4. USART_FLAG_IDLE : to indicate the status of the Idle Line             
1132:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      5. USART_FLAG_CTS : to indicate the status of the nCTS input
1133:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      6. USART_FLAG_LBD : to indicate the status of the LIN break detection
1134:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      7. USART_FLAG_NE : to indicate if a noise error occur
1135:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      8. USART_FLAG_FE : to indicate if a frame error occur
1136:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      9. USART_FLAG_PE : to indicate if a parity error occur
1137:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      10. USART_FLAG_ORE : to indicate if an Overrun error occur
1138:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1139:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   In this Mode it is advised to use the following functions:
1140:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       - FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG);
1141:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       - void USART_ClearFlag(USART_TypeDef* USARTx, uint16_t USART_FLAG);
1142:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1143:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Interrupt Mode
1144:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   ===============
1145:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   In Interrupt Mode, the USART communication can be managed by 8 interrupt sources
1146:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   and 10 pending bits: 
1147:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1148:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Pending Bits:
1149:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   ------------- 
1150:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. USART_IT_TXE : to indicate the status of the transmit buffer register
1151:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. USART_IT_RXNE : to indicate the status of the receive buffer register
1152:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      3. USART_IT_TC : to indicate the status of the transmit operation
1153:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      4. USART_IT_IDLE : to indicate the status of the Idle Line             
1154:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      5. USART_IT_CTS : to indicate the status of the nCTS input
1155:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      6. USART_IT_LBD : to indicate the status of the LIN break detection
1156:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      7. USART_IT_NE : to indicate if a noise error occur
1157:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      8. USART_IT_FE : to indicate if a frame error occur
1158:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      9. USART_IT_PE : to indicate if a parity error occur
1159:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      10. USART_IT_ORE : to indicate if an Overrun error occur
1160:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1161:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Interrupt Source:
1162:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   -----------------
1163:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. USART_IT_TXE : specifies the interrupt source for the Tx buffer empty 
1164:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                        interrupt. 
ARM GAS  /tmp/ccum4pBp.s 			page 44


1165:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. USART_IT_RXNE : specifies the interrupt source for the Rx buffer not 
1166:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                         empty interrupt.
1167:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      3. USART_IT_TC : specifies the interrupt source for the Transmit complete 
1168:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                        interrupt. 
1169:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      4. USART_IT_IDLE : specifies the interrupt source for the Idle Line interrupt.             
1170:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      5. USART_IT_CTS : specifies the interrupt source for the CTS interrupt. 
1171:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      6. USART_IT_LBD : specifies the interrupt source for the LIN break detection
1172:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                        interrupt. 
1173:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      7. USART_IT_PE : specifies the interrupt source for the parity error interrupt. 
1174:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      8. USART_IT_ERR :  specifies the interrupt source for the errors interrupt.
1175:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1176:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note Some parameters are coded in order to use them as interrupt source or as pending bits.
1177:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1178:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   In this Mode it is advised to use the following functions:
1179:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      - void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState);
1180:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      - ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT);
1181:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      - void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT);
1182:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1183:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   DMA Mode
1184:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   ========
1185:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   In DMA Mode, the USART communication can be managed by 2 DMA Channel requests:
1186:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. USART_DMAReq_Tx: specifies the Tx buffer DMA transfer request
1187:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. USART_DMAReq_Rx: specifies the Rx buffer DMA transfer request
1188:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1189:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   In this Mode it is advised to use the following function:
1190:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      - void USART_DMACmd(USART_TypeDef* USARTx, uint16_t USART_DMAReq, FunctionalState NewState);
1191:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1192:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
1193:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
1194:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1195:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1196:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1197:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the specified USART interrupts.
1198:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1199:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1200:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_IT: specifies the USART interrupt sources to be enabled or disabled.
1201:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1202:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_CTS:  CTS change interrupt
1203:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_LBD:  LIN Break detection interrupt
1204:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_TXE:  Transmit Data Register empty interrupt
1205:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_TC:   Transmission complete interrupt
1206:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_RXNE: Receive Data register not empty interrupt
1207:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_IDLE: Idle line detection interrupt
1208:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_PE:   Parity Error interrupt
1209:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_ERR:  Error interrupt(Frame error, noise error, overrun error)
1210:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the specified USARTx interrupts.
1211:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
1212:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
1213:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1214:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState)
1215:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1301              		.loc 1 1215 1 is_stmt 1 view -0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 1305              		@ link register save eliminated.
 1306              		.loc 1 1215 1 is_stmt 0 view .LVU350
ARM GAS  /tmp/ccum4pBp.s 			page 45


 1307 0000 10B4     		push	{r4}
 1308              	.LCFI7:
 1309              		.cfi_def_cfa_offset 4
 1310              		.cfi_offset 4, -4
1216:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t usartreg = 0x00, itpos = 0x00, itmask = 0x00;
 1311              		.loc 1 1216 3 is_stmt 1 view .LVU351
 1312              	.LVL96:
1217:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t usartxbase = 0x00;
 1313              		.loc 1 1217 3 view .LVU352
1218:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1219:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1314              		.loc 1 1219 3 view .LVU353
1220:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_CONFIG_IT(USART_IT));
 1315              		.loc 1 1220 3 view .LVU354
1221:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1316              		.loc 1 1221 3 view .LVU355
1222:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1223:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* The CTS interrupt is not available for UART4 and UART5 */
1224:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (USART_IT == USART_IT_CTS)
 1317              		.loc 1 1224 3 view .LVU356
1225:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1226:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
 1318              		.loc 1 1226 5 view .LVU357
1227:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   } 
1228:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1229:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   usartxbase = (uint32_t)USARTx;
 1319              		.loc 1 1229 3 view .LVU358
1230:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1231:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Get the USART register index */
1232:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   usartreg = (((uint8_t)USART_IT) >> 0x05);
 1320              		.loc 1 1232 3 view .LVU359
 1321              		.loc 1 1232 35 is_stmt 0 view .LVU360
 1322 0002 C1F34214 		ubfx	r4, r1, #5, #3
 1323              	.LVL97:
1233:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1234:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Get the interrupt position */
1235:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   itpos = USART_IT & IT_MASK;
 1324              		.loc 1 1235 3 is_stmt 1 view .LVU361
 1325              		.loc 1 1235 9 is_stmt 0 view .LVU362
 1326 0006 01F01F01 		and	r1, r1, #31
 1327              	.LVL98:
1236:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   itmask = (((uint32_t)0x01) << itpos);
 1328              		.loc 1 1236 3 is_stmt 1 view .LVU363
 1329              		.loc 1 1236 10 is_stmt 0 view .LVU364
 1330 000a 0123     		movs	r3, #1
 1331 000c 03FA01F1 		lsl	r1, r3, r1
 1332              	.LVL99:
1237:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1238:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (usartreg == 0x01) /* The IT is in CR1 register */
 1333              		.loc 1 1238 3 is_stmt 1 view .LVU365
 1334              		.loc 1 1238 6 is_stmt 0 view .LVU366
 1335 0010 9C42     		cmp	r4, r3
 1336 0012 09D0     		beq	.L80
1239:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1240:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     usartxbase += 0x0C;
1241:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1242:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (usartreg == 0x02) /* The IT is in CR2 register */
ARM GAS  /tmp/ccum4pBp.s 			page 46


 1337              		.loc 1 1242 8 is_stmt 1 view .LVU367
 1338              		.loc 1 1242 11 is_stmt 0 view .LVU368
 1339 0014 022C     		cmp	r4, #2
 1340 0016 09D0     		beq	.L81
1243:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1244:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     usartxbase += 0x10;
1245:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1246:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else /* The IT is in CR3 register */
1247:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1248:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     usartxbase += 0x14; 
 1341              		.loc 1 1248 5 is_stmt 1 view .LVU369
 1342              		.loc 1 1248 16 is_stmt 0 view .LVU370
 1343 0018 1430     		adds	r0, r0, #20
 1344              	.LVL100:
 1345              	.L75:
1249:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1250:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1346              		.loc 1 1250 3 is_stmt 1 view .LVU371
 1347              		.loc 1 1250 6 is_stmt 0 view .LVU372
 1348 001a 4AB1     		cbz	r2, .L77
1251:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1252:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     *(__IO uint32_t*)usartxbase  |= itmask;
 1349              		.loc 1 1252 5 is_stmt 1 view .LVU373
 1350              		.loc 1 1252 34 is_stmt 0 view .LVU374
 1351 001c 0368     		ldr	r3, [r0]
 1352 001e 1943     		orrs	r1, r1, r3
 1353              	.LVL101:
 1354              		.loc 1 1252 34 view .LVU375
 1355 0020 0160     		str	r1, [r0]
 1356              	.L73:
1253:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1254:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
1255:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     *(__IO uint32_t*)usartxbase &= ~itmask;
1257:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1258:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1357              		.loc 1 1258 1 view .LVU376
 1358 0022 5DF8044B 		ldr	r4, [sp], #4
 1359              	.LCFI8:
 1360              		.cfi_remember_state
 1361              		.cfi_restore 4
 1362              		.cfi_def_cfa_offset 0
 1363              	.LVL102:
 1364              		.loc 1 1258 1 view .LVU377
 1365 0026 7047     		bx	lr
 1366              	.LVL103:
 1367              	.L80:
 1368              	.LCFI9:
 1369              		.cfi_restore_state
1240:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1370              		.loc 1 1240 5 is_stmt 1 view .LVU378
1240:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1371              		.loc 1 1240 16 is_stmt 0 view .LVU379
 1372 0028 0C30     		adds	r0, r0, #12
 1373              	.LVL104:
1240:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1374              		.loc 1 1240 16 view .LVU380
ARM GAS  /tmp/ccum4pBp.s 			page 47


 1375 002a F6E7     		b	.L75
 1376              	.LVL105:
 1377              	.L81:
1244:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1378              		.loc 1 1244 5 is_stmt 1 view .LVU381
1244:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1379              		.loc 1 1244 16 is_stmt 0 view .LVU382
 1380 002c 1030     		adds	r0, r0, #16
 1381              	.LVL106:
1244:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1382              		.loc 1 1244 16 view .LVU383
 1383 002e F4E7     		b	.L75
 1384              	.LVL107:
 1385              	.L77:
1256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1386              		.loc 1 1256 5 is_stmt 1 view .LVU384
1256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1387              		.loc 1 1256 33 is_stmt 0 view .LVU385
 1388 0030 0368     		ldr	r3, [r0]
 1389 0032 23EA0101 		bic	r1, r3, r1
 1390              	.LVL108:
1256:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1391              		.loc 1 1256 33 view .LVU386
 1392 0036 0160     		str	r1, [r0]
 1393              		.loc 1 1258 1 view .LVU387
 1394 0038 F3E7     		b	.L73
 1395              		.cfi_endproc
 1396              	.LFE154:
 1398              		.section	.text.USART_GetFlagStatus,"ax",%progbits
 1399              		.align	1
 1400              		.global	USART_GetFlagStatus
 1401              		.syntax unified
 1402              		.thumb
 1403              		.thumb_func
 1404              		.fpu fpv4-sp-d16
 1406              	USART_GetFlagStatus:
 1407              	.LVL109:
 1408              	.LFB155:
1259:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1260:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1261:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Checks whether the specified USART flag is set or not.
1262:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1263:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1264:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_FLAG: specifies the flag to check.
1265:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1266:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_CTS:  CTS Change flag (not available for UART4 and UART5)
1267:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_LBD:  LIN Break detection flag
1268:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_TXE:  Transmit data register empty flag
1269:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_TC:   Transmission Complete flag
1270:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_RXNE: Receive data register not empty flag
1271:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_IDLE: Idle Line detection flag
1272:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_ORE:  OverRun Error flag
1273:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_NE:   Noise Error flag
1274:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_FE:   Framing Error flag
1275:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_PE:   Parity Error flag
1276:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval The new state of USART_FLAG (SET or RESET).
1277:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
ARM GAS  /tmp/ccum4pBp.s 			page 48


1278:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG)
1279:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1409              		.loc 1 1279 1 is_stmt 1 view -0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 0
 1412              		@ frame_needed = 0, uses_anonymous_args = 0
 1413              		@ link register save eliminated.
1280:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   FlagStatus bitstatus = RESET;
 1414              		.loc 1 1280 3 view .LVU389
1281:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1282:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1415              		.loc 1 1282 3 view .LVU390
1283:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_FLAG(USART_FLAG));
 1416              		.loc 1 1283 3 view .LVU391
1284:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1285:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* The CTS flag is not available for UART4 and UART5 */
1286:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (USART_FLAG == USART_FLAG_CTS)
 1417              		.loc 1 1286 3 view .LVU392
1287:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1288:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
 1418              		.loc 1 1288 5 view .LVU393
1289:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   } 
1290:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1291:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if ((USARTx->SR & USART_FLAG) != (uint16_t)RESET)
 1419              		.loc 1 1291 3 view .LVU394
 1420              		.loc 1 1291 14 is_stmt 0 view .LVU395
 1421 0000 0388     		ldrh	r3, [r0]
 1422              		.loc 1 1291 6 view .LVU396
 1423 0002 1942     		tst	r1, r3
 1424 0004 01D0     		beq	.L84
1292:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1293:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     bitstatus = SET;
 1425              		.loc 1 1293 15 view .LVU397
 1426 0006 0120     		movs	r0, #1
 1427              	.LVL110:
 1428              		.loc 1 1293 15 view .LVU398
 1429 0008 7047     		bx	lr
 1430              	.LVL111:
 1431              	.L84:
1294:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1295:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
1296:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1297:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     bitstatus = RESET;
 1432              		.loc 1 1297 15 view .LVU399
 1433 000a 0020     		movs	r0, #0
 1434              	.LVL112:
1298:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1299:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   return bitstatus;
 1435              		.loc 1 1299 3 is_stmt 1 view .LVU400
1300:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1436              		.loc 1 1300 1 is_stmt 0 view .LVU401
 1437 000c 7047     		bx	lr
 1438              		.cfi_endproc
 1439              	.LFE155:
 1441              		.section	.text.USART_ClearFlag,"ax",%progbits
 1442              		.align	1
 1443              		.global	USART_ClearFlag
ARM GAS  /tmp/ccum4pBp.s 			page 49


 1444              		.syntax unified
 1445              		.thumb
 1446              		.thumb_func
 1447              		.fpu fpv4-sp-d16
 1449              	USART_ClearFlag:
 1450              	.LVL113:
 1451              	.LFB156:
1301:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1302:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1303:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Clears the USARTx's pending flags.
1304:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1305:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1306:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_FLAG: specifies the flag to clear.
1307:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be any combination of the following values:
1308:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_CTS:  CTS Change flag (not available for UART4 and UART5).
1309:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_LBD:  LIN Break detection flag.
1310:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_TC:   Transmission Complete flag.
1311:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_RXNE: Receive data register not empty flag.
1312:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *   
1313:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   PE (Parity error), FE (Framing error), NE (Noise error), ORE (OverRun 
1314:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          error) and IDLE (Idle line detected) flags are cleared by software 
1315:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          sequence: a read operation to USART_SR register (USART_GetFlagStatus()) 
1316:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          followed by a read operation to USART_DR register (USART_ReceiveData()).
1317:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   RXNE flag can be also cleared by a read to the USART_DR register 
1318:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          (USART_ReceiveData()).
1319:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   TC flag can be also cleared by software sequence: a read operation to 
1320:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          USART_SR register (USART_GetFlagStatus()) followed by a write operation
1321:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          to USART_DR register (USART_SendData()).
1322:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   TXE flag is cleared only by a write to the USART_DR register 
1323:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          (USART_SendData()).
1324:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *   
1325:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
1326:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1327:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_ClearFlag(USART_TypeDef* USARTx, uint16_t USART_FLAG)
1328:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1452              		.loc 1 1328 1 is_stmt 1 view -0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456              		@ link register save eliminated.
1329:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1330:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1457              		.loc 1 1330 3 view .LVU403
1331:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_CLEAR_FLAG(USART_FLAG));
 1458              		.loc 1 1331 3 view .LVU404
1332:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1333:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* The CTS flag is not available for UART4 and UART5 */
1334:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if ((USART_FLAG & USART_FLAG_CTS) == USART_FLAG_CTS)
 1459              		.loc 1 1334 3 view .LVU405
1335:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1336:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
 1460              		.loc 1 1336 5 view .LVU406
1337:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   } 
1338:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****        
1339:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->SR = (uint16_t)~USART_FLAG;
 1461              		.loc 1 1339 3 view .LVU407
 1462              		.loc 1 1339 16 is_stmt 0 view .LVU408
ARM GAS  /tmp/ccum4pBp.s 			page 50


 1463 0000 C943     		mvns	r1, r1
 1464              	.LVL114:
 1465              		.loc 1 1339 16 view .LVU409
 1466 0002 89B2     		uxth	r1, r1
 1467              		.loc 1 1339 14 view .LVU410
 1468 0004 0180     		strh	r1, [r0]	@ movhi
1340:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1469              		.loc 1 1340 1 view .LVU411
 1470 0006 7047     		bx	lr
 1471              		.cfi_endproc
 1472              	.LFE156:
 1474              		.section	.text.USART_GetITStatus,"ax",%progbits
 1475              		.align	1
 1476              		.global	USART_GetITStatus
 1477              		.syntax unified
 1478              		.thumb
 1479              		.thumb_func
 1480              		.fpu fpv4-sp-d16
 1482              	USART_GetITStatus:
 1483              	.LVL115:
 1484              	.LFB157:
1341:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1342:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1343:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Checks whether the specified USART interrupt has occurred or not.
1344:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1345:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1346:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_IT: specifies the USART interrupt source to check.
1347:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1348:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_CTS:  CTS change interrupt (not available for UART4 and UART5)
1349:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_LBD:  LIN Break detection interrupt
1350:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_TXE:  Transmit Data Register empty interrupt
1351:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_TC:   Transmission complete interrupt
1352:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_RXNE: Receive Data register not empty interrupt
1353:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_IDLE: Idle line detection interrupt
1354:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_ORE_RX : OverRun Error interrupt if the RXNEIE bit is set
1355:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_ORE_ER : OverRun Error interrupt if the EIE bit is set  
1356:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_NE:   Noise Error interrupt
1357:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_FE:   Framing Error interrupt
1358:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_PE:   Parity Error interrupt
1359:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval The new state of USART_IT (SET or RESET).
1360:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1361:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT)
1362:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1485              		.loc 1 1362 1 is_stmt 1 view -0
 1486              		.cfi_startproc
 1487              		@ args = 0, pretend = 0, frame = 0
 1488              		@ frame_needed = 0, uses_anonymous_args = 0
 1489              		@ link register save eliminated.
 1490              		.loc 1 1362 1 is_stmt 0 view .LVU413
 1491 0000 10B4     		push	{r4}
 1492              	.LCFI10:
 1493              		.cfi_def_cfa_offset 4
 1494              		.cfi_offset 4, -4
1363:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t bitpos = 0x00, itmask = 0x00, usartreg = 0x00;
 1495              		.loc 1 1363 3 is_stmt 1 view .LVU414
 1496              	.LVL116:
1364:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   ITStatus bitstatus = RESET;
ARM GAS  /tmp/ccum4pBp.s 			page 51


 1497              		.loc 1 1364 3 view .LVU415
1365:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1366:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1498              		.loc 1 1366 3 view .LVU416
1367:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_GET_IT(USART_IT)); 
 1499              		.loc 1 1367 3 view .LVU417
1368:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1369:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* The CTS interrupt is not available for UART4 and UART5 */ 
1370:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (USART_IT == USART_IT_CTS)
 1500              		.loc 1 1370 3 view .LVU418
1371:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1372:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
 1501              		.loc 1 1372 5 view .LVU419
1373:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   } 
1374:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1375:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Get the USART register index */
1376:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   usartreg = (((uint8_t)USART_IT) >> 0x05);
 1502              		.loc 1 1376 3 view .LVU420
 1503              		.loc 1 1376 35 is_stmt 0 view .LVU421
 1504 0002 C1F34212 		ubfx	r2, r1, #5, #3
 1505              	.LVL117:
1377:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Get the interrupt position */
1378:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   itmask = USART_IT & IT_MASK;
 1506              		.loc 1 1378 3 is_stmt 1 view .LVU422
 1507              		.loc 1 1378 10 is_stmt 0 view .LVU423
 1508 0006 01F01F04 		and	r4, r1, #31
 1509              	.LVL118:
1379:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   itmask = (uint32_t)0x01 << itmask;
 1510              		.loc 1 1379 3 is_stmt 1 view .LVU424
 1511              		.loc 1 1379 10 is_stmt 0 view .LVU425
 1512 000a 0123     		movs	r3, #1
 1513 000c A340     		lsls	r3, r3, r4
 1514              	.LVL119:
1380:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
1381:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (usartreg == 0x01) /* The IT  is in CR1 register */
 1515              		.loc 1 1381 3 is_stmt 1 view .LVU426
 1516              		.loc 1 1381 6 is_stmt 0 view .LVU427
 1517 000e 012A     		cmp	r2, #1
 1518 0010 0FD0     		beq	.L94
1382:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1383:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     itmask &= USARTx->CR1;
1384:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1385:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (usartreg == 0x02) /* The IT  is in CR2 register */
 1519              		.loc 1 1385 8 is_stmt 1 view .LVU428
 1520              		.loc 1 1385 11 is_stmt 0 view .LVU429
 1521 0012 022A     		cmp	r2, #2
 1522 0014 11D0     		beq	.L95
1386:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1387:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     itmask &= USARTx->CR2;
1388:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1389:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else /* The IT  is in CR3 register */
1390:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1391:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     itmask &= USARTx->CR3;
 1523              		.loc 1 1391 5 is_stmt 1 view .LVU430
 1524              		.loc 1 1391 21 is_stmt 0 view .LVU431
 1525 0016 828A     		ldrh	r2, [r0, #20]
 1526              	.LVL120:
ARM GAS  /tmp/ccum4pBp.s 			page 52


 1527              		.loc 1 1391 21 view .LVU432
 1528 0018 92B2     		uxth	r2, r2
 1529              		.loc 1 1391 12 view .LVU433
 1530 001a 1340     		ands	r3, r3, r2
 1531              	.LVL121:
 1532              	.L88:
1392:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1393:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
1394:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   bitpos = USART_IT >> 0x08;
 1533              		.loc 1 1394 3 is_stmt 1 view .LVU434
 1534              		.loc 1 1394 21 is_stmt 0 view .LVU435
 1535 001c 090A     		lsrs	r1, r1, #8
 1536              	.LVL122:
1395:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   bitpos = (uint32_t)0x01 << bitpos;
 1537              		.loc 1 1395 3 is_stmt 1 view .LVU436
 1538              		.loc 1 1395 10 is_stmt 0 view .LVU437
 1539 001e 0122     		movs	r2, #1
 1540 0020 02FA01F1 		lsl	r1, r2, r1
 1541              	.LVL123:
1396:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   bitpos &= USARTx->SR;
 1542              		.loc 1 1396 3 is_stmt 1 view .LVU438
 1543              		.loc 1 1396 19 is_stmt 0 view .LVU439
 1544 0024 0288     		ldrh	r2, [r0]
 1545 0026 92B2     		uxth	r2, r2
 1546              		.loc 1 1396 10 view .LVU440
 1547 0028 0A40     		ands	r2, r2, r1
 1548              	.LVL124:
1397:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if ((itmask != (uint16_t)RESET)&&(bitpos != (uint16_t)RESET))
 1549              		.loc 1 1397 3 is_stmt 1 view .LVU441
 1550              		.loc 1 1397 6 is_stmt 0 view .LVU442
 1551 002a 53B1     		cbz	r3, .L91
 1552              		.loc 1 1397 34 discriminator 1 view .LVU443
 1553 002c 6AB9     		cbnz	r2, .L92
1398:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1399:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     bitstatus = SET;
1400:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1401:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
1402:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1403:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     bitstatus = RESET;
 1554              		.loc 1 1403 15 view .LVU444
 1555 002e 0020     		movs	r0, #0
 1556              	.LVL125:
 1557              		.loc 1 1403 15 view .LVU445
 1558 0030 08E0     		b	.L90
 1559              	.LVL126:
 1560              	.L94:
1383:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1561              		.loc 1 1383 5 is_stmt 1 view .LVU446
1383:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1562              		.loc 1 1383 21 is_stmt 0 view .LVU447
 1563 0032 8289     		ldrh	r2, [r0, #12]
 1564              	.LVL127:
1383:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1565              		.loc 1 1383 21 view .LVU448
 1566 0034 92B2     		uxth	r2, r2
1383:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1567              		.loc 1 1383 12 view .LVU449
ARM GAS  /tmp/ccum4pBp.s 			page 53


 1568 0036 1340     		ands	r3, r3, r2
 1569              	.LVL128:
1383:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1570              		.loc 1 1383 12 view .LVU450
 1571 0038 F0E7     		b	.L88
 1572              	.LVL129:
 1573              	.L95:
1387:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1574              		.loc 1 1387 5 is_stmt 1 view .LVU451
1387:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1575              		.loc 1 1387 21 is_stmt 0 view .LVU452
 1576 003a 028A     		ldrh	r2, [r0, #16]
 1577              	.LVL130:
1387:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1578              		.loc 1 1387 21 view .LVU453
 1579 003c 92B2     		uxth	r2, r2
1387:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1580              		.loc 1 1387 12 view .LVU454
 1581 003e 1340     		ands	r3, r3, r2
 1582              	.LVL131:
1387:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1583              		.loc 1 1387 12 view .LVU455
 1584 0040 ECE7     		b	.L88
 1585              	.LVL132:
 1586              	.L91:
 1587              		.loc 1 1403 15 view .LVU456
 1588 0042 0020     		movs	r0, #0
 1589              	.LVL133:
 1590              	.L90:
1404:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1405:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
1406:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   return bitstatus;  
 1591              		.loc 1 1406 3 is_stmt 1 view .LVU457
1407:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1592              		.loc 1 1407 1 is_stmt 0 view .LVU458
 1593 0044 5DF8044B 		ldr	r4, [sp], #4
 1594              	.LCFI11:
 1595              		.cfi_remember_state
 1596              		.cfi_restore 4
 1597              		.cfi_def_cfa_offset 0
 1598 0048 7047     		bx	lr
 1599              	.LVL134:
 1600              	.L92:
 1601              	.LCFI12:
 1602              		.cfi_restore_state
1399:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1603              		.loc 1 1399 15 view .LVU459
 1604 004a 0120     		movs	r0, #1
 1605              	.LVL135:
1399:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1606              		.loc 1 1399 15 view .LVU460
 1607 004c FAE7     		b	.L90
 1608              		.cfi_endproc
 1609              	.LFE157:
 1611              		.section	.text.USART_ClearITPendingBit,"ax",%progbits
 1612              		.align	1
 1613              		.global	USART_ClearITPendingBit
ARM GAS  /tmp/ccum4pBp.s 			page 54


 1614              		.syntax unified
 1615              		.thumb
 1616              		.thumb_func
 1617              		.fpu fpv4-sp-d16
 1619              	USART_ClearITPendingBit:
 1620              	.LVL136:
 1621              	.LFB158:
1408:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1409:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1410:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Clears the USARTx's interrupt pending bits.
1411:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1412:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1413:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_IT: specifies the interrupt pending bit to clear.
1414:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1415:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_CTS:  CTS change interrupt (not available for UART4 and UART5)
1416:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_LBD:  LIN Break detection interrupt
1417:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_TC:   Transmission complete interrupt. 
1418:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_RXNE: Receive Data register not empty interrupt.
1419:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
1420:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   PE (Parity error), FE (Framing error), NE (Noise error), ORE (OverRun 
1421:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          error) and IDLE (Idle line detected) pending bits are cleared by 
1422:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          software sequence: a read operation to USART_SR register 
1423:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          (USART_GetITStatus()) followed by a read operation to USART_DR register 
1424:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          (USART_ReceiveData()).
1425:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   RXNE pending bit can be also cleared by a read to the USART_DR register 
1426:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          (USART_ReceiveData()).
1427:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   TC pending bit can be also cleared by software sequence: a read 
1428:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          operation to USART_SR register (USART_GetITStatus()) followed by a write 
1429:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          operation to USART_DR register (USART_SendData()).
1430:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   TXE pending bit is cleared only by a write to the USART_DR register 
1431:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          (USART_SendData()).
1432:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *  
1433:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
1434:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1435:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT)
1436:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1622              		.loc 1 1436 1 is_stmt 1 view -0
 1623              		.cfi_startproc
 1624              		@ args = 0, pretend = 0, frame = 0
 1625              		@ frame_needed = 0, uses_anonymous_args = 0
 1626              		@ link register save eliminated.
1437:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint16_t bitpos = 0x00, itmask = 0x00;
 1627              		.loc 1 1437 3 view .LVU462
1438:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1439:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1628              		.loc 1 1439 3 view .LVU463
1440:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_CLEAR_IT(USART_IT)); 
 1629              		.loc 1 1440 3 view .LVU464
1441:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1442:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* The CTS interrupt is not available for UART4 and UART5 */
1443:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (USART_IT == USART_IT_CTS)
 1630              		.loc 1 1443 3 view .LVU465
1444:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1445:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
 1631              		.loc 1 1445 5 view .LVU466
1446:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   } 
1447:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
ARM GAS  /tmp/ccum4pBp.s 			page 55


1448:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   bitpos = USART_IT >> 0x08;
 1632              		.loc 1 1448 3 view .LVU467
 1633              		.loc 1 1448 10 is_stmt 0 view .LVU468
 1634 0000 090A     		lsrs	r1, r1, #8
 1635              	.LVL137:
1449:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   itmask = ((uint16_t)0x01 << (uint16_t)bitpos);
 1636              		.loc 1 1449 3 is_stmt 1 view .LVU469
 1637              		.loc 1 1449 28 is_stmt 0 view .LVU470
 1638 0002 0123     		movs	r3, #1
 1639 0004 8B40     		lsls	r3, r3, r1
 1640              		.loc 1 1449 10 view .LVU471
 1641 0006 9BB2     		uxth	r3, r3
 1642              	.LVL138:
1450:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->SR = (uint16_t)~itmask;
 1643              		.loc 1 1450 3 is_stmt 1 view .LVU472
 1644              		.loc 1 1450 16 is_stmt 0 view .LVU473
 1645 0008 DB43     		mvns	r3, r3
 1646              	.LVL139:
 1647              		.loc 1 1450 16 view .LVU474
 1648 000a 9BB2     		uxth	r3, r3
 1649              	.LVL140:
 1650              		.loc 1 1450 14 view .LVU475
 1651 000c 0380     		strh	r3, [r0]	@ movhi
1451:Drivers/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1652              		.loc 1 1451 1 view .LVU476
 1653 000e 7047     		bx	lr
 1654              		.cfi_endproc
 1655              	.LFE158:
 1657              		.text
 1658              	.Letext0:
 1659              		.file 2 "/home/way/Programs/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 1660              		.file 3 "/home/way/Programs/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 1661              		.file 4 "Drivers/CMSIS/Core/Include/core_cm4.h"
 1662              		.file 5 "Inc/system_stm32f4xx.h"
 1663              		.file 6 "Inc/stm32f4xx.h"
 1664              		.file 7 "Drivers/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
 1665              		.file 8 "Drivers/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
ARM GAS  /tmp/ccum4pBp.s 			page 56


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_usart.c
     /tmp/ccum4pBp.s:18     .text.USART_DeInit:0000000000000000 $t
     /tmp/ccum4pBp.s:26     .text.USART_DeInit:0000000000000000 USART_DeInit
     /tmp/ccum4pBp.s:169    .text.USART_DeInit:00000000000000a4 $d
     /tmp/ccum4pBp.s:179    .text.USART_Init:0000000000000000 $t
     /tmp/ccum4pBp.s:186    .text.USART_Init:0000000000000000 USART_Init
     /tmp/ccum4pBp.s:426    .text.USART_Init:00000000000000c8 $d
     /tmp/ccum4pBp.s:432    .text.USART_StructInit:0000000000000000 $t
     /tmp/ccum4pBp.s:439    .text.USART_StructInit:0000000000000000 USART_StructInit
     /tmp/ccum4pBp.s:474    .text.USART_ClockInit:0000000000000000 $t
     /tmp/ccum4pBp.s:481    .text.USART_ClockInit:0000000000000000 USART_ClockInit
     /tmp/ccum4pBp.s:546    .text.USART_ClockStructInit:0000000000000000 $t
     /tmp/ccum4pBp.s:553    .text.USART_ClockStructInit:0000000000000000 USART_ClockStructInit
     /tmp/ccum4pBp.s:580    .text.USART_Cmd:0000000000000000 $t
     /tmp/ccum4pBp.s:587    .text.USART_Cmd:0000000000000000 USART_Cmd
     /tmp/ccum4pBp.s:621    .text.USART_SetPrescaler:0000000000000000 $t
     /tmp/ccum4pBp.s:628    .text.USART_SetPrescaler:0000000000000000 USART_SetPrescaler
     /tmp/ccum4pBp.s:654    .text.USART_OverSampling8Cmd:0000000000000000 $t
     /tmp/ccum4pBp.s:661    .text.USART_OverSampling8Cmd:0000000000000000 USART_OverSampling8Cmd
     /tmp/ccum4pBp.s:694    .text.USART_OneBitMethodCmd:0000000000000000 $t
     /tmp/ccum4pBp.s:701    .text.USART_OneBitMethodCmd:0000000000000000 USART_OneBitMethodCmd
     /tmp/ccum4pBp.s:735    .text.USART_SendData:0000000000000000 $t
     /tmp/ccum4pBp.s:742    .text.USART_SendData:0000000000000000 USART_SendData
     /tmp/ccum4pBp.s:764    .text.USART_ReceiveData:0000000000000000 $t
     /tmp/ccum4pBp.s:771    .text.USART_ReceiveData:0000000000000000 USART_ReceiveData
     /tmp/ccum4pBp.s:791    .text.USART_SetAddress:0000000000000000 $t
     /tmp/ccum4pBp.s:798    .text.USART_SetAddress:0000000000000000 USART_SetAddress
     /tmp/ccum4pBp.s:827    .text.USART_ReceiverWakeUpCmd:0000000000000000 $t
     /tmp/ccum4pBp.s:834    .text.USART_ReceiverWakeUpCmd:0000000000000000 USART_ReceiverWakeUpCmd
     /tmp/ccum4pBp.s:868    .text.USART_WakeUpConfig:0000000000000000 $t
     /tmp/ccum4pBp.s:875    .text.USART_WakeUpConfig:0000000000000000 USART_WakeUpConfig
     /tmp/ccum4pBp.s:904    .text.USART_LINBreakDetectLengthConfig:0000000000000000 $t
     /tmp/ccum4pBp.s:911    .text.USART_LINBreakDetectLengthConfig:0000000000000000 USART_LINBreakDetectLengthConfig
     /tmp/ccum4pBp.s:940    .text.USART_LINCmd:0000000000000000 $t
     /tmp/ccum4pBp.s:947    .text.USART_LINCmd:0000000000000000 USART_LINCmd
     /tmp/ccum4pBp.s:981    .text.USART_SendBreak:0000000000000000 $t
     /tmp/ccum4pBp.s:988    .text.USART_SendBreak:0000000000000000 USART_SendBreak
     /tmp/ccum4pBp.s:1009   .text.USART_HalfDuplexCmd:0000000000000000 $t
     /tmp/ccum4pBp.s:1016   .text.USART_HalfDuplexCmd:0000000000000000 USART_HalfDuplexCmd
     /tmp/ccum4pBp.s:1050   .text.USART_SetGuardTime:0000000000000000 $t
     /tmp/ccum4pBp.s:1057   .text.USART_SetGuardTime:0000000000000000 USART_SetGuardTime
     /tmp/ccum4pBp.s:1083   .text.USART_SmartCardCmd:0000000000000000 $t
     /tmp/ccum4pBp.s:1090   .text.USART_SmartCardCmd:0000000000000000 USART_SmartCardCmd
     /tmp/ccum4pBp.s:1124   .text.USART_SmartCardNACKCmd:0000000000000000 $t
     /tmp/ccum4pBp.s:1131   .text.USART_SmartCardNACKCmd:0000000000000000 USART_SmartCardNACKCmd
     /tmp/ccum4pBp.s:1165   .text.USART_IrDAConfig:0000000000000000 $t
     /tmp/ccum4pBp.s:1172   .text.USART_IrDAConfig:0000000000000000 USART_IrDAConfig
     /tmp/ccum4pBp.s:1201   .text.USART_IrDACmd:0000000000000000 $t
     /tmp/ccum4pBp.s:1208   .text.USART_IrDACmd:0000000000000000 USART_IrDACmd
     /tmp/ccum4pBp.s:1242   .text.USART_DMACmd:0000000000000000 $t
     /tmp/ccum4pBp.s:1249   .text.USART_DMACmd:0000000000000000 USART_DMACmd
     /tmp/ccum4pBp.s:1291   .text.USART_ITConfig:0000000000000000 $t
     /tmp/ccum4pBp.s:1298   .text.USART_ITConfig:0000000000000000 USART_ITConfig
     /tmp/ccum4pBp.s:1399   .text.USART_GetFlagStatus:0000000000000000 $t
     /tmp/ccum4pBp.s:1406   .text.USART_GetFlagStatus:0000000000000000 USART_GetFlagStatus
     /tmp/ccum4pBp.s:1442   .text.USART_ClearFlag:0000000000000000 $t
ARM GAS  /tmp/ccum4pBp.s 			page 57


     /tmp/ccum4pBp.s:1449   .text.USART_ClearFlag:0000000000000000 USART_ClearFlag
     /tmp/ccum4pBp.s:1475   .text.USART_GetITStatus:0000000000000000 $t
     /tmp/ccum4pBp.s:1482   .text.USART_GetITStatus:0000000000000000 USART_GetITStatus
     /tmp/ccum4pBp.s:1612   .text.USART_ClearITPendingBit:0000000000000000 $t
     /tmp/ccum4pBp.s:1619   .text.USART_ClearITPendingBit:0000000000000000 USART_ClearITPendingBit

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
