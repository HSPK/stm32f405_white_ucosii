ARM GAS  /tmp/ccxgEmFy.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"os_core.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.OS_InitMisc,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	OS_InitMisc:
  26              	.LFB20:
  27              		.file 1 "uCOSII/Source/os_core.c"
   1:uCOSII/Source/os_core.c **** /*
   2:uCOSII/Source/os_core.c **** ***************************************************************************************************
   3:uCOSII/Source/os_core.c **** *                                                uC/OS-II
   4:uCOSII/Source/os_core.c **** *                                          The Real-Time Kernel
   5:uCOSII/Source/os_core.c **** *                                             CORE FUNCTIONS
   6:uCOSII/Source/os_core.c **** *
   7:uCOSII/Source/os_core.c **** *                              (c) Copyright 1992-2013, Micrium, Weston, FL
   8:uCOSII/Source/os_core.c **** *                                           All Rights Reserved
   9:uCOSII/Source/os_core.c **** *
  10:uCOSII/Source/os_core.c **** * File    : OS_CORE.C
  11:uCOSII/Source/os_core.c **** * By      : Jean J. Labrosse
  12:uCOSII/Source/os_core.c **** * Version : V2.92.10
  13:uCOSII/Source/os_core.c **** *
  14:uCOSII/Source/os_core.c **** * LICENSING TERMS:
  15:uCOSII/Source/os_core.c **** * ---------------
  16:uCOSII/Source/os_core.c **** *   uC/OS-II is provided in source form for FREE evaluation, for educational use or for peaceful re
  17:uCOSII/Source/os_core.c **** * If you plan on using  uC/OS-II  in a commercial product you need to contact Micrium to properly l
  18:uCOSII/Source/os_core.c **** * its use in your product. We provide ALL the source code for your convenience and to help you expe
  19:uCOSII/Source/os_core.c **** * uC/OS-II.   The fact that the  source is provided does  NOT  mean that you can use it without  pa
  20:uCOSII/Source/os_core.c **** * licensing fee.
  21:uCOSII/Source/os_core.c **** ***************************************************************************************************
  22:uCOSII/Source/os_core.c **** */
  23:uCOSII/Source/os_core.c **** 
  24:uCOSII/Source/os_core.c **** #define  MICRIUM_SOURCE
  25:uCOSII/Source/os_core.c **** 
  26:uCOSII/Source/os_core.c **** #ifndef  OS_MASTER_FILE
  27:uCOSII/Source/os_core.c **** #define  OS_GLOBALS
  28:uCOSII/Source/os_core.c **** #include <ucos_ii.h>
  29:uCOSII/Source/os_core.c **** #endif
  30:uCOSII/Source/os_core.c **** 
  31:uCOSII/Source/os_core.c **** /*
ARM GAS  /tmp/ccxgEmFy.s 			page 2


  32:uCOSII/Source/os_core.c **** ***************************************************************************************************
  33:uCOSII/Source/os_core.c **** *                                      PRIORITY RESOLUTION TABLE
  34:uCOSII/Source/os_core.c **** *
  35:uCOSII/Source/os_core.c **** * Note: Index into table is bit pattern to resolve highest priority
  36:uCOSII/Source/os_core.c **** *       Indexed value corresponds to highest priority bit position (i.e. 0..7)
  37:uCOSII/Source/os_core.c **** ***************************************************************************************************
  38:uCOSII/Source/os_core.c **** */
  39:uCOSII/Source/os_core.c **** 
  40:uCOSII/Source/os_core.c **** INT8U  const  OSUnMapTbl[256] = {
  41:uCOSII/Source/os_core.c ****     0u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x00 to 0x0F                
  42:uCOSII/Source/os_core.c ****     4u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x10 to 0x1F                
  43:uCOSII/Source/os_core.c ****     5u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x20 to 0x2F                
  44:uCOSII/Source/os_core.c ****     4u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x30 to 0x3F                
  45:uCOSII/Source/os_core.c ****     6u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x40 to 0x4F                
  46:uCOSII/Source/os_core.c ****     4u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x50 to 0x5F                
  47:uCOSII/Source/os_core.c ****     5u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x60 to 0x6F                
  48:uCOSII/Source/os_core.c ****     4u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x70 to 0x7F                
  49:uCOSII/Source/os_core.c ****     7u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x80 to 0x8F                
  50:uCOSII/Source/os_core.c ****     4u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0x90 to 0x9F                
  51:uCOSII/Source/os_core.c ****     5u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0xA0 to 0xAF                
  52:uCOSII/Source/os_core.c ****     4u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0xB0 to 0xBF                
  53:uCOSII/Source/os_core.c ****     6u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0xC0 to 0xCF                
  54:uCOSII/Source/os_core.c ****     4u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0xD0 to 0xDF                
  55:uCOSII/Source/os_core.c ****     5u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, /* 0xE0 to 0xEF                
  56:uCOSII/Source/os_core.c ****     4u, 0u, 1u, 0u, 2u, 0u, 1u, 0u, 3u, 0u, 1u, 0u, 2u, 0u, 1u, 0u  /* 0xF0 to 0xFF                
  57:uCOSII/Source/os_core.c **** };
  58:uCOSII/Source/os_core.c **** 
  59:uCOSII/Source/os_core.c **** /*$PAGE*/
  60:uCOSII/Source/os_core.c **** /*
  61:uCOSII/Source/os_core.c **** ***************************************************************************************************
  62:uCOSII/Source/os_core.c **** *                                         FUNCTION PROTOTYPES
  63:uCOSII/Source/os_core.c **** ***************************************************************************************************
  64:uCOSII/Source/os_core.c **** */
  65:uCOSII/Source/os_core.c **** 
  66:uCOSII/Source/os_core.c **** static  void  OS_InitEventList(void);
  67:uCOSII/Source/os_core.c **** 
  68:uCOSII/Source/os_core.c **** static  void  OS_InitMisc(void);
  69:uCOSII/Source/os_core.c **** 
  70:uCOSII/Source/os_core.c **** static  void  OS_InitRdyList(void);
  71:uCOSII/Source/os_core.c **** 
  72:uCOSII/Source/os_core.c **** static  void  OS_InitTaskIdle(void);
  73:uCOSII/Source/os_core.c **** 
  74:uCOSII/Source/os_core.c **** #if OS_TASK_STAT_EN > 0u
  75:uCOSII/Source/os_core.c **** static  void  OS_InitTaskStat(void);
  76:uCOSII/Source/os_core.c **** #endif
  77:uCOSII/Source/os_core.c **** 
  78:uCOSII/Source/os_core.c **** static  void  OS_InitTCBList(void);
  79:uCOSII/Source/os_core.c **** 
  80:uCOSII/Source/os_core.c **** static  void  OS_SchedNew(void);
  81:uCOSII/Source/os_core.c **** 
  82:uCOSII/Source/os_core.c **** /*$PAGE*/
  83:uCOSII/Source/os_core.c **** /*
  84:uCOSII/Source/os_core.c **** ***************************************************************************************************
  85:uCOSII/Source/os_core.c **** *                        GET THE NAME OF A SEMAPHORE, MUTEX, MAILBOX or QUEUE
  86:uCOSII/Source/os_core.c **** *
  87:uCOSII/Source/os_core.c **** * Description: This function is used to obtain the name assigned to a semaphore, mutex, mailbox or 
  88:uCOSII/Source/os_core.c **** *
ARM GAS  /tmp/ccxgEmFy.s 			page 3


  89:uCOSII/Source/os_core.c **** * Arguments  : pevent    is a pointer to the event group.  'pevent' can point either to a semaphore
  90:uCOSII/Source/os_core.c **** *                        a mutex, a mailbox or a queue.  Where this function is concerned, the actu
  91:uCOSII/Source/os_core.c **** *                        type is irrelevant.
  92:uCOSII/Source/os_core.c **** *
  93:uCOSII/Source/os_core.c **** *              pname     is a pointer to a pointer to an ASCII string that will receive the name of
  94:uCOSII/Source/os_core.c **** *                        mutex, mailbox or queue.
  95:uCOSII/Source/os_core.c **** *
  96:uCOSII/Source/os_core.c **** *              perr      is a pointer to an error code that can contain one of the following values
  97:uCOSII/Source/os_core.c **** *
  98:uCOSII/Source/os_core.c **** *                        OS_ERR_NONE                if the name was copied to 'pname'
  99:uCOSII/Source/os_core.c **** *                        OS_ERR_EVENT_TYPE          if 'pevent' is not pointing to the proper event
 100:uCOSII/Source/os_core.c **** *                                                   control block type.
 101:uCOSII/Source/os_core.c **** *                        OS_ERR_PNAME_NULL          You passed a NULL pointer for 'pname'
 102:uCOSII/Source/os_core.c **** *                        OS_ERR_PEVENT_NULL         if you passed a NULL pointer for 'pevent'
 103:uCOSII/Source/os_core.c **** *                        OS_ERR_NAME_GET_ISR        if you are trying to call this function from an
 104:uCOSII/Source/os_core.c **** *
 105:uCOSII/Source/os_core.c **** * Returns    : The length of the string or 0 if the 'pevent' is a NULL pointer.
 106:uCOSII/Source/os_core.c **** ***************************************************************************************************
 107:uCOSII/Source/os_core.c **** */
 108:uCOSII/Source/os_core.c **** 
 109:uCOSII/Source/os_core.c **** #if (OS_EVENT_EN) && (OS_EVENT_NAME_EN > 0u)
 110:uCOSII/Source/os_core.c **** INT8U  OSEventNameGet (OS_EVENT   *pevent,
 111:uCOSII/Source/os_core.c ****                        INT8U     **pname,
 112:uCOSII/Source/os_core.c ****                        INT8U      *perr)
 113:uCOSII/Source/os_core.c **** {
 114:uCOSII/Source/os_core.c ****     INT8U      len;
 115:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 116:uCOSII/Source/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 117:uCOSII/Source/os_core.c **** #endif
 118:uCOSII/Source/os_core.c **** 
 119:uCOSII/Source/os_core.c **** 
 120:uCOSII/Source/os_core.c **** 
 121:uCOSII/Source/os_core.c **** #ifdef OS_SAFETY_CRITICAL
 122:uCOSII/Source/os_core.c ****     if (perr == (INT8U *)0) {
 123:uCOSII/Source/os_core.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 124:uCOSII/Source/os_core.c ****         return (0u);
 125:uCOSII/Source/os_core.c ****     }
 126:uCOSII/Source/os_core.c **** #endif
 127:uCOSII/Source/os_core.c **** 
 128:uCOSII/Source/os_core.c **** #if OS_ARG_CHK_EN > 0u
 129:uCOSII/Source/os_core.c ****     if (pevent == (OS_EVENT *)0) {               /* Is 'pevent' a NULL pointer?                    
 130:uCOSII/Source/os_core.c ****         *perr = OS_ERR_PEVENT_NULL;
 131:uCOSII/Source/os_core.c ****         return (0u);
 132:uCOSII/Source/os_core.c ****     }
 133:uCOSII/Source/os_core.c ****     if (pname == (INT8U **)0) {                   /* Is 'pname' a NULL pointer?                    
 134:uCOSII/Source/os_core.c ****         *perr = OS_ERR_PNAME_NULL;
 135:uCOSII/Source/os_core.c ****         return (0u);
 136:uCOSII/Source/os_core.c ****     }
 137:uCOSII/Source/os_core.c **** #endif
 138:uCOSII/Source/os_core.c ****     if (OSIntNesting > 0u) {                     /* See if trying to call from an ISR              
 139:uCOSII/Source/os_core.c ****         *perr  = OS_ERR_NAME_GET_ISR;
 140:uCOSII/Source/os_core.c ****         return (0u);
 141:uCOSII/Source/os_core.c ****     }
 142:uCOSII/Source/os_core.c ****     switch (pevent->OSEventType) {
 143:uCOSII/Source/os_core.c ****         case OS_EVENT_TYPE_SEM:
 144:uCOSII/Source/os_core.c ****         case OS_EVENT_TYPE_MUTEX:
 145:uCOSII/Source/os_core.c ****         case OS_EVENT_TYPE_MBOX:
ARM GAS  /tmp/ccxgEmFy.s 			page 4


 146:uCOSII/Source/os_core.c ****         case OS_EVENT_TYPE_Q:
 147:uCOSII/Source/os_core.c ****              break;
 148:uCOSII/Source/os_core.c **** 
 149:uCOSII/Source/os_core.c ****         default:
 150:uCOSII/Source/os_core.c ****              *perr = OS_ERR_EVENT_TYPE;
 151:uCOSII/Source/os_core.c ****              return (0u);
 152:uCOSII/Source/os_core.c ****     }
 153:uCOSII/Source/os_core.c ****     OS_ENTER_CRITICAL();
 154:uCOSII/Source/os_core.c ****     *pname = pevent->OSEventName;
 155:uCOSII/Source/os_core.c ****     len    = OS_StrLen(*pname);
 156:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 157:uCOSII/Source/os_core.c ****     *perr  = OS_ERR_NONE;
 158:uCOSII/Source/os_core.c ****     return (len);
 159:uCOSII/Source/os_core.c **** }
 160:uCOSII/Source/os_core.c **** #endif
 161:uCOSII/Source/os_core.c **** 
 162:uCOSII/Source/os_core.c **** /*$PAGE*/
 163:uCOSII/Source/os_core.c **** /*
 164:uCOSII/Source/os_core.c **** ***************************************************************************************************
 165:uCOSII/Source/os_core.c **** *                        ASSIGN A NAME TO A SEMAPHORE, MUTEX, MAILBOX or QUEUE
 166:uCOSII/Source/os_core.c **** *
 167:uCOSII/Source/os_core.c **** * Description: This function assigns a name to a semaphore, mutex, mailbox or queue.
 168:uCOSII/Source/os_core.c **** *
 169:uCOSII/Source/os_core.c **** * Arguments  : pevent    is a pointer to the event group.  'pevent' can point either to a semaphore
 170:uCOSII/Source/os_core.c **** *                        a mutex, a mailbox or a queue.  Where this function is concerned, it doesn
 171:uCOSII/Source/os_core.c **** *                        matter the actual type.
 172:uCOSII/Source/os_core.c **** *
 173:uCOSII/Source/os_core.c **** *              pname     is a pointer to an ASCII string that will be used as the name of the semap
 174:uCOSII/Source/os_core.c **** *                        mutex, mailbox or queue.
 175:uCOSII/Source/os_core.c **** *
 176:uCOSII/Source/os_core.c **** *              perr      is a pointer to an error code that can contain one of the following values
 177:uCOSII/Source/os_core.c **** *
 178:uCOSII/Source/os_core.c **** *                        OS_ERR_NONE                if the requested task is resumed
 179:uCOSII/Source/os_core.c **** *                        OS_ERR_EVENT_TYPE          if 'pevent' is not pointing to the proper event
 180:uCOSII/Source/os_core.c **** *                                                   control block type.
 181:uCOSII/Source/os_core.c **** *                        OS_ERR_PNAME_NULL          You passed a NULL pointer for 'pname'
 182:uCOSII/Source/os_core.c **** *                        OS_ERR_PEVENT_NULL         if you passed a NULL pointer for 'pevent'
 183:uCOSII/Source/os_core.c **** *                        OS_ERR_NAME_SET_ISR        if you called this function from an ISR
 184:uCOSII/Source/os_core.c **** *
 185:uCOSII/Source/os_core.c **** * Returns    : None
 186:uCOSII/Source/os_core.c **** ***************************************************************************************************
 187:uCOSII/Source/os_core.c **** */
 188:uCOSII/Source/os_core.c **** 
 189:uCOSII/Source/os_core.c **** #if (OS_EVENT_EN) && (OS_EVENT_NAME_EN > 0u)
 190:uCOSII/Source/os_core.c **** void  OSEventNameSet (OS_EVENT  *pevent,
 191:uCOSII/Source/os_core.c ****                       INT8U     *pname,
 192:uCOSII/Source/os_core.c ****                       INT8U     *perr)
 193:uCOSII/Source/os_core.c **** {
 194:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 195:uCOSII/Source/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 196:uCOSII/Source/os_core.c **** #endif
 197:uCOSII/Source/os_core.c **** 
 198:uCOSII/Source/os_core.c **** 
 199:uCOSII/Source/os_core.c **** 
 200:uCOSII/Source/os_core.c **** #ifdef OS_SAFETY_CRITICAL
 201:uCOSII/Source/os_core.c ****     if (perr == (INT8U *)0) {
 202:uCOSII/Source/os_core.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
ARM GAS  /tmp/ccxgEmFy.s 			page 5


 203:uCOSII/Source/os_core.c ****         return;
 204:uCOSII/Source/os_core.c ****     }
 205:uCOSII/Source/os_core.c **** #endif
 206:uCOSII/Source/os_core.c **** 
 207:uCOSII/Source/os_core.c **** #if OS_ARG_CHK_EN > 0u
 208:uCOSII/Source/os_core.c ****     if (pevent == (OS_EVENT *)0) {               /* Is 'pevent' a NULL pointer?                    
 209:uCOSII/Source/os_core.c ****         *perr = OS_ERR_PEVENT_NULL;
 210:uCOSII/Source/os_core.c ****         return;
 211:uCOSII/Source/os_core.c ****     }
 212:uCOSII/Source/os_core.c ****     if (pname == (INT8U *)0) {                   /* Is 'pname' a NULL pointer?                     
 213:uCOSII/Source/os_core.c ****         *perr = OS_ERR_PNAME_NULL;
 214:uCOSII/Source/os_core.c ****         return;
 215:uCOSII/Source/os_core.c ****     }
 216:uCOSII/Source/os_core.c **** #endif
 217:uCOSII/Source/os_core.c ****     if (OSIntNesting > 0u) {                     /* See if trying to call from an ISR              
 218:uCOSII/Source/os_core.c ****         *perr = OS_ERR_NAME_SET_ISR;
 219:uCOSII/Source/os_core.c ****         return;
 220:uCOSII/Source/os_core.c ****     }
 221:uCOSII/Source/os_core.c ****     switch (pevent->OSEventType) {
 222:uCOSII/Source/os_core.c ****         case OS_EVENT_TYPE_SEM:
 223:uCOSII/Source/os_core.c ****         case OS_EVENT_TYPE_MUTEX:
 224:uCOSII/Source/os_core.c ****         case OS_EVENT_TYPE_MBOX:
 225:uCOSII/Source/os_core.c ****         case OS_EVENT_TYPE_Q:
 226:uCOSII/Source/os_core.c ****              break;
 227:uCOSII/Source/os_core.c **** 
 228:uCOSII/Source/os_core.c ****         default:
 229:uCOSII/Source/os_core.c ****              *perr = OS_ERR_EVENT_TYPE;
 230:uCOSII/Source/os_core.c ****              return;
 231:uCOSII/Source/os_core.c ****     }
 232:uCOSII/Source/os_core.c ****     OS_ENTER_CRITICAL();
 233:uCOSII/Source/os_core.c ****     pevent->OSEventName = pname;
 234:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 235:uCOSII/Source/os_core.c ****     *perr = OS_ERR_NONE;
 236:uCOSII/Source/os_core.c **** }
 237:uCOSII/Source/os_core.c **** #endif
 238:uCOSII/Source/os_core.c **** 
 239:uCOSII/Source/os_core.c **** /*$PAGE*/
 240:uCOSII/Source/os_core.c **** /*
 241:uCOSII/Source/os_core.c **** ***************************************************************************************************
 242:uCOSII/Source/os_core.c **** *                                       PEND ON MULTIPLE EVENTS
 243:uCOSII/Source/os_core.c **** *
 244:uCOSII/Source/os_core.c **** * Description: This function waits for multiple events.  If multiple events are ready at the start 
 245:uCOSII/Source/os_core.c **** *              pend call, then all available events are returned as ready.  If the task must pend o
 246:uCOSII/Source/os_core.c **** *              multiple events, then only the first posted or aborted event is returned as ready.
 247:uCOSII/Source/os_core.c **** *
 248:uCOSII/Source/os_core.c **** * Arguments  : pevents_pend  is a pointer to a NULL-terminated array of event control blocks to wai
 249:uCOSII/Source/os_core.c **** *
 250:uCOSII/Source/os_core.c **** *              pevents_rdy   is a pointer to an array to return which event control blocks are avai
 251:uCOSII/Source/os_core.c **** *                            or ready.  The size of the array MUST be greater than or equal to the 
 252:uCOSII/Source/os_core.c **** *                            of the 'pevents_pend' array, including terminating NULL.
 253:uCOSII/Source/os_core.c **** *
 254:uCOSII/Source/os_core.c **** *              pmsgs_rdy     is a pointer to an array to return messages from any available message
 255:uCOSII/Source/os_core.c **** *                            events.  The size of the array MUST be greater than or equal to the si
 256:uCOSII/Source/os_core.c **** *                            the 'pevents_pend' array, excluding the terminating NULL.  Since NULL
 257:uCOSII/Source/os_core.c **** *                            messages are valid messages, this array cannot be NULL-terminated.  In
 258:uCOSII/Source/os_core.c **** *                            every available message-type event returns its messages in the 'pmsgs_
 259:uCOSII/Source/os_core.c **** *                            array at the same index as the event is returned in the 'pevents_rdy' 
ARM GAS  /tmp/ccxgEmFy.s 			page 6


 260:uCOSII/Source/os_core.c **** *                            All other 'pmsgs_rdy' array indices are filled with NULL messages.
 261:uCOSII/Source/os_core.c **** *
 262:uCOSII/Source/os_core.c **** *              timeout       is an optional timeout period (in clock ticks).  If non-zero, your tas
 263:uCOSII/Source/os_core.c **** *                            wait for the resources up to the amount of time specified by this argu
 264:uCOSII/Source/os_core.c **** *                            If you specify 0, however, your task will wait forever for the specifi
 265:uCOSII/Source/os_core.c **** *                            events or, until the resources becomes available (or the events occur)
 266:uCOSII/Source/os_core.c **** *
 267:uCOSII/Source/os_core.c **** *              perr          is a pointer to where an error message will be deposited.  Possible er
 268:uCOSII/Source/os_core.c **** *                            messages are:
 269:uCOSII/Source/os_core.c **** *
 270:uCOSII/Source/os_core.c **** *                            OS_ERR_NONE         The call was successful and your task owns the res
 271:uCOSII/Source/os_core.c **** *                                                or, the events you are waiting for occurred; check
 272:uCOSII/Source/os_core.c **** *                                                'pevents_rdy' array for which events are available
 273:uCOSII/Source/os_core.c **** *                            OS_ERR_PEND_ABORT   The wait on the events was aborted; check the
 274:uCOSII/Source/os_core.c **** *                                                'pevents_rdy' array for which events were aborted.
 275:uCOSII/Source/os_core.c **** *                            OS_ERR_TIMEOUT      The events were not received within the specified
 276:uCOSII/Source/os_core.c **** *                                                'timeout'.
 277:uCOSII/Source/os_core.c **** *                            OS_ERR_PEVENT_NULL  If 'pevents_pend', 'pevents_rdy', or 'pmsgs_rdy' i
 278:uCOSII/Source/os_core.c **** *                                                NULL pointer.
 279:uCOSII/Source/os_core.c **** *                            OS_ERR_EVENT_TYPE   If you didn't pass a pointer to an array of semaph
 280:uCOSII/Source/os_core.c **** *                                                mailboxes, and/or queues.
 281:uCOSII/Source/os_core.c **** *                            OS_ERR_PEND_ISR     If you called this function from an ISR and the re
 282:uCOSII/Source/os_core.c **** *                                                would lead to a suspension.
 283:uCOSII/Source/os_core.c **** *                            OS_ERR_PEND_LOCKED  If you called this function when the scheduler is 
 284:uCOSII/Source/os_core.c **** *
 285:uCOSII/Source/os_core.c **** * Returns    : >  0          the number of events returned as ready or aborted.
 286:uCOSII/Source/os_core.c **** *              == 0          if no events are returned as ready because of timeout or upon error.
 287:uCOSII/Source/os_core.c **** *
 288:uCOSII/Source/os_core.c **** * Notes      : 1) a. Validate 'pevents_pend' array as valid OS_EVENTs :
 289:uCOSII/Source/os_core.c **** *
 290:uCOSII/Source/os_core.c **** *                        semaphores, mailboxes, queues
 291:uCOSII/Source/os_core.c **** *
 292:uCOSII/Source/os_core.c **** *                 b. Return ALL available events and messages, if any
 293:uCOSII/Source/os_core.c **** *
 294:uCOSII/Source/os_core.c **** *                 c. Add    current task priority as pending to   each events's wait list
 295:uCOSII/Source/os_core.c **** *                      Performed in OS_EventTaskWaitMulti()
 296:uCOSII/Source/os_core.c **** *
 297:uCOSII/Source/os_core.c **** *                 d. Wait on any of multiple events
 298:uCOSII/Source/os_core.c **** *
 299:uCOSII/Source/os_core.c **** *                 e. Remove current task priority as pending from each events's wait list
 300:uCOSII/Source/os_core.c **** *                      Performed in OS_EventTaskRdy(), if events posted or aborted
 301:uCOSII/Source/os_core.c **** *
 302:uCOSII/Source/os_core.c **** *                 f. Return any event posted or aborted, if any
 303:uCOSII/Source/os_core.c **** *                      else
 304:uCOSII/Source/os_core.c **** *                    Return timeout
 305:uCOSII/Source/os_core.c **** *
 306:uCOSII/Source/os_core.c **** *              2) 'pevents_rdy' initialized to NULL PRIOR to all other validation or function handl
 307:uCOSII/Source/os_core.c **** *                 case of any error(s).
 308:uCOSII/Source/os_core.c **** ***************************************************************************************************
 309:uCOSII/Source/os_core.c **** */
 310:uCOSII/Source/os_core.c **** /*$PAGE*/
 311:uCOSII/Source/os_core.c **** #if ((OS_EVENT_EN) && (OS_EVENT_MULTI_EN > 0u))
 312:uCOSII/Source/os_core.c **** INT16U  OSEventPendMulti (OS_EVENT  **pevents_pend,
 313:uCOSII/Source/os_core.c ****                           OS_EVENT  **pevents_rdy,
 314:uCOSII/Source/os_core.c ****                           void      **pmsgs_rdy,
 315:uCOSII/Source/os_core.c ****                           INT32U      timeout,
 316:uCOSII/Source/os_core.c ****                           INT8U      *perr)
ARM GAS  /tmp/ccxgEmFy.s 			page 7


 317:uCOSII/Source/os_core.c **** {
 318:uCOSII/Source/os_core.c ****     OS_EVENT  **pevents;
 319:uCOSII/Source/os_core.c ****     OS_EVENT   *pevent;
 320:uCOSII/Source/os_core.c **** #if ((OS_Q_EN > 0u) && (OS_MAX_QS > 0u))
 321:uCOSII/Source/os_core.c ****     OS_Q       *pq;
 322:uCOSII/Source/os_core.c **** #endif
 323:uCOSII/Source/os_core.c ****     BOOLEAN     events_rdy;
 324:uCOSII/Source/os_core.c ****     INT16U      events_rdy_nbr;
 325:uCOSII/Source/os_core.c ****     INT8U       events_stat;
 326:uCOSII/Source/os_core.c **** #if (OS_CRITICAL_METHOD == 3u)                          /* Allocate storage for CPU status register
 327:uCOSII/Source/os_core.c ****     OS_CPU_SR   cpu_sr = 0u;
 328:uCOSII/Source/os_core.c **** #endif
 329:uCOSII/Source/os_core.c **** 
 330:uCOSII/Source/os_core.c **** 
 331:uCOSII/Source/os_core.c **** 
 332:uCOSII/Source/os_core.c **** #ifdef OS_SAFETY_CRITICAL
 333:uCOSII/Source/os_core.c ****     if (perr == (INT8U *)0) {
 334:uCOSII/Source/os_core.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 335:uCOSII/Source/os_core.c ****         return (0u);
 336:uCOSII/Source/os_core.c ****     }
 337:uCOSII/Source/os_core.c **** #endif
 338:uCOSII/Source/os_core.c **** 
 339:uCOSII/Source/os_core.c **** #if (OS_ARG_CHK_EN > 0u)
 340:uCOSII/Source/os_core.c ****     if (pevents_pend == (OS_EVENT **)0) {               /* Validate 'pevents_pend'                 
 341:uCOSII/Source/os_core.c ****        *perr =  OS_ERR_PEVENT_NULL;
 342:uCOSII/Source/os_core.c ****         return (0u);
 343:uCOSII/Source/os_core.c ****     }
 344:uCOSII/Source/os_core.c ****     if (*pevents_pend  == (OS_EVENT *)0) {              /* Validate 'pevents_pend'                 
 345:uCOSII/Source/os_core.c ****        *perr =  OS_ERR_PEVENT_NULL;
 346:uCOSII/Source/os_core.c ****         return (0u);
 347:uCOSII/Source/os_core.c ****     }
 348:uCOSII/Source/os_core.c ****     if (pevents_rdy  == (OS_EVENT **)0) {               /* Validate 'pevents_rdy'                  
 349:uCOSII/Source/os_core.c ****        *perr =  OS_ERR_PEVENT_NULL;
 350:uCOSII/Source/os_core.c ****         return (0u);
 351:uCOSII/Source/os_core.c ****     }
 352:uCOSII/Source/os_core.c ****     if (pmsgs_rdy == (void **)0) {                      /* Validate 'pmsgs_rdy'                    
 353:uCOSII/Source/os_core.c ****        *perr =  OS_ERR_PEVENT_NULL;
 354:uCOSII/Source/os_core.c ****         return (0u);
 355:uCOSII/Source/os_core.c ****     }
 356:uCOSII/Source/os_core.c **** #endif
 357:uCOSII/Source/os_core.c **** 
 358:uCOSII/Source/os_core.c ****    *pevents_rdy = (OS_EVENT *)0;                        /* Init array to NULL in case of errors    
 359:uCOSII/Source/os_core.c **** 
 360:uCOSII/Source/os_core.c ****     pevents     =  pevents_pend;
 361:uCOSII/Source/os_core.c ****     pevent      = *pevents;
 362:uCOSII/Source/os_core.c ****     while  (pevent != (OS_EVENT *)0) {
 363:uCOSII/Source/os_core.c ****         switch (pevent->OSEventType) {                  /* Validate event block types              
 364:uCOSII/Source/os_core.c **** #if (OS_SEM_EN  > 0u)
 365:uCOSII/Source/os_core.c ****             case OS_EVENT_TYPE_SEM:
 366:uCOSII/Source/os_core.c ****                  break;
 367:uCOSII/Source/os_core.c **** #endif
 368:uCOSII/Source/os_core.c **** #if (OS_MBOX_EN > 0u)
 369:uCOSII/Source/os_core.c ****             case OS_EVENT_TYPE_MBOX:
 370:uCOSII/Source/os_core.c ****                  break;
 371:uCOSII/Source/os_core.c **** #endif
 372:uCOSII/Source/os_core.c **** #if ((OS_Q_EN   > 0u) && (OS_MAX_QS > 0u))
 373:uCOSII/Source/os_core.c ****             case OS_EVENT_TYPE_Q:
ARM GAS  /tmp/ccxgEmFy.s 			page 8


 374:uCOSII/Source/os_core.c ****                  break;
 375:uCOSII/Source/os_core.c **** #endif
 376:uCOSII/Source/os_core.c **** 
 377:uCOSII/Source/os_core.c ****             case OS_EVENT_TYPE_MUTEX:
 378:uCOSII/Source/os_core.c ****             case OS_EVENT_TYPE_FLAG:
 379:uCOSII/Source/os_core.c ****             default:
 380:uCOSII/Source/os_core.c ****                 *perr = OS_ERR_EVENT_TYPE;
 381:uCOSII/Source/os_core.c ****                  return (0u);
 382:uCOSII/Source/os_core.c ****         }
 383:uCOSII/Source/os_core.c ****         pevents++;
 384:uCOSII/Source/os_core.c ****         pevent = *pevents;
 385:uCOSII/Source/os_core.c ****     }
 386:uCOSII/Source/os_core.c **** 
 387:uCOSII/Source/os_core.c ****     if (OSIntNesting  > 0u) {                           /* See if called from ISR ...              
 388:uCOSII/Source/os_core.c ****        *perr =  OS_ERR_PEND_ISR;                        /* ... can't PEND from an ISR              
 389:uCOSII/Source/os_core.c ****         return (0u);
 390:uCOSII/Source/os_core.c ****     }
 391:uCOSII/Source/os_core.c ****     if (OSLockNesting > 0u) {                           /* See if called with scheduler locked ... 
 392:uCOSII/Source/os_core.c ****        *perr =  OS_ERR_PEND_LOCKED;                     /* ... can't PEND when locked              
 393:uCOSII/Source/os_core.c ****         return (0u);
 394:uCOSII/Source/os_core.c ****     }
 395:uCOSII/Source/os_core.c **** 
 396:uCOSII/Source/os_core.c **** /*$PAGE*/
 397:uCOSII/Source/os_core.c ****     events_rdy     =  OS_FALSE;
 398:uCOSII/Source/os_core.c ****     events_rdy_nbr =  0u;
 399:uCOSII/Source/os_core.c ****     events_stat    =  OS_STAT_RDY;
 400:uCOSII/Source/os_core.c ****     pevents        =  pevents_pend;
 401:uCOSII/Source/os_core.c ****     pevent         = *pevents;
 402:uCOSII/Source/os_core.c ****     OS_ENTER_CRITICAL();
 403:uCOSII/Source/os_core.c ****     while (pevent != (OS_EVENT *)0) {                   /* See if any events already available     
 404:uCOSII/Source/os_core.c ****         switch (pevent->OSEventType) {
 405:uCOSII/Source/os_core.c **** #if (OS_SEM_EN > 0u)
 406:uCOSII/Source/os_core.c ****             case OS_EVENT_TYPE_SEM:
 407:uCOSII/Source/os_core.c ****                  if (pevent->OSEventCnt > 0u) {         /* If semaphore count > 0, resource availab
 408:uCOSII/Source/os_core.c ****                      pevent->OSEventCnt--;              /* ... decrement semaphore,                
 409:uCOSII/Source/os_core.c ****                     *pevents_rdy++ =  pevent;           /* ... and return available semaphore event
 410:uCOSII/Source/os_core.c ****                       events_rdy   =  OS_TRUE;
 411:uCOSII/Source/os_core.c ****                     *pmsgs_rdy++   = (void *)0;         /* NO message returned  for semaphores     
 412:uCOSII/Source/os_core.c ****                       events_rdy_nbr++;
 413:uCOSII/Source/os_core.c **** 
 414:uCOSII/Source/os_core.c ****                  } else {
 415:uCOSII/Source/os_core.c ****                       events_stat |=  OS_STAT_SEM;      /* Configure multi-pend for semaphore event
 416:uCOSII/Source/os_core.c ****                  }
 417:uCOSII/Source/os_core.c ****                  break;
 418:uCOSII/Source/os_core.c **** #endif
 419:uCOSII/Source/os_core.c **** 
 420:uCOSII/Source/os_core.c **** #if (OS_MBOX_EN > 0u)
 421:uCOSII/Source/os_core.c ****             case OS_EVENT_TYPE_MBOX:
 422:uCOSII/Source/os_core.c ****                  if (pevent->OSEventPtr != (void *)0) { /* If mailbox NOT empty;                   
 423:uCOSII/Source/os_core.c ****                                                         /* ... return available message,           
 424:uCOSII/Source/os_core.c ****                     *pmsgs_rdy++         = (void *)pevent->OSEventPtr;
 425:uCOSII/Source/os_core.c ****                      pevent->OSEventPtr  = (void *)0;
 426:uCOSII/Source/os_core.c ****                     *pevents_rdy++       =  pevent;     /* ... and return available mailbox event  
 427:uCOSII/Source/os_core.c ****                       events_rdy         =  OS_TRUE;
 428:uCOSII/Source/os_core.c ****                       events_rdy_nbr++;
 429:uCOSII/Source/os_core.c **** 
 430:uCOSII/Source/os_core.c ****                  } else {
ARM GAS  /tmp/ccxgEmFy.s 			page 9


 431:uCOSII/Source/os_core.c ****                       events_stat |= OS_STAT_MBOX;      /* Configure multi-pend for mailbox events 
 432:uCOSII/Source/os_core.c ****                  }
 433:uCOSII/Source/os_core.c ****                  break;
 434:uCOSII/Source/os_core.c **** #endif
 435:uCOSII/Source/os_core.c **** 
 436:uCOSII/Source/os_core.c **** #if ((OS_Q_EN > 0u) && (OS_MAX_QS > 0u))
 437:uCOSII/Source/os_core.c ****             case OS_EVENT_TYPE_Q:
 438:uCOSII/Source/os_core.c ****                  pq = (OS_Q *)pevent->OSEventPtr;
 439:uCOSII/Source/os_core.c ****                  if (pq->OSQEntries > 0u) {             /* If queue NOT empty;                     
 440:uCOSII/Source/os_core.c ****                                                         /* ... return available message,           
 441:uCOSII/Source/os_core.c ****                     *pmsgs_rdy++ = (void *)*pq->OSQOut++;
 442:uCOSII/Source/os_core.c ****                      if (pq->OSQOut == pq->OSQEnd) {    /* If OUT ptr at queue end, ...            
 443:uCOSII/Source/os_core.c ****                          pq->OSQOut  = pq->OSQStart;    /* ... wrap   to queue start               
 444:uCOSII/Source/os_core.c ****                      }
 445:uCOSII/Source/os_core.c ****                      pq->OSQEntries--;                  /* Update number of queue entries          
 446:uCOSII/Source/os_core.c ****                     *pevents_rdy++ = pevent;            /* ... and return available queue event    
 447:uCOSII/Source/os_core.c ****                       events_rdy   = OS_TRUE;
 448:uCOSII/Source/os_core.c ****                       events_rdy_nbr++;
 449:uCOSII/Source/os_core.c **** 
 450:uCOSII/Source/os_core.c ****                  } else {
 451:uCOSII/Source/os_core.c ****                       events_stat |= OS_STAT_Q;         /* Configure multi-pend for queue events   
 452:uCOSII/Source/os_core.c ****                  }
 453:uCOSII/Source/os_core.c ****                  break;
 454:uCOSII/Source/os_core.c **** #endif
 455:uCOSII/Source/os_core.c **** 
 456:uCOSII/Source/os_core.c ****             case OS_EVENT_TYPE_MUTEX:
 457:uCOSII/Source/os_core.c ****             case OS_EVENT_TYPE_FLAG:
 458:uCOSII/Source/os_core.c ****             default:
 459:uCOSII/Source/os_core.c ****                  OS_EXIT_CRITICAL();
 460:uCOSII/Source/os_core.c ****                 *pevents_rdy = (OS_EVENT *)0;           /* NULL terminate return event array       
 461:uCOSII/Source/os_core.c ****                 *perr        =  OS_ERR_EVENT_TYPE;
 462:uCOSII/Source/os_core.c ****                  return (events_rdy_nbr);
 463:uCOSII/Source/os_core.c ****         }
 464:uCOSII/Source/os_core.c ****         pevents++;
 465:uCOSII/Source/os_core.c ****         pevent = *pevents;
 466:uCOSII/Source/os_core.c ****     }
 467:uCOSII/Source/os_core.c **** 
 468:uCOSII/Source/os_core.c ****     if ( events_rdy == OS_TRUE) {                       /* Return any events already available     
 469:uCOSII/Source/os_core.c ****        *pevents_rdy = (OS_EVENT *)0;                    /* NULL terminate return event array       
 470:uCOSII/Source/os_core.c ****         OS_EXIT_CRITICAL();
 471:uCOSII/Source/os_core.c ****        *perr        =  OS_ERR_NONE;
 472:uCOSII/Source/os_core.c ****         return (events_rdy_nbr);
 473:uCOSII/Source/os_core.c ****     }
 474:uCOSII/Source/os_core.c **** /*$PAGE*/
 475:uCOSII/Source/os_core.c ****                                                         /* Otherwise, must wait until any event occ
 476:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBStat     |= events_stat  |           /* Resource not available, ...             
 477:uCOSII/Source/os_core.c ****                                OS_STAT_MULTI;           /* ... pend on multiple events             
 478:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBStatPend  = OS_STAT_PEND_OK;
 479:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBDly       = timeout;                 /* Store pend timeout in TCB               
 480:uCOSII/Source/os_core.c ****     OS_EventTaskWaitMulti(pevents_pend);                /* Suspend task until events or timeout occ
 481:uCOSII/Source/os_core.c **** 
 482:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 483:uCOSII/Source/os_core.c ****     OS_Sched();                                         /* Find next highest priority task ready   
 484:uCOSII/Source/os_core.c ****     OS_ENTER_CRITICAL();
 485:uCOSII/Source/os_core.c **** 
 486:uCOSII/Source/os_core.c ****     switch (OSTCBCur->OSTCBStatPend) {                  /* Handle event posted, aborted, or timed-o
 487:uCOSII/Source/os_core.c ****         case OS_STAT_PEND_OK:
ARM GAS  /tmp/ccxgEmFy.s 			page 10


 488:uCOSII/Source/os_core.c ****         case OS_STAT_PEND_ABORT:
 489:uCOSII/Source/os_core.c ****              pevent = OSTCBCur->OSTCBEventPtr;
 490:uCOSII/Source/os_core.c ****              if (pevent != (OS_EVENT *)0) {             /* If task event ptr != NULL, ...          
 491:uCOSII/Source/os_core.c ****                 *pevents_rdy++   =  pevent;             /* ... return available event ...          
 492:uCOSII/Source/os_core.c ****                 *pevents_rdy     = (OS_EVENT *)0;       /* ... & NULL terminate return event array 
 493:uCOSII/Source/os_core.c ****                   events_rdy_nbr =  1;
 494:uCOSII/Source/os_core.c **** 
 495:uCOSII/Source/os_core.c ****              } else {                                   /* Else NO event available, handle as timeo
 496:uCOSII/Source/os_core.c ****                  OSTCBCur->OSTCBStatPend = OS_STAT_PEND_TO;
 497:uCOSII/Source/os_core.c ****                  OS_EventTaskRemoveMulti(OSTCBCur, pevents_pend);
 498:uCOSII/Source/os_core.c ****              }
 499:uCOSII/Source/os_core.c ****              break;
 500:uCOSII/Source/os_core.c **** 
 501:uCOSII/Source/os_core.c ****         case OS_STAT_PEND_TO:                           /* If events timed out, ...                
 502:uCOSII/Source/os_core.c ****         default:                                        /* ... remove task from events' wait lists 
 503:uCOSII/Source/os_core.c ****              OS_EventTaskRemoveMulti(OSTCBCur, pevents_pend);
 504:uCOSII/Source/os_core.c ****              break;
 505:uCOSII/Source/os_core.c ****     }
 506:uCOSII/Source/os_core.c **** 
 507:uCOSII/Source/os_core.c ****     switch (OSTCBCur->OSTCBStatPend) {
 508:uCOSII/Source/os_core.c ****         case OS_STAT_PEND_OK:
 509:uCOSII/Source/os_core.c ****              switch (pevent->OSEventType) {             /* Return event's message                  
 510:uCOSII/Source/os_core.c **** #if (OS_SEM_EN > 0u)
 511:uCOSII/Source/os_core.c ****                  case OS_EVENT_TYPE_SEM:
 512:uCOSII/Source/os_core.c ****                      *pmsgs_rdy++ = (void *)0;          /* NO message returned for semaphores      
 513:uCOSII/Source/os_core.c ****                       break;
 514:uCOSII/Source/os_core.c **** #endif
 515:uCOSII/Source/os_core.c **** 
 516:uCOSII/Source/os_core.c **** #if ((OS_MBOX_EN > 0u) ||                 \
 517:uCOSII/Source/os_core.c ****     ((OS_Q_EN    > 0u) && (OS_MAX_QS > 0u)))
 518:uCOSII/Source/os_core.c ****                  case OS_EVENT_TYPE_MBOX:
 519:uCOSII/Source/os_core.c ****                  case OS_EVENT_TYPE_Q:
 520:uCOSII/Source/os_core.c ****                      *pmsgs_rdy++ = (void *)OSTCBCur->OSTCBMsg;     /* Return received message     
 521:uCOSII/Source/os_core.c ****                       break;
 522:uCOSII/Source/os_core.c **** #endif
 523:uCOSII/Source/os_core.c **** 
 524:uCOSII/Source/os_core.c ****                  case OS_EVENT_TYPE_MUTEX:
 525:uCOSII/Source/os_core.c ****                  case OS_EVENT_TYPE_FLAG:
 526:uCOSII/Source/os_core.c ****                  default:
 527:uCOSII/Source/os_core.c ****                       OS_EXIT_CRITICAL();
 528:uCOSII/Source/os_core.c ****                      *pevents_rdy = (OS_EVENT *)0;      /* NULL terminate return event array       
 529:uCOSII/Source/os_core.c ****                      *perr        =  OS_ERR_EVENT_TYPE;
 530:uCOSII/Source/os_core.c ****                       return (events_rdy_nbr);
 531:uCOSII/Source/os_core.c ****              }
 532:uCOSII/Source/os_core.c ****             *perr = OS_ERR_NONE;
 533:uCOSII/Source/os_core.c ****              break;
 534:uCOSII/Source/os_core.c **** 
 535:uCOSII/Source/os_core.c ****         case OS_STAT_PEND_ABORT:
 536:uCOSII/Source/os_core.c ****             *pmsgs_rdy++ = (void *)0;                   /* NO message returned for abort           
 537:uCOSII/Source/os_core.c ****             *perr        =  OS_ERR_PEND_ABORT;          /* Indicate that event  aborted            
 538:uCOSII/Source/os_core.c ****              break;
 539:uCOSII/Source/os_core.c **** 
 540:uCOSII/Source/os_core.c ****         case OS_STAT_PEND_TO:
 541:uCOSII/Source/os_core.c ****         default:
 542:uCOSII/Source/os_core.c ****             *pmsgs_rdy++ = (void *)0;                   /* NO message returned for timeout         
 543:uCOSII/Source/os_core.c ****             *perr        =  OS_ERR_TIMEOUT;             /* Indicate that events timed out          
 544:uCOSII/Source/os_core.c ****              break;
ARM GAS  /tmp/ccxgEmFy.s 			page 11


 545:uCOSII/Source/os_core.c ****     }
 546:uCOSII/Source/os_core.c **** 
 547:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBStat          =  OS_STAT_RDY;        /* Set   task  status to ready             
 548:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBStatPend      =  OS_STAT_PEND_OK;    /* Clear pend  status                      
 549:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBEventPtr      = (OS_EVENT  *)0;      /* Clear event pointers                    
 550:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)0;
 551:uCOSII/Source/os_core.c **** #if ((OS_MBOX_EN > 0u) ||                 \
 552:uCOSII/Source/os_core.c ****     ((OS_Q_EN    > 0u) && (OS_MAX_QS > 0u)))
 553:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBMsg           = (void      *)0;      /* Clear task  message                     
 554:uCOSII/Source/os_core.c **** #endif
 555:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 556:uCOSII/Source/os_core.c **** 
 557:uCOSII/Source/os_core.c ****     return (events_rdy_nbr);
 558:uCOSII/Source/os_core.c **** }
 559:uCOSII/Source/os_core.c **** #endif
 560:uCOSII/Source/os_core.c **** 
 561:uCOSII/Source/os_core.c **** /*$PAGE*/
 562:uCOSII/Source/os_core.c **** /*
 563:uCOSII/Source/os_core.c **** ***************************************************************************************************
 564:uCOSII/Source/os_core.c **** *                                           INITIALIZATION
 565:uCOSII/Source/os_core.c **** *
 566:uCOSII/Source/os_core.c **** * Description: This function is used to initialize the internals of uC/OS-II and MUST be called pri
 567:uCOSII/Source/os_core.c **** *              creating any uC/OS-II object and, prior to calling OSStart().
 568:uCOSII/Source/os_core.c **** *
 569:uCOSII/Source/os_core.c **** * Arguments  : none
 570:uCOSII/Source/os_core.c **** *
 571:uCOSII/Source/os_core.c **** * Returns    : none
 572:uCOSII/Source/os_core.c **** ***************************************************************************************************
 573:uCOSII/Source/os_core.c **** */
 574:uCOSII/Source/os_core.c **** 
 575:uCOSII/Source/os_core.c **** void  OSInit (void)
 576:uCOSII/Source/os_core.c **** {
 577:uCOSII/Source/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
 578:uCOSII/Source/os_core.c **** #if defined(OS_TLS_TBL_SIZE) && (OS_TLS_TBL_SIZE > 0u)
 579:uCOSII/Source/os_core.c ****     INT8U  err;
 580:uCOSII/Source/os_core.c **** #endif
 581:uCOSII/Source/os_core.c **** #endif
 582:uCOSII/Source/os_core.c **** 
 583:uCOSII/Source/os_core.c ****     OSInitHookBegin();                                           /* Call port specific initializati
 584:uCOSII/Source/os_core.c **** 
 585:uCOSII/Source/os_core.c ****     OS_InitMisc();                                               /* Initialize miscellaneous variab
 586:uCOSII/Source/os_core.c **** 
 587:uCOSII/Source/os_core.c ****     OS_InitRdyList();                                            /* Initialize the Ready List      
 588:uCOSII/Source/os_core.c **** 
 589:uCOSII/Source/os_core.c ****     OS_InitTCBList();                                            /* Initialize the free list of OS_
 590:uCOSII/Source/os_core.c **** 
 591:uCOSII/Source/os_core.c ****     OS_InitEventList();                                          /* Initialize the free list of OS_
 592:uCOSII/Source/os_core.c **** 
 593:uCOSII/Source/os_core.c **** #if (OS_FLAG_EN > 0u) && (OS_MAX_FLAGS > 0u)
 594:uCOSII/Source/os_core.c ****     OS_FlagInit();                                               /* Initialize the event flag struc
 595:uCOSII/Source/os_core.c **** #endif
 596:uCOSII/Source/os_core.c **** 
 597:uCOSII/Source/os_core.c **** #if (OS_MEM_EN > 0u) && (OS_MAX_MEM_PART > 0u)
 598:uCOSII/Source/os_core.c ****     OS_MemInit();                                                /* Initialize the memory manager  
 599:uCOSII/Source/os_core.c **** #endif
 600:uCOSII/Source/os_core.c **** 
 601:uCOSII/Source/os_core.c **** #if (OS_Q_EN > 0u) && (OS_MAX_QS > 0u)
ARM GAS  /tmp/ccxgEmFy.s 			page 12


 602:uCOSII/Source/os_core.c ****     OS_QInit();                                                  /* Initialize the message queue st
 603:uCOSII/Source/os_core.c **** #endif
 604:uCOSII/Source/os_core.c **** 
 605:uCOSII/Source/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
 606:uCOSII/Source/os_core.c **** #if defined(OS_TLS_TBL_SIZE) && (OS_TLS_TBL_SIZE > 0u)
 607:uCOSII/Source/os_core.c ****     OS_TLS_Init(&err);                                           /* Initialize TLS, before creating
 608:uCOSII/Source/os_core.c ****     if (err != OS_ERR_NONE) {
 609:uCOSII/Source/os_core.c ****         return;
 610:uCOSII/Source/os_core.c ****     }
 611:uCOSII/Source/os_core.c **** #endif
 612:uCOSII/Source/os_core.c **** #endif
 613:uCOSII/Source/os_core.c **** 
 614:uCOSII/Source/os_core.c ****     OS_InitTaskIdle();                                           /* Create the Idle Task           
 615:uCOSII/Source/os_core.c **** #if OS_TASK_STAT_EN > 0u
 616:uCOSII/Source/os_core.c ****     OS_InitTaskStat();                                           /* Create the Statistic Task      
 617:uCOSII/Source/os_core.c **** #endif
 618:uCOSII/Source/os_core.c **** 
 619:uCOSII/Source/os_core.c **** #if OS_TMR_EN > 0u
 620:uCOSII/Source/os_core.c ****     OSTmr_Init();                                                /* Initialize the Timer Manager   
 621:uCOSII/Source/os_core.c **** #endif
 622:uCOSII/Source/os_core.c **** 
 623:uCOSII/Source/os_core.c ****     OSInitHookEnd();                                             /* Call port specific init. code  
 624:uCOSII/Source/os_core.c **** 
 625:uCOSII/Source/os_core.c **** #if OS_DEBUG_EN > 0u
 626:uCOSII/Source/os_core.c ****     OSDebugInit();
 627:uCOSII/Source/os_core.c **** #endif
 628:uCOSII/Source/os_core.c **** }
 629:uCOSII/Source/os_core.c **** /*$PAGE*/
 630:uCOSII/Source/os_core.c **** /*
 631:uCOSII/Source/os_core.c **** ***************************************************************************************************
 632:uCOSII/Source/os_core.c **** *                                              ENTER ISR
 633:uCOSII/Source/os_core.c **** *
 634:uCOSII/Source/os_core.c **** * Description: This function is used to notify uC/OS-II that you are about to service an interrupt
 635:uCOSII/Source/os_core.c **** *              service routine (ISR).  This allows uC/OS-II to keep track of interrupt nesting and 
 636:uCOSII/Source/os_core.c **** *              only perform rescheduling at the last nested ISR.
 637:uCOSII/Source/os_core.c **** *
 638:uCOSII/Source/os_core.c **** * Arguments  : none
 639:uCOSII/Source/os_core.c **** *
 640:uCOSII/Source/os_core.c **** * Returns    : none
 641:uCOSII/Source/os_core.c **** *
 642:uCOSII/Source/os_core.c **** * Notes      : 1) This function should be called with interrupts already disabled
 643:uCOSII/Source/os_core.c **** *              2) Your ISR can directly increment OSIntNesting without calling this function becaus
 644:uCOSII/Source/os_core.c **** *                 OSIntNesting has been declared 'global'.
 645:uCOSII/Source/os_core.c **** *              3) You MUST still call OSIntExit() even though you increment OSIntNesting directly.
 646:uCOSII/Source/os_core.c **** *              4) You MUST invoke OSIntEnter() and OSIntExit() in pair.  In other words, for every 
 647:uCOSII/Source/os_core.c **** *                 to OSIntEnter() at the beginning of the ISR you MUST have a call to OSIntExit() a
 648:uCOSII/Source/os_core.c **** *                 end of the ISR.
 649:uCOSII/Source/os_core.c **** *              5) You are allowed to nest interrupts up to 255 levels deep.
 650:uCOSII/Source/os_core.c **** *              6) I removed the OS_ENTER_CRITICAL() and OS_EXIT_CRITICAL() around the increment bec
 651:uCOSII/Source/os_core.c **** *                 OSIntEnter() is always called with interrupts disabled.
 652:uCOSII/Source/os_core.c **** ***************************************************************************************************
 653:uCOSII/Source/os_core.c **** */
 654:uCOSII/Source/os_core.c **** 
 655:uCOSII/Source/os_core.c **** void  OSIntEnter (void)
 656:uCOSII/Source/os_core.c **** {
 657:uCOSII/Source/os_core.c ****     if (OSRunning == OS_TRUE) {
 658:uCOSII/Source/os_core.c ****         if (OSIntNesting < 255u) {
ARM GAS  /tmp/ccxgEmFy.s 			page 13


 659:uCOSII/Source/os_core.c ****             OSIntNesting++;                      /* Increment ISR nesting level                    
 660:uCOSII/Source/os_core.c ****         }
 661:uCOSII/Source/os_core.c ****     }
 662:uCOSII/Source/os_core.c **** }
 663:uCOSII/Source/os_core.c **** /*$PAGE*/
 664:uCOSII/Source/os_core.c **** /*
 665:uCOSII/Source/os_core.c **** ***************************************************************************************************
 666:uCOSII/Source/os_core.c **** *                                              EXIT ISR
 667:uCOSII/Source/os_core.c **** *
 668:uCOSII/Source/os_core.c **** * Description: This function is used to notify uC/OS-II that you have completed servicing an ISR.  
 669:uCOSII/Source/os_core.c **** *              the last nested ISR has completed, uC/OS-II will call the scheduler to determine whe
 670:uCOSII/Source/os_core.c **** *              a new, high-priority task, is ready to run.
 671:uCOSII/Source/os_core.c **** *
 672:uCOSII/Source/os_core.c **** * Arguments  : none
 673:uCOSII/Source/os_core.c **** *
 674:uCOSII/Source/os_core.c **** * Returns    : none
 675:uCOSII/Source/os_core.c **** *
 676:uCOSII/Source/os_core.c **** * Notes      : 1) You MUST invoke OSIntEnter() and OSIntExit() in pair.  In other words, for every 
 677:uCOSII/Source/os_core.c **** *                 to OSIntEnter() at the beginning of the ISR you MUST have a call to OSIntExit() a
 678:uCOSII/Source/os_core.c **** *                 end of the ISR.
 679:uCOSII/Source/os_core.c **** *              2) Rescheduling is prevented when the scheduler is locked (see OS_SchedLock())
 680:uCOSII/Source/os_core.c **** ***************************************************************************************************
 681:uCOSII/Source/os_core.c **** */
 682:uCOSII/Source/os_core.c **** 
 683:uCOSII/Source/os_core.c **** void  OSIntExit (void)
 684:uCOSII/Source/os_core.c **** {
 685:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                               /* Allocate storage for CPU status regis
 686:uCOSII/Source/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 687:uCOSII/Source/os_core.c **** #endif
 688:uCOSII/Source/os_core.c **** 
 689:uCOSII/Source/os_core.c **** 
 690:uCOSII/Source/os_core.c **** 
 691:uCOSII/Source/os_core.c ****     if (OSRunning == OS_TRUE) {
 692:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
 693:uCOSII/Source/os_core.c ****         if (OSIntNesting > 0u) {                           /* Prevent OSIntNesting from wrapping   
 694:uCOSII/Source/os_core.c ****             OSIntNesting--;
 695:uCOSII/Source/os_core.c ****         }
 696:uCOSII/Source/os_core.c ****         if (OSIntNesting == 0u) {                          /* Reschedule only if all ISRs complete 
 697:uCOSII/Source/os_core.c ****             if (OSLockNesting == 0u) {                     /* ... and not locked.                  
 698:uCOSII/Source/os_core.c ****                 OS_SchedNew();
 699:uCOSII/Source/os_core.c ****                 OSTCBHighRdy = OSTCBPrioTbl[OSPrioHighRdy];
 700:uCOSII/Source/os_core.c ****                 if (OSPrioHighRdy != OSPrioCur) {          /* No Ctx Sw if current task is highest 
 701:uCOSII/Source/os_core.c **** #if OS_TASK_PROFILE_EN > 0u
 702:uCOSII/Source/os_core.c ****                     OSTCBHighRdy->OSTCBCtxSwCtr++;         /* Inc. # of context switches to this ta
 703:uCOSII/Source/os_core.c **** #endif
 704:uCOSII/Source/os_core.c ****                     OSCtxSwCtr++;                          /* Keep track of the number of ctx switc
 705:uCOSII/Source/os_core.c **** 
 706:uCOSII/Source/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
 707:uCOSII/Source/os_core.c **** #if defined(OS_TLS_TBL_SIZE) && (OS_TLS_TBL_SIZE > 0u)
 708:uCOSII/Source/os_core.c ****                     OS_TLS_TaskSw();
 709:uCOSII/Source/os_core.c **** #endif
 710:uCOSII/Source/os_core.c **** #endif
 711:uCOSII/Source/os_core.c **** 
 712:uCOSII/Source/os_core.c ****                     OSIntCtxSw();                          /* Perform interrupt level ctx switch   
 713:uCOSII/Source/os_core.c ****                 }
 714:uCOSII/Source/os_core.c ****             }
 715:uCOSII/Source/os_core.c ****         }
ARM GAS  /tmp/ccxgEmFy.s 			page 14


 716:uCOSII/Source/os_core.c ****         OS_EXIT_CRITICAL();
 717:uCOSII/Source/os_core.c ****     }
 718:uCOSII/Source/os_core.c **** }
 719:uCOSII/Source/os_core.c **** /*$PAGE*/
 720:uCOSII/Source/os_core.c **** /*
 721:uCOSII/Source/os_core.c **** ***************************************************************************************************
 722:uCOSII/Source/os_core.c **** *                         INDICATE THAT IT'S NO LONGER SAFE TO CREATE OBJECTS
 723:uCOSII/Source/os_core.c **** *
 724:uCOSII/Source/os_core.c **** * Description: This function is called by the application code to indicate that all initialization 
 725:uCOSII/Source/os_core.c **** *              been completed and that kernel objects are no longer allowed to be created.
 726:uCOSII/Source/os_core.c **** *
 727:uCOSII/Source/os_core.c **** * Arguments  : none
 728:uCOSII/Source/os_core.c **** *
 729:uCOSII/Source/os_core.c **** * Returns    : none
 730:uCOSII/Source/os_core.c **** *
 731:uCOSII/Source/os_core.c **** * Note(s)    : 1) You should call this function when you no longer want to allow application code t
 732:uCOSII/Source/os_core.c **** *                 create kernel objects.
 733:uCOSII/Source/os_core.c **** *              2) You need to define the macro 'OS_SAFETY_CRITICAL_IEC61508'
 734:uCOSII/Source/os_core.c **** ***************************************************************************************************
 735:uCOSII/Source/os_core.c **** */
 736:uCOSII/Source/os_core.c **** 
 737:uCOSII/Source/os_core.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
 738:uCOSII/Source/os_core.c **** void  OSSafetyCriticalStart (void)
 739:uCOSII/Source/os_core.c **** {
 740:uCOSII/Source/os_core.c ****     OSSafetyCriticalStartFlag = OS_TRUE;
 741:uCOSII/Source/os_core.c **** }
 742:uCOSII/Source/os_core.c **** 
 743:uCOSII/Source/os_core.c **** #endif
 744:uCOSII/Source/os_core.c **** 
 745:uCOSII/Source/os_core.c **** /*$PAGE*/
 746:uCOSII/Source/os_core.c **** /*
 747:uCOSII/Source/os_core.c **** ***************************************************************************************************
 748:uCOSII/Source/os_core.c **** *                                         PREVENT SCHEDULING
 749:uCOSII/Source/os_core.c **** *
 750:uCOSII/Source/os_core.c **** * Description: This function is used to prevent rescheduling to take place.  This allows your appli
 751:uCOSII/Source/os_core.c **** *              to prevent context switches until you are ready to permit context switching.
 752:uCOSII/Source/os_core.c **** *
 753:uCOSII/Source/os_core.c **** * Arguments  : none
 754:uCOSII/Source/os_core.c **** *
 755:uCOSII/Source/os_core.c **** * Returns    : none
 756:uCOSII/Source/os_core.c **** *
 757:uCOSII/Source/os_core.c **** * Notes      : 1) You MUST invoke OSSchedLock() and OSSchedUnlock() in pair.  In other words, for e
 758:uCOSII/Source/os_core.c **** *                 call to OSSchedLock() you MUST have a call to OSSchedUnlock().
 759:uCOSII/Source/os_core.c **** ***************************************************************************************************
 760:uCOSII/Source/os_core.c **** */
 761:uCOSII/Source/os_core.c **** 
 762:uCOSII/Source/os_core.c **** #if OS_SCHED_LOCK_EN > 0u
 763:uCOSII/Source/os_core.c **** void  OSSchedLock (void)
 764:uCOSII/Source/os_core.c **** {
 765:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 766:uCOSII/Source/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 767:uCOSII/Source/os_core.c **** #endif
 768:uCOSII/Source/os_core.c **** 
 769:uCOSII/Source/os_core.c **** 
 770:uCOSII/Source/os_core.c **** 
 771:uCOSII/Source/os_core.c ****     if (OSRunning == OS_TRUE) {                  /* Make sure multitasking is running              
 772:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
ARM GAS  /tmp/ccxgEmFy.s 			page 15


 773:uCOSII/Source/os_core.c ****         if (OSIntNesting == 0u) {                /* Can't call from an ISR                         
 774:uCOSII/Source/os_core.c ****             if (OSLockNesting < 255u) {          /* Prevent OSLockNesting from wrapping back to 0  
 775:uCOSII/Source/os_core.c ****                 OSLockNesting++;                 /* Increment lock nesting level                   
 776:uCOSII/Source/os_core.c ****             }
 777:uCOSII/Source/os_core.c ****         }
 778:uCOSII/Source/os_core.c ****         OS_EXIT_CRITICAL();
 779:uCOSII/Source/os_core.c ****     }
 780:uCOSII/Source/os_core.c **** }
 781:uCOSII/Source/os_core.c **** #endif
 782:uCOSII/Source/os_core.c **** 
 783:uCOSII/Source/os_core.c **** /*$PAGE*/
 784:uCOSII/Source/os_core.c **** /*
 785:uCOSII/Source/os_core.c **** ***************************************************************************************************
 786:uCOSII/Source/os_core.c **** *                                          ENABLE SCHEDULING
 787:uCOSII/Source/os_core.c **** *
 788:uCOSII/Source/os_core.c **** * Description: This function is used to re-allow rescheduling.
 789:uCOSII/Source/os_core.c **** *
 790:uCOSII/Source/os_core.c **** * Arguments  : none
 791:uCOSII/Source/os_core.c **** *
 792:uCOSII/Source/os_core.c **** * Returns    : none
 793:uCOSII/Source/os_core.c **** *
 794:uCOSII/Source/os_core.c **** * Notes      : 1) You MUST invoke OSSchedLock() and OSSchedUnlock() in pair.  In other words, for e
 795:uCOSII/Source/os_core.c **** *                 call to OSSchedLock() you MUST have a call to OSSchedUnlock().
 796:uCOSII/Source/os_core.c **** ***************************************************************************************************
 797:uCOSII/Source/os_core.c **** */
 798:uCOSII/Source/os_core.c **** 
 799:uCOSII/Source/os_core.c **** #if OS_SCHED_LOCK_EN > 0u
 800:uCOSII/Source/os_core.c **** void  OSSchedUnlock (void)
 801:uCOSII/Source/os_core.c **** {
 802:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                               /* Allocate storage for CPU status regis
 803:uCOSII/Source/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 804:uCOSII/Source/os_core.c **** #endif
 805:uCOSII/Source/os_core.c **** 
 806:uCOSII/Source/os_core.c **** 
 807:uCOSII/Source/os_core.c **** 
 808:uCOSII/Source/os_core.c ****     if (OSRunning == OS_TRUE) {                            /* Make sure multitasking is running    
 809:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
 810:uCOSII/Source/os_core.c ****         if (OSIntNesting == 0u) {                          /* Can't call from an ISR               
 811:uCOSII/Source/os_core.c ****             if (OSLockNesting > 0u) {                      /* Do not decrement if already 0        
 812:uCOSII/Source/os_core.c ****                 OSLockNesting--;                           /* Decrement lock nesting level         
 813:uCOSII/Source/os_core.c ****                 if (OSLockNesting == 0u) {                 /* See if scheduler is enabled          
 814:uCOSII/Source/os_core.c ****                     OS_EXIT_CRITICAL();
 815:uCOSII/Source/os_core.c ****                     OS_Sched();                            /* See if a HPT is ready                
 816:uCOSII/Source/os_core.c ****                 } else {
 817:uCOSII/Source/os_core.c ****                     OS_EXIT_CRITICAL();
 818:uCOSII/Source/os_core.c ****                 }
 819:uCOSII/Source/os_core.c ****             } else {
 820:uCOSII/Source/os_core.c ****                 OS_EXIT_CRITICAL();
 821:uCOSII/Source/os_core.c ****             }
 822:uCOSII/Source/os_core.c ****         } else {
 823:uCOSII/Source/os_core.c ****             OS_EXIT_CRITICAL();
 824:uCOSII/Source/os_core.c ****         }
 825:uCOSII/Source/os_core.c ****     }
 826:uCOSII/Source/os_core.c **** }
 827:uCOSII/Source/os_core.c **** #endif
 828:uCOSII/Source/os_core.c **** 
 829:uCOSII/Source/os_core.c **** /*$PAGE*/
ARM GAS  /tmp/ccxgEmFy.s 			page 16


 830:uCOSII/Source/os_core.c **** /*
 831:uCOSII/Source/os_core.c **** ***************************************************************************************************
 832:uCOSII/Source/os_core.c **** *                                         START MULTITASKING
 833:uCOSII/Source/os_core.c **** *
 834:uCOSII/Source/os_core.c **** * Description: This function is used to start the multitasking process which lets uC/OS-II manages 
 835:uCOSII/Source/os_core.c **** *              task that you have created.  Before you can call OSStart(), you MUST have called OSI
 836:uCOSII/Source/os_core.c **** *              and you MUST have created at least one task.
 837:uCOSII/Source/os_core.c **** *
 838:uCOSII/Source/os_core.c **** * Arguments  : none
 839:uCOSII/Source/os_core.c **** *
 840:uCOSII/Source/os_core.c **** * Returns    : none
 841:uCOSII/Source/os_core.c **** *
 842:uCOSII/Source/os_core.c **** * Note       : OSStartHighRdy() MUST:
 843:uCOSII/Source/os_core.c **** *                 a) Call OSTaskSwHook() then,
 844:uCOSII/Source/os_core.c **** *                 b) Set OSRunning to OS_TRUE.
 845:uCOSII/Source/os_core.c **** *                 c) Load the context of the task pointed to by OSTCBHighRdy.
 846:uCOSII/Source/os_core.c **** *                 d_ Execute the task.
 847:uCOSII/Source/os_core.c **** ***************************************************************************************************
 848:uCOSII/Source/os_core.c **** */
 849:uCOSII/Source/os_core.c **** 
 850:uCOSII/Source/os_core.c **** void  OSStart (void)
 851:uCOSII/Source/os_core.c **** {
 852:uCOSII/Source/os_core.c ****     if (OSRunning == OS_FALSE) {
 853:uCOSII/Source/os_core.c ****         OS_SchedNew();                               /* Find highest priority's task priority numbe
 854:uCOSII/Source/os_core.c ****         OSPrioCur     = OSPrioHighRdy;
 855:uCOSII/Source/os_core.c ****         OSTCBHighRdy  = OSTCBPrioTbl[OSPrioHighRdy]; /* Point to highest priority task ready to run
 856:uCOSII/Source/os_core.c ****         OSTCBCur      = OSTCBHighRdy;
 857:uCOSII/Source/os_core.c ****         OSStartHighRdy();                            /* Execute target specific code to start task 
 858:uCOSII/Source/os_core.c ****     }
 859:uCOSII/Source/os_core.c **** }
 860:uCOSII/Source/os_core.c **** /*$PAGE*/
 861:uCOSII/Source/os_core.c **** /*
 862:uCOSII/Source/os_core.c **** ***************************************************************************************************
 863:uCOSII/Source/os_core.c **** *                                      STATISTICS INITIALIZATION
 864:uCOSII/Source/os_core.c **** *
 865:uCOSII/Source/os_core.c **** * Description: This function is called by your application to establish CPU usage by first determin
 866:uCOSII/Source/os_core.c **** *              how high a 32-bit counter would count to in 1 second if no other tasks were to execu
 867:uCOSII/Source/os_core.c **** *              during that time.  CPU usage is then determined by a low priority task which keeps t
 868:uCOSII/Source/os_core.c **** *              of this 32-bit counter every second but this time, with other tasks running.  CPU us
 869:uCOSII/Source/os_core.c **** *              determined by:
 870:uCOSII/Source/os_core.c **** *
 871:uCOSII/Source/os_core.c **** *                                             OSIdleCtr
 872:uCOSII/Source/os_core.c **** *                 CPU Usage (%) = 100 * (1 - ------------)
 873:uCOSII/Source/os_core.c **** *                                            OSIdleCtrMax
 874:uCOSII/Source/os_core.c **** *
 875:uCOSII/Source/os_core.c **** * Arguments  : none
 876:uCOSII/Source/os_core.c **** *
 877:uCOSII/Source/os_core.c **** * Returns    : none
 878:uCOSII/Source/os_core.c **** ***************************************************************************************************
 879:uCOSII/Source/os_core.c **** */
 880:uCOSII/Source/os_core.c **** 
 881:uCOSII/Source/os_core.c **** #if OS_TASK_STAT_EN > 0u
 882:uCOSII/Source/os_core.c **** void  OSStatInit (void)
 883:uCOSII/Source/os_core.c **** {
 884:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 885:uCOSII/Source/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 886:uCOSII/Source/os_core.c **** #endif
ARM GAS  /tmp/ccxgEmFy.s 			page 17


 887:uCOSII/Source/os_core.c **** 
 888:uCOSII/Source/os_core.c **** 
 889:uCOSII/Source/os_core.c **** 
 890:uCOSII/Source/os_core.c ****     OSTimeDly(2u);                               /* Synchronize with clock tick                    
 891:uCOSII/Source/os_core.c ****     OS_ENTER_CRITICAL();
 892:uCOSII/Source/os_core.c ****     OSIdleCtr    = 0uL;                          /* Clear idle counter                             
 893:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 894:uCOSII/Source/os_core.c ****     OSTimeDly(OS_TICKS_PER_SEC / 10u);           /* Determine MAX. idle counter value for 1/10 seco
 895:uCOSII/Source/os_core.c ****     OS_ENTER_CRITICAL();
 896:uCOSII/Source/os_core.c ****     OSIdleCtrMax = OSIdleCtr;                    /* Store maximum idle counter count in 1/10 second
 897:uCOSII/Source/os_core.c ****     OSStatRdy    = OS_TRUE;
 898:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 899:uCOSII/Source/os_core.c **** }
 900:uCOSII/Source/os_core.c **** #endif
 901:uCOSII/Source/os_core.c **** /*$PAGE*/
 902:uCOSII/Source/os_core.c **** /*
 903:uCOSII/Source/os_core.c **** ***************************************************************************************************
 904:uCOSII/Source/os_core.c **** *                                         PROCESS SYSTEM TICK
 905:uCOSII/Source/os_core.c **** *
 906:uCOSII/Source/os_core.c **** * Description: This function is used to signal to uC/OS-II the occurrence of a 'system tick' (also 
 907:uCOSII/Source/os_core.c **** *              as a 'clock tick').  This function should be called by the ticker ISR but, can also 
 908:uCOSII/Source/os_core.c **** *              called by a high priority task.
 909:uCOSII/Source/os_core.c **** *
 910:uCOSII/Source/os_core.c **** * Arguments  : none
 911:uCOSII/Source/os_core.c **** *
 912:uCOSII/Source/os_core.c **** * Returns    : none
 913:uCOSII/Source/os_core.c **** ***************************************************************************************************
 914:uCOSII/Source/os_core.c **** */
 915:uCOSII/Source/os_core.c **** 
 916:uCOSII/Source/os_core.c **** void  OSTimeTick (void)
 917:uCOSII/Source/os_core.c **** {
 918:uCOSII/Source/os_core.c ****     OS_TCB    *ptcb;
 919:uCOSII/Source/os_core.c **** #if OS_TICK_STEP_EN > 0u
 920:uCOSII/Source/os_core.c ****     BOOLEAN    step;
 921:uCOSII/Source/os_core.c **** #endif
 922:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                               /* Allocate storage for CPU status regis
 923:uCOSII/Source/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 924:uCOSII/Source/os_core.c **** #endif
 925:uCOSII/Source/os_core.c **** 
 926:uCOSII/Source/os_core.c **** 
 927:uCOSII/Source/os_core.c **** 
 928:uCOSII/Source/os_core.c **** #if OS_TIME_TICK_HOOK_EN > 0u
 929:uCOSII/Source/os_core.c ****     OSTimeTickHook();                                      /* Call user definable hook             
 930:uCOSII/Source/os_core.c **** #endif
 931:uCOSII/Source/os_core.c **** #if OS_TIME_GET_SET_EN > 0u
 932:uCOSII/Source/os_core.c ****     OS_ENTER_CRITICAL();                                   /* Update the 32-bit tick counter       
 933:uCOSII/Source/os_core.c ****     OSTime++;
 934:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 935:uCOSII/Source/os_core.c **** #endif
 936:uCOSII/Source/os_core.c ****     if (OSRunning == OS_TRUE) {
 937:uCOSII/Source/os_core.c **** #if OS_TICK_STEP_EN > 0u
 938:uCOSII/Source/os_core.c ****         switch (OSTickStepState) {                         /* Determine whether we need to process 
 939:uCOSII/Source/os_core.c ****             case OS_TICK_STEP_DIS:                         /* Yes, stepping is disabled            
 940:uCOSII/Source/os_core.c ****                  step = OS_TRUE;
 941:uCOSII/Source/os_core.c ****                  break;
 942:uCOSII/Source/os_core.c **** 
 943:uCOSII/Source/os_core.c ****             case OS_TICK_STEP_WAIT:                        /* No,  waiting for uC/OS-View to set ..
ARM GAS  /tmp/ccxgEmFy.s 			page 18


 944:uCOSII/Source/os_core.c ****                  step = OS_FALSE;                          /*      .. OSTickStepState to OS_TICK_ST
 945:uCOSII/Source/os_core.c ****                  break;
 946:uCOSII/Source/os_core.c **** 
 947:uCOSII/Source/os_core.c ****             case OS_TICK_STEP_ONCE:                        /* Yes, process tick once and wait for n
 948:uCOSII/Source/os_core.c ****                  step            = OS_TRUE;                /*      ... step command from uC/OS-View
 949:uCOSII/Source/os_core.c ****                  OSTickStepState = OS_TICK_STEP_WAIT;
 950:uCOSII/Source/os_core.c ****                  break;
 951:uCOSII/Source/os_core.c **** 
 952:uCOSII/Source/os_core.c ****             default:                                       /* Invalid case, correct situation      
 953:uCOSII/Source/os_core.c ****                  step            = OS_TRUE;
 954:uCOSII/Source/os_core.c ****                  OSTickStepState = OS_TICK_STEP_DIS;
 955:uCOSII/Source/os_core.c ****                  break;
 956:uCOSII/Source/os_core.c ****         }
 957:uCOSII/Source/os_core.c ****         if (step == OS_FALSE) {                            /* Return if waiting for step command   
 958:uCOSII/Source/os_core.c ****             return;
 959:uCOSII/Source/os_core.c ****         }
 960:uCOSII/Source/os_core.c **** #endif
 961:uCOSII/Source/os_core.c ****         ptcb = OSTCBList;                                  /* Point at first TCB in TCB list       
 962:uCOSII/Source/os_core.c ****         while (ptcb->OSTCBPrio != OS_TASK_IDLE_PRIO) {     /* Go through all TCBs in TCB list      
 963:uCOSII/Source/os_core.c ****             OS_ENTER_CRITICAL();
 964:uCOSII/Source/os_core.c ****             if (ptcb->OSTCBDly != 0u) {                    /* No, Delayed or waiting for event with
 965:uCOSII/Source/os_core.c ****                 ptcb->OSTCBDly--;                          /* Decrement nbr of ticks to end of dela
 966:uCOSII/Source/os_core.c ****                 if (ptcb->OSTCBDly == 0u) {                /* Check for timeout                    
 967:uCOSII/Source/os_core.c **** 
 968:uCOSII/Source/os_core.c ****                     if ((ptcb->OSTCBStat & OS_STAT_PEND_ANY) != OS_STAT_RDY) {
 969:uCOSII/Source/os_core.c ****                         ptcb->OSTCBStat  &= (INT8U)~(INT8U)OS_STAT_PEND_ANY;          /* Yes, Clear
 970:uCOSII/Source/os_core.c ****                         ptcb->OSTCBStatPend = OS_STAT_PEND_TO;                 /* Indicate PEND tim
 971:uCOSII/Source/os_core.c ****                     } else {
 972:uCOSII/Source/os_core.c ****                         ptcb->OSTCBStatPend = OS_STAT_PEND_OK;
 973:uCOSII/Source/os_core.c ****                     }
 974:uCOSII/Source/os_core.c **** 
 975:uCOSII/Source/os_core.c ****                     if ((ptcb->OSTCBStat & OS_STAT_SUSPEND) == OS_STAT_RDY) {  /* Is task suspended
 976:uCOSII/Source/os_core.c ****                         OSRdyGrp               |= ptcb->OSTCBBitY;             /* No,  Make ready  
 977:uCOSII/Source/os_core.c ****                         OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
 978:uCOSII/Source/os_core.c ****                     }
 979:uCOSII/Source/os_core.c ****                 }
 980:uCOSII/Source/os_core.c ****             }
 981:uCOSII/Source/os_core.c ****             ptcb = ptcb->OSTCBNext;                        /* Point at next TCB in TCB list        
 982:uCOSII/Source/os_core.c ****             OS_EXIT_CRITICAL();
 983:uCOSII/Source/os_core.c ****         }
 984:uCOSII/Source/os_core.c ****     }
 985:uCOSII/Source/os_core.c **** }
 986:uCOSII/Source/os_core.c **** 
 987:uCOSII/Source/os_core.c **** /*$PAGE*/
 988:uCOSII/Source/os_core.c **** /*
 989:uCOSII/Source/os_core.c **** ***************************************************************************************************
 990:uCOSII/Source/os_core.c **** *                                             GET VERSION
 991:uCOSII/Source/os_core.c **** *
 992:uCOSII/Source/os_core.c **** * Description: This function is used to return the version number of uC/OS-II.  The returned value 
 993:uCOSII/Source/os_core.c **** *              corresponds to uC/OS-II's version number multiplied by 10000.  In other words, versi
 994:uCOSII/Source/os_core.c **** *              2.01.00 would be returned as 20100.
 995:uCOSII/Source/os_core.c **** *
 996:uCOSII/Source/os_core.c **** * Arguments  : none
 997:uCOSII/Source/os_core.c **** *
 998:uCOSII/Source/os_core.c **** * Returns    : The version number of uC/OS-II multiplied by 10000.
 999:uCOSII/Source/os_core.c **** ***************************************************************************************************
1000:uCOSII/Source/os_core.c **** */
ARM GAS  /tmp/ccxgEmFy.s 			page 19


1001:uCOSII/Source/os_core.c **** 
1002:uCOSII/Source/os_core.c **** INT16U  OSVersion (void)
1003:uCOSII/Source/os_core.c **** {
1004:uCOSII/Source/os_core.c ****     return (OS_VERSION);
1005:uCOSII/Source/os_core.c **** }
1006:uCOSII/Source/os_core.c **** 
1007:uCOSII/Source/os_core.c **** /*$PAGE*/
1008:uCOSII/Source/os_core.c **** /*
1009:uCOSII/Source/os_core.c **** ***************************************************************************************************
1010:uCOSII/Source/os_core.c **** *                                           DUMMY FUNCTION
1011:uCOSII/Source/os_core.c **** *
1012:uCOSII/Source/os_core.c **** * Description: This function doesn't do anything.  It is called by OSTaskDel().
1013:uCOSII/Source/os_core.c **** *
1014:uCOSII/Source/os_core.c **** * Arguments  : none
1015:uCOSII/Source/os_core.c **** *
1016:uCOSII/Source/os_core.c **** * Returns    : none
1017:uCOSII/Source/os_core.c **** ***************************************************************************************************
1018:uCOSII/Source/os_core.c **** */
1019:uCOSII/Source/os_core.c **** 
1020:uCOSII/Source/os_core.c **** #if OS_TASK_DEL_EN > 0u
1021:uCOSII/Source/os_core.c **** void  OS_Dummy (void)
1022:uCOSII/Source/os_core.c **** {
1023:uCOSII/Source/os_core.c **** }
1024:uCOSII/Source/os_core.c **** #endif
1025:uCOSII/Source/os_core.c **** 
1026:uCOSII/Source/os_core.c **** /*$PAGE*/
1027:uCOSII/Source/os_core.c **** /*
1028:uCOSII/Source/os_core.c **** ***************************************************************************************************
1029:uCOSII/Source/os_core.c **** *                           MAKE TASK READY TO RUN BASED ON EVENT OCCURING
1030:uCOSII/Source/os_core.c **** *
1031:uCOSII/Source/os_core.c **** * Description: This function is called by other uC/OS-II services and is used to ready a task that 
1032:uCOSII/Source/os_core.c **** *              waiting for an event to occur.
1033:uCOSII/Source/os_core.c **** *
1034:uCOSII/Source/os_core.c **** * Arguments  : pevent      is a pointer to the event control block corresponding to the event.
1035:uCOSII/Source/os_core.c **** *
1036:uCOSII/Source/os_core.c **** *              pmsg        is a pointer to a message.  This pointer is used by message oriented ser
1037:uCOSII/Source/os_core.c **** *                          such as MAILBOXEs and QUEUEs.  The pointer is not used when called by ot
1038:uCOSII/Source/os_core.c **** *                          service functions.
1039:uCOSII/Source/os_core.c **** *
1040:uCOSII/Source/os_core.c **** *              msk         is a mask that is used to clear the status byte of the TCB.  For example
1041:uCOSII/Source/os_core.c **** *                          OSSemPost() will pass OS_STAT_SEM, OSMboxPost() will pass OS_STAT_MBOX e
1042:uCOSII/Source/os_core.c **** *
1043:uCOSII/Source/os_core.c **** *              pend_stat   is used to indicate the readied task's pending status:
1044:uCOSII/Source/os_core.c **** *
1045:uCOSII/Source/os_core.c **** *                          OS_STAT_PEND_OK      Task ready due to a post (or delete), not a timeout
1046:uCOSII/Source/os_core.c **** *                                               an abort.
1047:uCOSII/Source/os_core.c **** *                          OS_STAT_PEND_ABORT   Task ready due to an abort.
1048:uCOSII/Source/os_core.c **** *
1049:uCOSII/Source/os_core.c **** * Returns    : none
1050:uCOSII/Source/os_core.c **** *
1051:uCOSII/Source/os_core.c **** * Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
1052:uCOSII/Source/os_core.c **** ***************************************************************************************************
1053:uCOSII/Source/os_core.c **** */
1054:uCOSII/Source/os_core.c **** #if (OS_EVENT_EN)
1055:uCOSII/Source/os_core.c **** INT8U  OS_EventTaskRdy (OS_EVENT  *pevent,
1056:uCOSII/Source/os_core.c ****                         void      *pmsg,
1057:uCOSII/Source/os_core.c ****                         INT8U      msk,
ARM GAS  /tmp/ccxgEmFy.s 			page 20


1058:uCOSII/Source/os_core.c ****                         INT8U      pend_stat)
1059:uCOSII/Source/os_core.c **** {
1060:uCOSII/Source/os_core.c ****     OS_TCB   *ptcb;
1061:uCOSII/Source/os_core.c ****     INT8U     y;
1062:uCOSII/Source/os_core.c ****     INT8U     x;
1063:uCOSII/Source/os_core.c ****     INT8U     prio;
1064:uCOSII/Source/os_core.c **** #if OS_LOWEST_PRIO > 63u
1065:uCOSII/Source/os_core.c ****     OS_PRIO  *ptbl;
1066:uCOSII/Source/os_core.c **** #endif
1067:uCOSII/Source/os_core.c **** 
1068:uCOSII/Source/os_core.c **** 
1069:uCOSII/Source/os_core.c **** #if OS_LOWEST_PRIO <= 63u
1070:uCOSII/Source/os_core.c ****     y    = OSUnMapTbl[pevent->OSEventGrp];              /* Find HPT waiting for message            
1071:uCOSII/Source/os_core.c ****     x    = OSUnMapTbl[pevent->OSEventTbl[y]];
1072:uCOSII/Source/os_core.c ****     prio = (INT8U)((y << 3u) + x);                      /* Find priority of task getting the msg   
1073:uCOSII/Source/os_core.c **** #else
1074:uCOSII/Source/os_core.c ****     if ((pevent->OSEventGrp & 0xFFu) != 0u) {           /* Find HPT waiting for message            
1075:uCOSII/Source/os_core.c ****         y = OSUnMapTbl[ pevent->OSEventGrp & 0xFFu];
1076:uCOSII/Source/os_core.c ****     } else {
1077:uCOSII/Source/os_core.c ****         y = OSUnMapTbl[(OS_PRIO)(pevent->OSEventGrp >> 8u) & 0xFFu] + 8u;
1078:uCOSII/Source/os_core.c ****     }
1079:uCOSII/Source/os_core.c ****     ptbl = &pevent->OSEventTbl[y];
1080:uCOSII/Source/os_core.c ****     if ((*ptbl & 0xFFu) != 0u) {
1081:uCOSII/Source/os_core.c ****         x = OSUnMapTbl[*ptbl & 0xFFu];
1082:uCOSII/Source/os_core.c ****     } else {
1083:uCOSII/Source/os_core.c ****         x = OSUnMapTbl[(OS_PRIO)(*ptbl >> 8u) & 0xFFu] + 8u;
1084:uCOSII/Source/os_core.c ****     }
1085:uCOSII/Source/os_core.c ****     prio = (INT8U)((y << 4u) + x);                      /* Find priority of task getting the msg   
1086:uCOSII/Source/os_core.c **** #endif
1087:uCOSII/Source/os_core.c **** 
1088:uCOSII/Source/os_core.c ****     ptcb                  =  OSTCBPrioTbl[prio];        /* Point to this task's OS_TCB             
1089:uCOSII/Source/os_core.c ****     ptcb->OSTCBDly        =  0u;                        /* Prevent OSTimeTick() from readying task 
1090:uCOSII/Source/os_core.c **** #if ((OS_Q_EN > 0u) && (OS_MAX_QS > 0u)) || (OS_MBOX_EN > 0u)
1091:uCOSII/Source/os_core.c ****     ptcb->OSTCBMsg        =  pmsg;                      /* Send message directly to waiting task   
1092:uCOSII/Source/os_core.c **** #else
1093:uCOSII/Source/os_core.c ****     pmsg                  =  pmsg;                      /* Prevent compiler warning if not used    
1094:uCOSII/Source/os_core.c **** #endif
1095:uCOSII/Source/os_core.c ****     ptcb->OSTCBStat      &= (INT8U)~msk;                /* Clear bit associated with event type    
1096:uCOSII/Source/os_core.c ****     ptcb->OSTCBStatPend   =  pend_stat;                 /* Set pend status of post or abort        
1097:uCOSII/Source/os_core.c ****                                                         /* See if task is ready (could be susp'd)  
1098:uCOSII/Source/os_core.c ****     if ((ptcb->OSTCBStat &   OS_STAT_SUSPEND) == OS_STAT_RDY) {
1099:uCOSII/Source/os_core.c ****         OSRdyGrp         |=  ptcb->OSTCBBitY;           /* Put task in the ready to run list       
1100:uCOSII/Source/os_core.c ****         OSRdyTbl[y]      |=  ptcb->OSTCBBitX;
1101:uCOSII/Source/os_core.c ****     }
1102:uCOSII/Source/os_core.c **** 
1103:uCOSII/Source/os_core.c ****     OS_EventTaskRemove(ptcb, pevent);                   /* Remove this task from event   wait list 
1104:uCOSII/Source/os_core.c **** #if (OS_EVENT_MULTI_EN > 0u)
1105:uCOSII/Source/os_core.c ****     if (ptcb->OSTCBEventMultiPtr != (OS_EVENT **)0) {   /* Remove this task from events' wait lists
1106:uCOSII/Source/os_core.c ****         OS_EventTaskRemoveMulti(ptcb, ptcb->OSTCBEventMultiPtr);
1107:uCOSII/Source/os_core.c ****         ptcb->OSTCBEventPtr       = (OS_EVENT  *)pevent;/* Return event as first multi-pend event r
1108:uCOSII/Source/os_core.c ****     }
1109:uCOSII/Source/os_core.c **** #endif
1110:uCOSII/Source/os_core.c **** 
1111:uCOSII/Source/os_core.c ****     return (prio);
1112:uCOSII/Source/os_core.c **** }
1113:uCOSII/Source/os_core.c **** #endif
1114:uCOSII/Source/os_core.c **** /*$PAGE*/
ARM GAS  /tmp/ccxgEmFy.s 			page 21


1115:uCOSII/Source/os_core.c **** /*
1116:uCOSII/Source/os_core.c **** ***************************************************************************************************
1117:uCOSII/Source/os_core.c **** *                                  MAKE TASK WAIT FOR EVENT TO OCCUR
1118:uCOSII/Source/os_core.c **** *
1119:uCOSII/Source/os_core.c **** * Description: This function is called by other uC/OS-II services to suspend a task because an even
1120:uCOSII/Source/os_core.c **** *              not occurred.
1121:uCOSII/Source/os_core.c **** *
1122:uCOSII/Source/os_core.c **** * Arguments  : pevent   is a pointer to the event control block for which the task will be waiting 
1123:uCOSII/Source/os_core.c **** *
1124:uCOSII/Source/os_core.c **** * Returns    : none
1125:uCOSII/Source/os_core.c **** *
1126:uCOSII/Source/os_core.c **** * Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
1127:uCOSII/Source/os_core.c **** ***************************************************************************************************
1128:uCOSII/Source/os_core.c **** */
1129:uCOSII/Source/os_core.c **** #if (OS_EVENT_EN)
1130:uCOSII/Source/os_core.c **** void  OS_EventTaskWait (OS_EVENT *pevent)
1131:uCOSII/Source/os_core.c **** {
1132:uCOSII/Source/os_core.c ****     INT8U  y;
1133:uCOSII/Source/os_core.c **** 
1134:uCOSII/Source/os_core.c **** 
1135:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBEventPtr               = pevent;                 /* Store ptr to ECB in TCB     
1136:uCOSII/Source/os_core.c **** 
1137:uCOSII/Source/os_core.c ****     pevent->OSEventTbl[OSTCBCur->OSTCBY] |= OSTCBCur->OSTCBBitX;    /* Put task in waiting list    
1138:uCOSII/Source/os_core.c ****     pevent->OSEventGrp                   |= OSTCBCur->OSTCBBitY;
1139:uCOSII/Source/os_core.c **** 
1140:uCOSII/Source/os_core.c ****     y             =  OSTCBCur->OSTCBY;            /* Task no longer ready                          
1141:uCOSII/Source/os_core.c ****     OSRdyTbl[y]  &= (OS_PRIO)~OSTCBCur->OSTCBBitX;
1142:uCOSII/Source/os_core.c ****     if (OSRdyTbl[y] == 0u) {                      /* Clear event grp bit if this was only task pend
1143:uCOSII/Source/os_core.c ****         OSRdyGrp &= (OS_PRIO)~OSTCBCur->OSTCBBitY;
1144:uCOSII/Source/os_core.c ****     }
1145:uCOSII/Source/os_core.c **** }
1146:uCOSII/Source/os_core.c **** #endif
1147:uCOSII/Source/os_core.c **** /*$PAGE*/
1148:uCOSII/Source/os_core.c **** /*
1149:uCOSII/Source/os_core.c **** ***************************************************************************************************
1150:uCOSII/Source/os_core.c **** *                         MAKE TASK WAIT FOR ANY OF MULTIPLE EVENTS TO OCCUR
1151:uCOSII/Source/os_core.c **** *
1152:uCOSII/Source/os_core.c **** * Description: This function is called by other uC/OS-II services to suspend a task because any one
1153:uCOSII/Source/os_core.c **** *              multiple events has not occurred.
1154:uCOSII/Source/os_core.c **** *
1155:uCOSII/Source/os_core.c **** * Arguments  : pevents_wait     is a pointer to an array of event control blocks, NULL-terminated, 
1156:uCOSII/Source/os_core.c **** *                               which the task will be waiting for.
1157:uCOSII/Source/os_core.c **** *
1158:uCOSII/Source/os_core.c **** * Returns    : none.
1159:uCOSII/Source/os_core.c **** *
1160:uCOSII/Source/os_core.c **** * Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
1161:uCOSII/Source/os_core.c **** ***************************************************************************************************
1162:uCOSII/Source/os_core.c **** */
1163:uCOSII/Source/os_core.c **** #if ((OS_EVENT_EN) && (OS_EVENT_MULTI_EN > 0u))
1164:uCOSII/Source/os_core.c **** void  OS_EventTaskWaitMulti (OS_EVENT **pevents_wait)
1165:uCOSII/Source/os_core.c **** {
1166:uCOSII/Source/os_core.c ****     OS_EVENT **pevents;
1167:uCOSII/Source/os_core.c ****     OS_EVENT  *pevent;
1168:uCOSII/Source/os_core.c ****     INT8U      y;
1169:uCOSII/Source/os_core.c **** 
1170:uCOSII/Source/os_core.c **** 
1171:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBEventPtr      = (OS_EVENT  *)0;
ARM GAS  /tmp/ccxgEmFy.s 			page 22


1172:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)pevents_wait;       /* Store ptr to ECBs in TCB    
1173:uCOSII/Source/os_core.c **** 
1174:uCOSII/Source/os_core.c ****     pevents =  pevents_wait;
1175:uCOSII/Source/os_core.c ****     pevent  = *pevents;
1176:uCOSII/Source/os_core.c ****     while (pevent != (OS_EVENT *)0) {                               /* Put task in waiting lists   
1177:uCOSII/Source/os_core.c ****         pevent->OSEventTbl[OSTCBCur->OSTCBY] |= OSTCBCur->OSTCBBitX;
1178:uCOSII/Source/os_core.c ****         pevent->OSEventGrp                   |= OSTCBCur->OSTCBBitY;
1179:uCOSII/Source/os_core.c ****         pevents++;
1180:uCOSII/Source/os_core.c ****         pevent = *pevents;
1181:uCOSII/Source/os_core.c ****     }
1182:uCOSII/Source/os_core.c **** 
1183:uCOSII/Source/os_core.c ****     y             =  OSTCBCur->OSTCBY;            /* Task no longer ready                          
1184:uCOSII/Source/os_core.c ****     OSRdyTbl[y]  &= (OS_PRIO)~OSTCBCur->OSTCBBitX;
1185:uCOSII/Source/os_core.c ****     if (OSRdyTbl[y] == 0u) {                      /* Clear event grp bit if this was only task pend
1186:uCOSII/Source/os_core.c ****         OSRdyGrp &= (OS_PRIO)~OSTCBCur->OSTCBBitY;
1187:uCOSII/Source/os_core.c ****     }
1188:uCOSII/Source/os_core.c **** }
1189:uCOSII/Source/os_core.c **** #endif
1190:uCOSII/Source/os_core.c **** /*$PAGE*/
1191:uCOSII/Source/os_core.c **** /*
1192:uCOSII/Source/os_core.c **** ***************************************************************************************************
1193:uCOSII/Source/os_core.c **** *                                  REMOVE TASK FROM EVENT WAIT LIST
1194:uCOSII/Source/os_core.c **** *
1195:uCOSII/Source/os_core.c **** * Description: Remove a task from an event's wait list.
1196:uCOSII/Source/os_core.c **** *
1197:uCOSII/Source/os_core.c **** * Arguments  : ptcb     is a pointer to the task to remove.
1198:uCOSII/Source/os_core.c **** *
1199:uCOSII/Source/os_core.c **** *              pevent   is a pointer to the event control block.
1200:uCOSII/Source/os_core.c **** *
1201:uCOSII/Source/os_core.c **** * Returns    : none
1202:uCOSII/Source/os_core.c **** *
1203:uCOSII/Source/os_core.c **** * Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
1204:uCOSII/Source/os_core.c **** ***************************************************************************************************
1205:uCOSII/Source/os_core.c **** */
1206:uCOSII/Source/os_core.c **** #if (OS_EVENT_EN)
1207:uCOSII/Source/os_core.c **** void  OS_EventTaskRemove (OS_TCB   *ptcb,
1208:uCOSII/Source/os_core.c ****                           OS_EVENT *pevent)
1209:uCOSII/Source/os_core.c **** {
1210:uCOSII/Source/os_core.c ****     INT8U  y;
1211:uCOSII/Source/os_core.c **** 
1212:uCOSII/Source/os_core.c **** 
1213:uCOSII/Source/os_core.c ****     y                       =  ptcb->OSTCBY;
1214:uCOSII/Source/os_core.c ****     pevent->OSEventTbl[y]  &= (OS_PRIO)~ptcb->OSTCBBitX;    /* Remove task from wait list          
1215:uCOSII/Source/os_core.c ****     if (pevent->OSEventTbl[y] == 0u) {
1216:uCOSII/Source/os_core.c ****         pevent->OSEventGrp &= (OS_PRIO)~ptcb->OSTCBBitY;
1217:uCOSII/Source/os_core.c ****     }
1218:uCOSII/Source/os_core.c ****     ptcb->OSTCBEventPtr     = (OS_EVENT  *)0;               /* Unlink OS_EVENT from OS_TCB         
1219:uCOSII/Source/os_core.c **** }
1220:uCOSII/Source/os_core.c **** #endif
1221:uCOSII/Source/os_core.c **** /*$PAGE*/
1222:uCOSII/Source/os_core.c **** /*
1223:uCOSII/Source/os_core.c **** ***************************************************************************************************
1224:uCOSII/Source/os_core.c **** *                             REMOVE TASK FROM MULTIPLE EVENTS WAIT LISTS
1225:uCOSII/Source/os_core.c **** *
1226:uCOSII/Source/os_core.c **** * Description: Remove a task from multiple events' wait lists.
1227:uCOSII/Source/os_core.c **** *
1228:uCOSII/Source/os_core.c **** * Arguments  : ptcb             is a pointer to the task to remove.
ARM GAS  /tmp/ccxgEmFy.s 			page 23


1229:uCOSII/Source/os_core.c **** *
1230:uCOSII/Source/os_core.c **** *              pevents_multi    is a pointer to the array of event control blocks, NULL-terminated.
1231:uCOSII/Source/os_core.c **** *
1232:uCOSII/Source/os_core.c **** * Returns    : none
1233:uCOSII/Source/os_core.c **** *
1234:uCOSII/Source/os_core.c **** * Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
1235:uCOSII/Source/os_core.c **** ***************************************************************************************************
1236:uCOSII/Source/os_core.c **** */
1237:uCOSII/Source/os_core.c **** #if ((OS_EVENT_EN) && (OS_EVENT_MULTI_EN > 0u))
1238:uCOSII/Source/os_core.c **** void  OS_EventTaskRemoveMulti (OS_TCB    *ptcb,
1239:uCOSII/Source/os_core.c ****                                OS_EVENT **pevents_multi)
1240:uCOSII/Source/os_core.c **** {
1241:uCOSII/Source/os_core.c ****     OS_EVENT **pevents;
1242:uCOSII/Source/os_core.c ****     OS_EVENT  *pevent;
1243:uCOSII/Source/os_core.c ****     INT8U      y;
1244:uCOSII/Source/os_core.c ****     OS_PRIO    bity;
1245:uCOSII/Source/os_core.c ****     OS_PRIO    bitx;
1246:uCOSII/Source/os_core.c **** 
1247:uCOSII/Source/os_core.c **** 
1248:uCOSII/Source/os_core.c ****     y       =  ptcb->OSTCBY;
1249:uCOSII/Source/os_core.c ****     bity    =  ptcb->OSTCBBitY;
1250:uCOSII/Source/os_core.c ****     bitx    =  ptcb->OSTCBBitX;
1251:uCOSII/Source/os_core.c ****     pevents =  pevents_multi;
1252:uCOSII/Source/os_core.c ****     pevent  = *pevents;
1253:uCOSII/Source/os_core.c ****     while (pevent != (OS_EVENT *)0) {                   /* Remove task from all events' wait lists 
1254:uCOSII/Source/os_core.c ****         pevent->OSEventTbl[y]  &= (OS_PRIO)~bitx;
1255:uCOSII/Source/os_core.c ****         if (pevent->OSEventTbl[y] == 0u) {
1256:uCOSII/Source/os_core.c ****             pevent->OSEventGrp &= (OS_PRIO)~bity;
1257:uCOSII/Source/os_core.c ****         }
1258:uCOSII/Source/os_core.c ****         pevents++;
1259:uCOSII/Source/os_core.c ****         pevent = *pevents;
1260:uCOSII/Source/os_core.c ****     }
1261:uCOSII/Source/os_core.c **** }
1262:uCOSII/Source/os_core.c **** #endif
1263:uCOSII/Source/os_core.c **** /*$PAGE*/
1264:uCOSII/Source/os_core.c **** /*
1265:uCOSII/Source/os_core.c **** ***************************************************************************************************
1266:uCOSII/Source/os_core.c **** *                             INITIALIZE EVENT CONTROL BLOCK'S WAIT LIST
1267:uCOSII/Source/os_core.c **** *
1268:uCOSII/Source/os_core.c **** * Description: This function is called by other uC/OS-II services to initialize the event wait list
1269:uCOSII/Source/os_core.c **** *
1270:uCOSII/Source/os_core.c **** * Arguments  : pevent    is a pointer to the event control block allocated to the event.
1271:uCOSII/Source/os_core.c **** *
1272:uCOSII/Source/os_core.c **** * Returns    : none
1273:uCOSII/Source/os_core.c **** *
1274:uCOSII/Source/os_core.c **** * Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
1275:uCOSII/Source/os_core.c **** ***************************************************************************************************
1276:uCOSII/Source/os_core.c **** */
1277:uCOSII/Source/os_core.c **** #if (OS_EVENT_EN)
1278:uCOSII/Source/os_core.c **** void  OS_EventWaitListInit (OS_EVENT *pevent)
1279:uCOSII/Source/os_core.c **** {
1280:uCOSII/Source/os_core.c ****     INT8U  i;
1281:uCOSII/Source/os_core.c **** 
1282:uCOSII/Source/os_core.c **** 
1283:uCOSII/Source/os_core.c ****     pevent->OSEventGrp = 0u;                     /* No task waiting on event                       
1284:uCOSII/Source/os_core.c ****     for (i = 0u; i < OS_EVENT_TBL_SIZE; i++) {
1285:uCOSII/Source/os_core.c ****         pevent->OSEventTbl[i] = 0u;
ARM GAS  /tmp/ccxgEmFy.s 			page 24


1286:uCOSII/Source/os_core.c ****     }
1287:uCOSII/Source/os_core.c **** }
1288:uCOSII/Source/os_core.c **** #endif
1289:uCOSII/Source/os_core.c **** /*$PAGE*/
1290:uCOSII/Source/os_core.c **** /*
1291:uCOSII/Source/os_core.c **** ***************************************************************************************************
1292:uCOSII/Source/os_core.c **** *                                             INITIALIZATION
1293:uCOSII/Source/os_core.c **** *                           INITIALIZE THE FREE LIST OF EVENT CONTROL BLOCKS
1294:uCOSII/Source/os_core.c **** *
1295:uCOSII/Source/os_core.c **** * Description: This function is called by OSInit() to initialize the free list of event control blo
1296:uCOSII/Source/os_core.c **** *
1297:uCOSII/Source/os_core.c **** * Arguments  : none
1298:uCOSII/Source/os_core.c **** *
1299:uCOSII/Source/os_core.c **** * Returns    : none
1300:uCOSII/Source/os_core.c **** ***************************************************************************************************
1301:uCOSII/Source/os_core.c **** */
1302:uCOSII/Source/os_core.c **** 
1303:uCOSII/Source/os_core.c **** static  void  OS_InitEventList (void)
1304:uCOSII/Source/os_core.c **** {
1305:uCOSII/Source/os_core.c **** #if (OS_EVENT_EN) && (OS_MAX_EVENTS > 0u)
1306:uCOSII/Source/os_core.c **** #if (OS_MAX_EVENTS > 1u)
1307:uCOSII/Source/os_core.c ****     INT16U     ix;
1308:uCOSII/Source/os_core.c ****     INT16U     ix_next;
1309:uCOSII/Source/os_core.c ****     OS_EVENT  *pevent1;
1310:uCOSII/Source/os_core.c ****     OS_EVENT  *pevent2;
1311:uCOSII/Source/os_core.c **** 
1312:uCOSII/Source/os_core.c **** 
1313:uCOSII/Source/os_core.c ****     OS_MemClr((INT8U *)&OSEventTbl[0], sizeof(OSEventTbl)); /* Clear the event table               
1314:uCOSII/Source/os_core.c ****     for (ix = 0u; ix < (OS_MAX_EVENTS - 1u); ix++) {        /* Init. list of free EVENT control blo
1315:uCOSII/Source/os_core.c ****         ix_next = ix + 1u;
1316:uCOSII/Source/os_core.c ****         pevent1 = &OSEventTbl[ix];
1317:uCOSII/Source/os_core.c ****         pevent2 = &OSEventTbl[ix_next];
1318:uCOSII/Source/os_core.c ****         pevent1->OSEventType    = OS_EVENT_TYPE_UNUSED;
1319:uCOSII/Source/os_core.c ****         pevent1->OSEventPtr     = pevent2;
1320:uCOSII/Source/os_core.c **** #if OS_EVENT_NAME_EN > 0u
1321:uCOSII/Source/os_core.c ****         pevent1->OSEventName    = (INT8U *)(void *)"?";     /* Unknown name                        
1322:uCOSII/Source/os_core.c **** #endif
1323:uCOSII/Source/os_core.c ****     }
1324:uCOSII/Source/os_core.c ****     pevent1                         = &OSEventTbl[ix];
1325:uCOSII/Source/os_core.c ****     pevent1->OSEventType            = OS_EVENT_TYPE_UNUSED;
1326:uCOSII/Source/os_core.c ****     pevent1->OSEventPtr             = (OS_EVENT *)0;
1327:uCOSII/Source/os_core.c **** #if OS_EVENT_NAME_EN > 0u
1328:uCOSII/Source/os_core.c ****     pevent1->OSEventName            = (INT8U *)(void *)"?"; /* Unknown name                        
1329:uCOSII/Source/os_core.c **** #endif
1330:uCOSII/Source/os_core.c ****     OSEventFreeList                 = &OSEventTbl[0];
1331:uCOSII/Source/os_core.c **** #else
1332:uCOSII/Source/os_core.c ****     OSEventFreeList                 = &OSEventTbl[0];       /* Only have ONE event control block   
1333:uCOSII/Source/os_core.c ****     OSEventFreeList->OSEventType    = OS_EVENT_TYPE_UNUSED;
1334:uCOSII/Source/os_core.c ****     OSEventFreeList->OSEventPtr     = (OS_EVENT *)0;
1335:uCOSII/Source/os_core.c **** #if OS_EVENT_NAME_EN > 0u
1336:uCOSII/Source/os_core.c ****     OSEventFreeList->OSEventName    = (INT8U *)"?";         /* Unknown name                        
1337:uCOSII/Source/os_core.c **** #endif
1338:uCOSII/Source/os_core.c **** #endif
1339:uCOSII/Source/os_core.c **** #endif
1340:uCOSII/Source/os_core.c **** }
1341:uCOSII/Source/os_core.c **** /*$PAGE*/
1342:uCOSII/Source/os_core.c **** /*
ARM GAS  /tmp/ccxgEmFy.s 			page 25


1343:uCOSII/Source/os_core.c **** ***************************************************************************************************
1344:uCOSII/Source/os_core.c **** *                                             INITIALIZATION
1345:uCOSII/Source/os_core.c **** *                                    INITIALIZE MISCELLANEOUS VARIABLES
1346:uCOSII/Source/os_core.c **** *
1347:uCOSII/Source/os_core.c **** * Description: This function is called by OSInit() to initialize miscellaneous variables.
1348:uCOSII/Source/os_core.c **** *
1349:uCOSII/Source/os_core.c **** * Arguments  : none
1350:uCOSII/Source/os_core.c **** *
1351:uCOSII/Source/os_core.c **** * Returns    : none
1352:uCOSII/Source/os_core.c **** ***************************************************************************************************
1353:uCOSII/Source/os_core.c **** */
1354:uCOSII/Source/os_core.c **** 
1355:uCOSII/Source/os_core.c **** static  void  OS_InitMisc (void)
1356:uCOSII/Source/os_core.c **** {
  28              		.loc 1 1356 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
1357:uCOSII/Source/os_core.c **** #if OS_TIME_GET_SET_EN > 0u
1358:uCOSII/Source/os_core.c ****     OSTime                    = 0uL;                       /* Clear the 32-bit system clock        
  33              		.loc 1 1358 5 view .LVU1
  34              		.loc 1 1358 31 is_stmt 0 view .LVU2
  35 0000 0023     		movs	r3, #0
  36 0002 0B4A     		ldr	r2, .L2
  37 0004 1360     		str	r3, [r2]
1359:uCOSII/Source/os_core.c **** #endif
1360:uCOSII/Source/os_core.c **** 
1361:uCOSII/Source/os_core.c ****     OSIntNesting              = 0u;                        /* Clear the interrupt nesting counter  
  38              		.loc 1 1361 5 is_stmt 1 view .LVU3
  39              		.loc 1 1361 31 is_stmt 0 view .LVU4
  40 0006 0B4A     		ldr	r2, .L2+4
  41 0008 1370     		strb	r3, [r2]
1362:uCOSII/Source/os_core.c ****     OSLockNesting             = 0u;                        /* Clear the scheduling lock counter    
  42              		.loc 1 1362 5 is_stmt 1 view .LVU5
  43              		.loc 1 1362 31 is_stmt 0 view .LVU6
  44 000a 0B4A     		ldr	r2, .L2+8
  45 000c 1370     		strb	r3, [r2]
1363:uCOSII/Source/os_core.c **** 
1364:uCOSII/Source/os_core.c ****     OSTaskCtr                 = 0u;                        /* Clear the number of tasks            
  46              		.loc 1 1364 5 is_stmt 1 view .LVU7
  47              		.loc 1 1364 31 is_stmt 0 view .LVU8
  48 000e 0B4A     		ldr	r2, .L2+12
  49 0010 1370     		strb	r3, [r2]
1365:uCOSII/Source/os_core.c **** 
1366:uCOSII/Source/os_core.c ****     OSRunning                 = OS_FALSE;                  /* Indicate that multitasking not starte
  50              		.loc 1 1366 5 is_stmt 1 view .LVU9
  51              		.loc 1 1366 31 is_stmt 0 view .LVU10
  52 0012 0B4A     		ldr	r2, .L2+16
  53 0014 1370     		strb	r3, [r2]
1367:uCOSII/Source/os_core.c **** 
1368:uCOSII/Source/os_core.c ****     OSCtxSwCtr                = 0u;                        /* Clear the context switch counter     
  54              		.loc 1 1368 5 is_stmt 1 view .LVU11
  55              		.loc 1 1368 31 is_stmt 0 view .LVU12
  56 0016 0B4A     		ldr	r2, .L2+20
  57 0018 1360     		str	r3, [r2]
1369:uCOSII/Source/os_core.c ****     OSIdleCtr                 = 0uL;                       /* Clear the 32-bit idle counter        
ARM GAS  /tmp/ccxgEmFy.s 			page 26


  58              		.loc 1 1369 5 is_stmt 1 view .LVU13
  59              		.loc 1 1369 31 is_stmt 0 view .LVU14
  60 001a 0B4A     		ldr	r2, .L2+24
  61 001c 1360     		str	r3, [r2]
1370:uCOSII/Source/os_core.c **** 
1371:uCOSII/Source/os_core.c **** #if OS_TASK_STAT_EN > 0u
1372:uCOSII/Source/os_core.c ****     OSIdleCtrRun              = 0uL;
  62              		.loc 1 1372 5 is_stmt 1 view .LVU15
  63              		.loc 1 1372 31 is_stmt 0 view .LVU16
  64 001e 0B4A     		ldr	r2, .L2+28
  65 0020 1360     		str	r3, [r2]
1373:uCOSII/Source/os_core.c ****     OSIdleCtrMax              = 0uL;
  66              		.loc 1 1373 5 is_stmt 1 view .LVU17
  67              		.loc 1 1373 31 is_stmt 0 view .LVU18
  68 0022 0B4A     		ldr	r2, .L2+32
  69 0024 1360     		str	r3, [r2]
1374:uCOSII/Source/os_core.c ****     OSStatRdy                 = OS_FALSE;                  /* Statistic task is not ready          
  70              		.loc 1 1374 5 is_stmt 1 view .LVU19
  71              		.loc 1 1374 31 is_stmt 0 view .LVU20
  72 0026 0B4A     		ldr	r2, .L2+36
  73 0028 1370     		strb	r3, [r2]
1375:uCOSII/Source/os_core.c **** #endif
1376:uCOSII/Source/os_core.c **** 
1377:uCOSII/Source/os_core.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
1378:uCOSII/Source/os_core.c ****     OSSafetyCriticalStartFlag = OS_FALSE;                  /* Still allow creation of objects      
1379:uCOSII/Source/os_core.c **** #endif
1380:uCOSII/Source/os_core.c **** 
1381:uCOSII/Source/os_core.c **** #if OS_TASK_REG_TBL_SIZE > 0u
1382:uCOSII/Source/os_core.c ****     OSTaskRegNextAvailID      = 0u;                        /* Initialize the task register ID      
  74              		.loc 1 1382 5 is_stmt 1 view .LVU21
  75              		.loc 1 1382 31 is_stmt 0 view .LVU22
  76 002a 0B4A     		ldr	r2, .L2+40
  77 002c 1370     		strb	r3, [r2]
1383:uCOSII/Source/os_core.c **** #endif
1384:uCOSII/Source/os_core.c **** }
  78              		.loc 1 1384 1 view .LVU23
  79 002e 7047     		bx	lr
  80              	.L3:
  81              		.align	2
  82              	.L2:
  83 0030 00000000 		.word	OSTime
  84 0034 00000000 		.word	OSIntNesting
  85 0038 00000000 		.word	OSLockNesting
  86 003c 00000000 		.word	OSTaskCtr
  87 0040 00000000 		.word	OSRunning
  88 0044 00000000 		.word	OSCtxSwCtr
  89 0048 00000000 		.word	OSIdleCtr
  90 004c 00000000 		.word	OSIdleCtrRun
  91 0050 00000000 		.word	OSIdleCtrMax
  92 0054 00000000 		.word	OSStatRdy
  93 0058 00000000 		.word	OSTaskRegNextAvailID
  94              		.cfi_endproc
  95              	.LFE20:
  97              		.section	.text.OS_InitRdyList,"ax",%progbits
  98              		.align	1
  99              		.syntax unified
 100              		.thumb
ARM GAS  /tmp/ccxgEmFy.s 			page 27


 101              		.thumb_func
 102              		.fpu fpv4-sp-d16
 104              	OS_InitRdyList:
 105              	.LFB21:
1385:uCOSII/Source/os_core.c **** /*$PAGE*/
1386:uCOSII/Source/os_core.c **** /*
1387:uCOSII/Source/os_core.c **** ***************************************************************************************************
1388:uCOSII/Source/os_core.c **** *                                             INITIALIZATION
1389:uCOSII/Source/os_core.c **** *                                       INITIALIZE THE READY LIST
1390:uCOSII/Source/os_core.c **** *
1391:uCOSII/Source/os_core.c **** * Description: This function is called by OSInit() to initialize the Ready List.
1392:uCOSII/Source/os_core.c **** *
1393:uCOSII/Source/os_core.c **** * Arguments  : none
1394:uCOSII/Source/os_core.c **** *
1395:uCOSII/Source/os_core.c **** * Returns    : none
1396:uCOSII/Source/os_core.c **** ***************************************************************************************************
1397:uCOSII/Source/os_core.c **** */
1398:uCOSII/Source/os_core.c **** 
1399:uCOSII/Source/os_core.c **** static  void  OS_InitRdyList (void)
1400:uCOSII/Source/os_core.c **** {
 106              		.loc 1 1400 1 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		@ link register save eliminated.
1401:uCOSII/Source/os_core.c ****     INT8U  i;
 111              		.loc 1 1401 5 view .LVU25
1402:uCOSII/Source/os_core.c **** 
1403:uCOSII/Source/os_core.c **** 
1404:uCOSII/Source/os_core.c ****     OSRdyGrp      = 0u;                                    /* Clear the ready list                 
 112              		.loc 1 1404 5 view .LVU26
 113              		.loc 1 1404 19 is_stmt 0 view .LVU27
 114 0000 0023     		movs	r3, #0
 115 0002 0A4A     		ldr	r2, .L7
 116 0004 1370     		strb	r3, [r2]
1405:uCOSII/Source/os_core.c ****     for (i = 0u; i < OS_RDY_TBL_SIZE; i++) {
 117              		.loc 1 1405 5 is_stmt 1 view .LVU28
 118              	.LVL0:
 119              		.loc 1 1405 5 is_stmt 0 view .LVU29
 120 0006 04E0     		b	.L5
 121              	.LVL1:
 122              	.L6:
1406:uCOSII/Source/os_core.c ****         OSRdyTbl[i] = 0u;
 123              		.loc 1 1406 9 is_stmt 1 discriminator 3 view .LVU30
 124              		.loc 1 1406 21 is_stmt 0 discriminator 3 view .LVU31
 125 0008 094A     		ldr	r2, .L7+4
 126 000a 0021     		movs	r1, #0
 127 000c D154     		strb	r1, [r2, r3]
1405:uCOSII/Source/os_core.c ****     for (i = 0u; i < OS_RDY_TBL_SIZE; i++) {
 128              		.loc 1 1405 39 is_stmt 1 discriminator 3 view .LVU32
1405:uCOSII/Source/os_core.c ****     for (i = 0u; i < OS_RDY_TBL_SIZE; i++) {
 129              		.loc 1 1405 40 is_stmt 0 discriminator 3 view .LVU33
 130 000e 0133     		adds	r3, r3, #1
 131              	.LVL2:
1405:uCOSII/Source/os_core.c ****     for (i = 0u; i < OS_RDY_TBL_SIZE; i++) {
 132              		.loc 1 1405 40 discriminator 3 view .LVU34
 133 0010 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccxgEmFy.s 			page 28


 134              	.LVL3:
 135              	.L5:
1405:uCOSII/Source/os_core.c ****     for (i = 0u; i < OS_RDY_TBL_SIZE; i++) {
 136              		.loc 1 1405 18 is_stmt 1 discriminator 1 view .LVU35
1405:uCOSII/Source/os_core.c ****     for (i = 0u; i < OS_RDY_TBL_SIZE; i++) {
 137              		.loc 1 1405 5 is_stmt 0 discriminator 1 view .LVU36
 138 0012 072B     		cmp	r3, #7
 139 0014 F8D9     		bls	.L6
1407:uCOSII/Source/os_core.c ****     }
1408:uCOSII/Source/os_core.c **** 
1409:uCOSII/Source/os_core.c ****     OSPrioCur     = 0u;
 140              		.loc 1 1409 5 is_stmt 1 view .LVU37
 141              		.loc 1 1409 19 is_stmt 0 view .LVU38
 142 0016 0023     		movs	r3, #0
 143              	.LVL4:
 144              		.loc 1 1409 19 view .LVU39
 145 0018 064A     		ldr	r2, .L7+8
 146 001a 1370     		strb	r3, [r2]
1410:uCOSII/Source/os_core.c ****     OSPrioHighRdy = 0u;
 147              		.loc 1 1410 5 is_stmt 1 view .LVU40
 148              		.loc 1 1410 19 is_stmt 0 view .LVU41
 149 001c 064A     		ldr	r2, .L7+12
 150 001e 1370     		strb	r3, [r2]
1411:uCOSII/Source/os_core.c **** 
1412:uCOSII/Source/os_core.c ****     OSTCBHighRdy  = (OS_TCB *)0;
 151              		.loc 1 1412 5 is_stmt 1 view .LVU42
 152              		.loc 1 1412 19 is_stmt 0 view .LVU43
 153 0020 064A     		ldr	r2, .L7+16
 154 0022 1360     		str	r3, [r2]
1413:uCOSII/Source/os_core.c ****     OSTCBCur      = (OS_TCB *)0;
 155              		.loc 1 1413 5 is_stmt 1 view .LVU44
 156              		.loc 1 1413 19 is_stmt 0 view .LVU45
 157 0024 064A     		ldr	r2, .L7+20
 158 0026 1360     		str	r3, [r2]
1414:uCOSII/Source/os_core.c **** }
 159              		.loc 1 1414 1 view .LVU46
 160 0028 7047     		bx	lr
 161              	.L8:
 162 002a 00BF     		.align	2
 163              	.L7:
 164 002c 00000000 		.word	OSRdyGrp
 165 0030 00000000 		.word	OSRdyTbl
 166 0034 00000000 		.word	OSPrioCur
 167 0038 00000000 		.word	OSPrioHighRdy
 168 003c 00000000 		.word	OSTCBHighRdy
 169 0040 00000000 		.word	OSTCBCur
 170              		.cfi_endproc
 171              	.LFE21:
 173              		.section	.text.OS_SchedNew,"ax",%progbits
 174              		.align	1
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu fpv4-sp-d16
 180              	OS_SchedNew:
 181              	.LFB28:
1415:uCOSII/Source/os_core.c **** 
ARM GAS  /tmp/ccxgEmFy.s 			page 29


1416:uCOSII/Source/os_core.c **** /*$PAGE*/
1417:uCOSII/Source/os_core.c **** /*
1418:uCOSII/Source/os_core.c **** ***************************************************************************************************
1419:uCOSII/Source/os_core.c **** *                                             INITIALIZATION
1420:uCOSII/Source/os_core.c **** *                                         CREATING THE IDLE TASK
1421:uCOSII/Source/os_core.c **** *
1422:uCOSII/Source/os_core.c **** * Description: This function creates the Idle Task.
1423:uCOSII/Source/os_core.c **** *
1424:uCOSII/Source/os_core.c **** * Arguments  : none
1425:uCOSII/Source/os_core.c **** *
1426:uCOSII/Source/os_core.c **** * Returns    : none
1427:uCOSII/Source/os_core.c **** ***************************************************************************************************
1428:uCOSII/Source/os_core.c **** */
1429:uCOSII/Source/os_core.c **** 
1430:uCOSII/Source/os_core.c **** static  void  OS_InitTaskIdle (void)
1431:uCOSII/Source/os_core.c **** {
1432:uCOSII/Source/os_core.c **** #if OS_TASK_NAME_EN > 0u
1433:uCOSII/Source/os_core.c ****     INT8U  err;
1434:uCOSII/Source/os_core.c **** #endif
1435:uCOSII/Source/os_core.c **** 
1436:uCOSII/Source/os_core.c **** 
1437:uCOSII/Source/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
1438:uCOSII/Source/os_core.c ****     #if OS_STK_GROWTH == 1u
1439:uCOSII/Source/os_core.c ****     (void)OSTaskCreateExt(OS_TaskIdle,
1440:uCOSII/Source/os_core.c ****                           (void *)0,                                 /* No arguments passed to OS_T
1441:uCOSII/Source/os_core.c ****                           &OSTaskIdleStk[OS_TASK_IDLE_STK_SIZE - 1u],/* Set Top-Of-Stack           
1442:uCOSII/Source/os_core.c ****                           OS_TASK_IDLE_PRIO,                         /* Lowest priority level      
1443:uCOSII/Source/os_core.c ****                           OS_TASK_IDLE_ID,
1444:uCOSII/Source/os_core.c ****                           &OSTaskIdleStk[0],                         /* Set Bottom-Of-Stack        
1445:uCOSII/Source/os_core.c ****                           OS_TASK_IDLE_STK_SIZE,
1446:uCOSII/Source/os_core.c ****                           (void *)0,                                 /* No TCB extension           
1447:uCOSII/Source/os_core.c ****                           OS_TASK_OPT_STK_CHK | OS_TASK_OPT_STK_CLR);/* Enable stack checking + cle
1448:uCOSII/Source/os_core.c ****     #else
1449:uCOSII/Source/os_core.c ****     (void)OSTaskCreateExt(OS_TaskIdle,
1450:uCOSII/Source/os_core.c ****                           (void *)0,                                 /* No arguments passed to OS_T
1451:uCOSII/Source/os_core.c ****                           &OSTaskIdleStk[0],                         /* Set Top-Of-Stack           
1452:uCOSII/Source/os_core.c ****                           OS_TASK_IDLE_PRIO,                         /* Lowest priority level      
1453:uCOSII/Source/os_core.c ****                           OS_TASK_IDLE_ID,
1454:uCOSII/Source/os_core.c ****                           &OSTaskIdleStk[OS_TASK_IDLE_STK_SIZE - 1u],/* Set Bottom-Of-Stack        
1455:uCOSII/Source/os_core.c ****                           OS_TASK_IDLE_STK_SIZE,
1456:uCOSII/Source/os_core.c ****                           (void *)0,                                 /* No TCB extension           
1457:uCOSII/Source/os_core.c ****                           OS_TASK_OPT_STK_CHK | OS_TASK_OPT_STK_CLR);/* Enable stack checking + cle
1458:uCOSII/Source/os_core.c ****     #endif
1459:uCOSII/Source/os_core.c **** #else
1460:uCOSII/Source/os_core.c ****     #if OS_STK_GROWTH == 1u
1461:uCOSII/Source/os_core.c ****     (void)OSTaskCreate(OS_TaskIdle,
1462:uCOSII/Source/os_core.c ****                        (void *)0,
1463:uCOSII/Source/os_core.c ****                        &OSTaskIdleStk[OS_TASK_IDLE_STK_SIZE - 1u],
1464:uCOSII/Source/os_core.c ****                        OS_TASK_IDLE_PRIO);
1465:uCOSII/Source/os_core.c ****     #else
1466:uCOSII/Source/os_core.c ****     (void)OSTaskCreate(OS_TaskIdle,
1467:uCOSII/Source/os_core.c ****                        (void *)0,
1468:uCOSII/Source/os_core.c ****                        &OSTaskIdleStk[0],
1469:uCOSII/Source/os_core.c ****                        OS_TASK_IDLE_PRIO);
1470:uCOSII/Source/os_core.c ****     #endif
1471:uCOSII/Source/os_core.c **** #endif
1472:uCOSII/Source/os_core.c **** 
ARM GAS  /tmp/ccxgEmFy.s 			page 30


1473:uCOSII/Source/os_core.c **** #if OS_TASK_NAME_EN > 0u
1474:uCOSII/Source/os_core.c ****     OSTaskNameSet(OS_TASK_IDLE_PRIO, (INT8U *)(void *)"uC/OS-II Idle", &err);
1475:uCOSII/Source/os_core.c **** #endif
1476:uCOSII/Source/os_core.c **** }
1477:uCOSII/Source/os_core.c **** /*$PAGE*/
1478:uCOSII/Source/os_core.c **** /*
1479:uCOSII/Source/os_core.c **** ***************************************************************************************************
1480:uCOSII/Source/os_core.c **** *                                             INITIALIZATION
1481:uCOSII/Source/os_core.c **** *                                      CREATING THE STATISTIC TASK
1482:uCOSII/Source/os_core.c **** *
1483:uCOSII/Source/os_core.c **** * Description: This function creates the Statistic Task.
1484:uCOSII/Source/os_core.c **** *
1485:uCOSII/Source/os_core.c **** * Arguments  : none
1486:uCOSII/Source/os_core.c **** *
1487:uCOSII/Source/os_core.c **** * Returns    : none
1488:uCOSII/Source/os_core.c **** ***************************************************************************************************
1489:uCOSII/Source/os_core.c **** */
1490:uCOSII/Source/os_core.c **** 
1491:uCOSII/Source/os_core.c **** #if OS_TASK_STAT_EN > 0u
1492:uCOSII/Source/os_core.c **** static  void  OS_InitTaskStat (void)
1493:uCOSII/Source/os_core.c **** {
1494:uCOSII/Source/os_core.c **** #if OS_TASK_NAME_EN > 0u
1495:uCOSII/Source/os_core.c ****     INT8U  err;
1496:uCOSII/Source/os_core.c **** #endif
1497:uCOSII/Source/os_core.c **** 
1498:uCOSII/Source/os_core.c **** 
1499:uCOSII/Source/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
1500:uCOSII/Source/os_core.c ****     #if OS_STK_GROWTH == 1u
1501:uCOSII/Source/os_core.c ****     (void)OSTaskCreateExt(OS_TaskStat,
1502:uCOSII/Source/os_core.c ****                           (void *)0,                                   /* No args passed to OS_Task
1503:uCOSII/Source/os_core.c ****                           &OSTaskStatStk[OS_TASK_STAT_STK_SIZE - 1u],  /* Set Top-Of-Stack         
1504:uCOSII/Source/os_core.c ****                           OS_TASK_STAT_PRIO,                           /* One higher than the idle 
1505:uCOSII/Source/os_core.c ****                           OS_TASK_STAT_ID,
1506:uCOSII/Source/os_core.c ****                           &OSTaskStatStk[0],                           /* Set Bottom-Of-Stack      
1507:uCOSII/Source/os_core.c ****                           OS_TASK_STAT_STK_SIZE,
1508:uCOSII/Source/os_core.c ****                           (void *)0,                                   /* No TCB extension         
1509:uCOSII/Source/os_core.c ****                           OS_TASK_OPT_STK_CHK | OS_TASK_OPT_STK_CLR);  /* Enable stack checking + c
1510:uCOSII/Source/os_core.c ****     #else
1511:uCOSII/Source/os_core.c ****     (void)OSTaskCreateExt(OS_TaskStat,
1512:uCOSII/Source/os_core.c ****                           (void *)0,                                   /* No args passed to OS_Task
1513:uCOSII/Source/os_core.c ****                           &OSTaskStatStk[0],                           /* Set Top-Of-Stack         
1514:uCOSII/Source/os_core.c ****                           OS_TASK_STAT_PRIO,                           /* One higher than the idle 
1515:uCOSII/Source/os_core.c ****                           OS_TASK_STAT_ID,
1516:uCOSII/Source/os_core.c ****                           &OSTaskStatStk[OS_TASK_STAT_STK_SIZE - 1u],  /* Set Bottom-Of-Stack      
1517:uCOSII/Source/os_core.c ****                           OS_TASK_STAT_STK_SIZE,
1518:uCOSII/Source/os_core.c ****                           (void *)0,                                   /* No TCB extension         
1519:uCOSII/Source/os_core.c ****                           OS_TASK_OPT_STK_CHK | OS_TASK_OPT_STK_CLR);  /* Enable stack checking + c
1520:uCOSII/Source/os_core.c ****     #endif
1521:uCOSII/Source/os_core.c **** #else
1522:uCOSII/Source/os_core.c ****     #if OS_STK_GROWTH == 1u
1523:uCOSII/Source/os_core.c ****     (void)OSTaskCreate(OS_TaskStat,
1524:uCOSII/Source/os_core.c ****                        (void *)0,                                      /* No args passed to OS_Task
1525:uCOSII/Source/os_core.c ****                        &OSTaskStatStk[OS_TASK_STAT_STK_SIZE - 1u],     /* Set Top-Of-Stack         
1526:uCOSII/Source/os_core.c ****                        OS_TASK_STAT_PRIO);                             /* One higher than the idle 
1527:uCOSII/Source/os_core.c ****     #else
1528:uCOSII/Source/os_core.c ****     (void)OSTaskCreate(OS_TaskStat,
1529:uCOSII/Source/os_core.c ****                        (void *)0,                                      /* No args passed to OS_Task
ARM GAS  /tmp/ccxgEmFy.s 			page 31


1530:uCOSII/Source/os_core.c ****                        &OSTaskStatStk[0],                              /* Set Top-Of-Stack         
1531:uCOSII/Source/os_core.c ****                        OS_TASK_STAT_PRIO);                             /* One higher than the idle 
1532:uCOSII/Source/os_core.c ****     #endif
1533:uCOSII/Source/os_core.c **** #endif
1534:uCOSII/Source/os_core.c **** 
1535:uCOSII/Source/os_core.c **** #if OS_TASK_NAME_EN > 0u
1536:uCOSII/Source/os_core.c ****     OSTaskNameSet(OS_TASK_STAT_PRIO, (INT8U *)(void *)"uC/OS-II Stat", &err);
1537:uCOSII/Source/os_core.c **** #endif
1538:uCOSII/Source/os_core.c **** }
1539:uCOSII/Source/os_core.c **** #endif
1540:uCOSII/Source/os_core.c **** /*$PAGE*/
1541:uCOSII/Source/os_core.c **** /*
1542:uCOSII/Source/os_core.c **** ***************************************************************************************************
1543:uCOSII/Source/os_core.c **** *                                             INITIALIZATION
1544:uCOSII/Source/os_core.c **** *                            INITIALIZE THE FREE LIST OF TASK CONTROL BLOCKS
1545:uCOSII/Source/os_core.c **** *
1546:uCOSII/Source/os_core.c **** * Description: This function is called by OSInit() to initialize the free list of OS_TCBs.
1547:uCOSII/Source/os_core.c **** *
1548:uCOSII/Source/os_core.c **** * Arguments  : none
1549:uCOSII/Source/os_core.c **** *
1550:uCOSII/Source/os_core.c **** * Returns    : none
1551:uCOSII/Source/os_core.c **** ***************************************************************************************************
1552:uCOSII/Source/os_core.c **** */
1553:uCOSII/Source/os_core.c **** 
1554:uCOSII/Source/os_core.c **** static  void  OS_InitTCBList (void)
1555:uCOSII/Source/os_core.c **** {
1556:uCOSII/Source/os_core.c ****     INT8U    ix;
1557:uCOSII/Source/os_core.c ****     INT8U    ix_next;
1558:uCOSII/Source/os_core.c ****     OS_TCB  *ptcb1;
1559:uCOSII/Source/os_core.c ****     OS_TCB  *ptcb2;
1560:uCOSII/Source/os_core.c **** 
1561:uCOSII/Source/os_core.c **** 
1562:uCOSII/Source/os_core.c ****     OS_MemClr((INT8U *)&OSTCBTbl[0],     sizeof(OSTCBTbl));      /* Clear all the TCBs             
1563:uCOSII/Source/os_core.c ****     OS_MemClr((INT8U *)&OSTCBPrioTbl[0], sizeof(OSTCBPrioTbl));  /* Clear the priority table       
1564:uCOSII/Source/os_core.c ****     for (ix = 0u; ix < (OS_MAX_TASKS + OS_N_SYS_TASKS - 1u); ix++) {    /* Init. list of free TCBs 
1565:uCOSII/Source/os_core.c ****         ix_next =  ix + 1u;
1566:uCOSII/Source/os_core.c ****         ptcb1   = &OSTCBTbl[ix];
1567:uCOSII/Source/os_core.c ****         ptcb2   = &OSTCBTbl[ix_next];
1568:uCOSII/Source/os_core.c ****         ptcb1->OSTCBNext = ptcb2;
1569:uCOSII/Source/os_core.c **** #if OS_TASK_NAME_EN > 0u
1570:uCOSII/Source/os_core.c ****         ptcb1->OSTCBTaskName = (INT8U *)(void *)"?";             /* Unknown name                   
1571:uCOSII/Source/os_core.c **** #endif
1572:uCOSII/Source/os_core.c ****     }
1573:uCOSII/Source/os_core.c ****     ptcb1                   = &OSTCBTbl[ix];
1574:uCOSII/Source/os_core.c ****     ptcb1->OSTCBNext        = (OS_TCB *)0;                       /* Last OS_TCB                    
1575:uCOSII/Source/os_core.c **** #if OS_TASK_NAME_EN > 0u
1576:uCOSII/Source/os_core.c ****     ptcb1->OSTCBTaskName    = (INT8U *)(void *)"?";              /* Unknown name                   
1577:uCOSII/Source/os_core.c **** #endif
1578:uCOSII/Source/os_core.c ****     OSTCBList               = (OS_TCB *)0;                       /* TCB lists initializations      
1579:uCOSII/Source/os_core.c ****     OSTCBFreeList           = &OSTCBTbl[0];
1580:uCOSII/Source/os_core.c **** }
1581:uCOSII/Source/os_core.c **** /*$PAGE*/
1582:uCOSII/Source/os_core.c **** /*
1583:uCOSII/Source/os_core.c **** ***************************************************************************************************
1584:uCOSII/Source/os_core.c **** *                                      CLEAR A SECTION OF MEMORY
1585:uCOSII/Source/os_core.c **** *
1586:uCOSII/Source/os_core.c **** * Description: This function is called by other uC/OS-II services to clear a contiguous block of RA
ARM GAS  /tmp/ccxgEmFy.s 			page 32


1587:uCOSII/Source/os_core.c **** *
1588:uCOSII/Source/os_core.c **** * Arguments  : pdest    is the start of the RAM to clear (i.e. write 0x00 to)
1589:uCOSII/Source/os_core.c **** *
1590:uCOSII/Source/os_core.c **** *              size     is the number of bytes to clear.
1591:uCOSII/Source/os_core.c **** *
1592:uCOSII/Source/os_core.c **** * Returns    : none
1593:uCOSII/Source/os_core.c **** *
1594:uCOSII/Source/os_core.c **** * Notes      : 1) This function is INTERNAL to uC/OS-II and your application should not call it.
1595:uCOSII/Source/os_core.c **** *              2) Note that we can only clear up to 64K bytes of RAM.  This is not an issue because
1596:uCOSII/Source/os_core.c **** *                 of the uses of this function gets close to this limit.
1597:uCOSII/Source/os_core.c **** *              3) The clear is done one byte at a time since this will work on any processor irresp
1598:uCOSII/Source/os_core.c **** *                 of the alignment of the destination.
1599:uCOSII/Source/os_core.c **** ***************************************************************************************************
1600:uCOSII/Source/os_core.c **** */
1601:uCOSII/Source/os_core.c **** 
1602:uCOSII/Source/os_core.c **** void  OS_MemClr (INT8U  *pdest,
1603:uCOSII/Source/os_core.c ****                  INT16U  size)
1604:uCOSII/Source/os_core.c **** {
1605:uCOSII/Source/os_core.c ****     while (size > 0u) {
1606:uCOSII/Source/os_core.c ****         *pdest++ = (INT8U)0;
1607:uCOSII/Source/os_core.c ****         size--;
1608:uCOSII/Source/os_core.c ****     }
1609:uCOSII/Source/os_core.c **** }
1610:uCOSII/Source/os_core.c **** /*$PAGE*/
1611:uCOSII/Source/os_core.c **** /*
1612:uCOSII/Source/os_core.c **** ***************************************************************************************************
1613:uCOSII/Source/os_core.c **** *                                       COPY A BLOCK OF MEMORY
1614:uCOSII/Source/os_core.c **** *
1615:uCOSII/Source/os_core.c **** * Description: This function is called by other uC/OS-II services to copy a block of memory from on
1616:uCOSII/Source/os_core.c **** *              location to another.
1617:uCOSII/Source/os_core.c **** *
1618:uCOSII/Source/os_core.c **** * Arguments  : pdest    is a pointer to the 'destination' memory block
1619:uCOSII/Source/os_core.c **** *
1620:uCOSII/Source/os_core.c **** *              psrc     is a pointer to the 'source'      memory block
1621:uCOSII/Source/os_core.c **** *
1622:uCOSII/Source/os_core.c **** *              size     is the number of bytes to copy.
1623:uCOSII/Source/os_core.c **** *
1624:uCOSII/Source/os_core.c **** * Returns    : none
1625:uCOSII/Source/os_core.c **** *
1626:uCOSII/Source/os_core.c **** * Notes      : 1) This function is INTERNAL to uC/OS-II and your application should not call it.  T
1627:uCOSII/Source/os_core.c **** *                 no provision to handle overlapping memory copy.  However, that's not a problem si
1628:uCOSII/Source/os_core.c **** *                 is not a situation that will happen.
1629:uCOSII/Source/os_core.c **** *              2) Note that we can only copy up to 64K bytes of RAM
1630:uCOSII/Source/os_core.c **** *              3) The copy is done one byte at a time since this will work on any processor irrespe
1631:uCOSII/Source/os_core.c **** *                 of the alignment of the source and destination.
1632:uCOSII/Source/os_core.c **** ***************************************************************************************************
1633:uCOSII/Source/os_core.c **** */
1634:uCOSII/Source/os_core.c **** 
1635:uCOSII/Source/os_core.c **** void  OS_MemCopy (INT8U  *pdest,
1636:uCOSII/Source/os_core.c ****                   INT8U  *psrc,
1637:uCOSII/Source/os_core.c ****                   INT16U  size)
1638:uCOSII/Source/os_core.c **** {
1639:uCOSII/Source/os_core.c ****     while (size > 0u) {
1640:uCOSII/Source/os_core.c ****         *pdest++ = *psrc++;
1641:uCOSII/Source/os_core.c ****         size--;
1642:uCOSII/Source/os_core.c ****     }
1643:uCOSII/Source/os_core.c **** }
ARM GAS  /tmp/ccxgEmFy.s 			page 33


1644:uCOSII/Source/os_core.c **** /*$PAGE*/
1645:uCOSII/Source/os_core.c **** /*
1646:uCOSII/Source/os_core.c **** ***************************************************************************************************
1647:uCOSII/Source/os_core.c **** *                                              SCHEDULER
1648:uCOSII/Source/os_core.c **** *
1649:uCOSII/Source/os_core.c **** * Description: This function is called by other uC/OS-II services to determine whether a new, high
1650:uCOSII/Source/os_core.c **** *              priority task has been made ready to run.  This function is invoked by TASK level co
1651:uCOSII/Source/os_core.c **** *              and is not used to reschedule tasks from ISRs (see OSIntExit() for ISR rescheduling)
1652:uCOSII/Source/os_core.c **** *
1653:uCOSII/Source/os_core.c **** * Arguments  : none
1654:uCOSII/Source/os_core.c **** *
1655:uCOSII/Source/os_core.c **** * Returns    : none
1656:uCOSII/Source/os_core.c **** *
1657:uCOSII/Source/os_core.c **** * Notes      : 1) This function is INTERNAL to uC/OS-II and your application should not call it.
1658:uCOSII/Source/os_core.c **** *              2) Rescheduling is prevented when the scheduler is locked (see OS_SchedLock())
1659:uCOSII/Source/os_core.c **** ***************************************************************************************************
1660:uCOSII/Source/os_core.c **** */
1661:uCOSII/Source/os_core.c **** 
1662:uCOSII/Source/os_core.c **** void  OS_Sched (void)
1663:uCOSII/Source/os_core.c **** {
1664:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                           /* Allocate storage for CPU status register 
1665:uCOSII/Source/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
1666:uCOSII/Source/os_core.c **** #endif
1667:uCOSII/Source/os_core.c **** 
1668:uCOSII/Source/os_core.c **** 
1669:uCOSII/Source/os_core.c **** 
1670:uCOSII/Source/os_core.c ****     OS_ENTER_CRITICAL();
1671:uCOSII/Source/os_core.c ****     if (OSIntNesting == 0u) {                          /* Schedule only if all ISRs done and ...   
1672:uCOSII/Source/os_core.c ****         if (OSLockNesting == 0u) {                     /* ... scheduler is not locked              
1673:uCOSII/Source/os_core.c ****             OS_SchedNew();
1674:uCOSII/Source/os_core.c ****             OSTCBHighRdy = OSTCBPrioTbl[OSPrioHighRdy];
1675:uCOSII/Source/os_core.c ****             if (OSPrioHighRdy != OSPrioCur) {          /* No Ctx Sw if current task is highest rdy 
1676:uCOSII/Source/os_core.c **** #if OS_TASK_PROFILE_EN > 0u
1677:uCOSII/Source/os_core.c ****                 OSTCBHighRdy->OSTCBCtxSwCtr++;         /* Inc. # of context switches to this task  
1678:uCOSII/Source/os_core.c **** #endif
1679:uCOSII/Source/os_core.c ****                 OSCtxSwCtr++;                          /* Increment context switch counter         
1680:uCOSII/Source/os_core.c **** 
1681:uCOSII/Source/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
1682:uCOSII/Source/os_core.c **** #if defined(OS_TLS_TBL_SIZE) && (OS_TLS_TBL_SIZE > 0u)
1683:uCOSII/Source/os_core.c ****                 OS_TLS_TaskSw();
1684:uCOSII/Source/os_core.c **** #endif
1685:uCOSII/Source/os_core.c **** #endif
1686:uCOSII/Source/os_core.c **** 
1687:uCOSII/Source/os_core.c ****                 OS_TASK_SW();                          /* Perform a context switch                 
1688:uCOSII/Source/os_core.c ****             }
1689:uCOSII/Source/os_core.c ****         }
1690:uCOSII/Source/os_core.c ****     }
1691:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
1692:uCOSII/Source/os_core.c **** }
1693:uCOSII/Source/os_core.c **** 
1694:uCOSII/Source/os_core.c **** 
1695:uCOSII/Source/os_core.c **** /*
1696:uCOSII/Source/os_core.c **** ***************************************************************************************************
1697:uCOSII/Source/os_core.c **** *                               FIND HIGHEST PRIORITY TASK READY TO RUN
1698:uCOSII/Source/os_core.c **** *
1699:uCOSII/Source/os_core.c **** * Description: This function is called by other uC/OS-II services to determine the highest priority
1700:uCOSII/Source/os_core.c **** *              that is ready to run.  The global variable 'OSPrioHighRdy' is changed accordingly.
ARM GAS  /tmp/ccxgEmFy.s 			page 34


1701:uCOSII/Source/os_core.c **** *
1702:uCOSII/Source/os_core.c **** * Arguments  : none
1703:uCOSII/Source/os_core.c **** *
1704:uCOSII/Source/os_core.c **** * Returns    : none
1705:uCOSII/Source/os_core.c **** *
1706:uCOSII/Source/os_core.c **** * Notes      : 1) This function is INTERNAL to uC/OS-II and your application should not call it.
1707:uCOSII/Source/os_core.c **** *              2) Interrupts are assumed to be disabled when this function is called.
1708:uCOSII/Source/os_core.c **** ***************************************************************************************************
1709:uCOSII/Source/os_core.c **** */
1710:uCOSII/Source/os_core.c **** 
1711:uCOSII/Source/os_core.c **** static  void  OS_SchedNew (void)
1712:uCOSII/Source/os_core.c **** {
 182              		.loc 1 1712 1 is_stmt 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
1713:uCOSII/Source/os_core.c **** #if OS_LOWEST_PRIO <= 63u                        /* See if we support up to 64 tasks               
1714:uCOSII/Source/os_core.c ****     INT8U   y;
 187              		.loc 1 1714 5 view .LVU48
1715:uCOSII/Source/os_core.c **** 
1716:uCOSII/Source/os_core.c **** 
1717:uCOSII/Source/os_core.c ****     y             = OSUnMapTbl[OSRdyGrp];
 188              		.loc 1 1717 5 view .LVU49
 189              		.loc 1 1717 31 is_stmt 0 view .LVU50
 190 0000 064B     		ldr	r3, .L10
 191 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 192              		.loc 1 1717 19 view .LVU51
 193 0004 064A     		ldr	r2, .L10+4
 194 0006 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 195              	.LVL5:
1718:uCOSII/Source/os_core.c ****     OSPrioHighRdy = (INT8U)((y << 3u) + OSUnMapTbl[OSRdyTbl[y]]);
 196              		.loc 1 1718 5 is_stmt 1 view .LVU52
 197              		.loc 1 1718 32 is_stmt 0 view .LVU53
 198 0008 CB00     		lsls	r3, r1, #3
 199 000a DBB2     		uxtb	r3, r3
 200              		.loc 1 1718 60 view .LVU54
 201 000c 0548     		ldr	r0, .L10+8
 202 000e 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 203              	.LVL6:
 204              		.loc 1 1718 51 view .LVU55
 205 0010 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 206              	.LVL7:
 207              		.loc 1 1718 21 view .LVU56
 208 0012 1344     		add	r3, r3, r2
 209              		.loc 1 1718 19 view .LVU57
 210 0014 044A     		ldr	r2, .L10+12
 211 0016 1370     		strb	r3, [r2]
1719:uCOSII/Source/os_core.c **** #else                                            /* We support up to 256 tasks                     
1720:uCOSII/Source/os_core.c ****     INT8U     y;
1721:uCOSII/Source/os_core.c ****     OS_PRIO  *ptbl;
1722:uCOSII/Source/os_core.c **** 
1723:uCOSII/Source/os_core.c **** 
1724:uCOSII/Source/os_core.c ****     if ((OSRdyGrp & 0xFFu) != 0u) {
1725:uCOSII/Source/os_core.c ****         y = OSUnMapTbl[OSRdyGrp & 0xFFu];
1726:uCOSII/Source/os_core.c ****     } else {
1727:uCOSII/Source/os_core.c ****         y = OSUnMapTbl[(OS_PRIO)(OSRdyGrp >> 8u) & 0xFFu] + 8u;
ARM GAS  /tmp/ccxgEmFy.s 			page 35


1728:uCOSII/Source/os_core.c ****     }
1729:uCOSII/Source/os_core.c ****     ptbl = &OSRdyTbl[y];
1730:uCOSII/Source/os_core.c ****     if ((*ptbl & 0xFFu) != 0u) {
1731:uCOSII/Source/os_core.c ****         OSPrioHighRdy = (INT8U)((y << 4u) + OSUnMapTbl[(*ptbl & 0xFFu)]);
1732:uCOSII/Source/os_core.c ****     } else {
1733:uCOSII/Source/os_core.c ****         OSPrioHighRdy = (INT8U)((y << 4u) + OSUnMapTbl[(OS_PRIO)(*ptbl >> 8u) & 0xFFu] + 8u);
1734:uCOSII/Source/os_core.c ****     }
1735:uCOSII/Source/os_core.c **** #endif
1736:uCOSII/Source/os_core.c **** }
 212              		.loc 1 1736 1 view .LVU58
 213 0018 7047     		bx	lr
 214              	.L11:
 215 001a 00BF     		.align	2
 216              	.L10:
 217 001c 00000000 		.word	OSRdyGrp
 218 0020 00000000 		.word	.LANCHOR0
 219 0024 00000000 		.word	OSRdyTbl
 220 0028 00000000 		.word	OSPrioHighRdy
 221              		.cfi_endproc
 222              	.LFE28:
 224              		.section	.rodata.OS_InitTaskIdle.str1.4,"aMS",%progbits,1
 225              		.align	2
 226              	.LC0:
 227 0000 75432F4F 		.ascii	"uC/OS-II Idle\000"
 227      532D4949 
 227      2049646C 
 227      6500
 228              		.section	.text.OS_InitTaskIdle,"ax",%progbits
 229              		.align	1
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu fpv4-sp-d16
 235              	OS_InitTaskIdle:
 236              	.LFB22:
1431:uCOSII/Source/os_core.c **** #if OS_TASK_NAME_EN > 0u
 237              		.loc 1 1431 1 is_stmt 1 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 8
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241 0000 00B5     		push	{lr}
 242              	.LCFI0:
 243              		.cfi_def_cfa_offset 4
 244              		.cfi_offset 14, -4
 245 0002 89B0     		sub	sp, sp, #36
 246              	.LCFI1:
 247              		.cfi_def_cfa_offset 40
1433:uCOSII/Source/os_core.c **** #endif
 248              		.loc 1 1433 5 view .LVU60
1439:uCOSII/Source/os_core.c ****                           (void *)0,                                 /* No arguments passed to OS_T
 249              		.loc 1 1439 5 view .LVU61
1439:uCOSII/Source/os_core.c ****                           (void *)0,                                 /* No arguments passed to OS_T
 250              		.loc 1 1439 11 is_stmt 0 view .LVU62
 251 0004 0C4A     		ldr	r2, .L14
 252 0006 0323     		movs	r3, #3
 253 0008 0493     		str	r3, [sp, #16]
 254 000a 0021     		movs	r1, #0
ARM GAS  /tmp/ccxgEmFy.s 			page 36


 255 000c 0391     		str	r1, [sp, #12]
 256 000e 8023     		movs	r3, #128
 257 0010 0293     		str	r3, [sp, #8]
 258 0012 A2F5FE73 		sub	r3, r2, #508
 259 0016 0193     		str	r3, [sp, #4]
 260 0018 4FF6FF73 		movw	r3, #65535
 261 001c 0093     		str	r3, [sp]
 262 001e 3F23     		movs	r3, #63
 263 0020 0648     		ldr	r0, .L14+4
 264 0022 FFF7FEFF 		bl	OSTaskCreateExt
 265              	.LVL8:
1474:uCOSII/Source/os_core.c **** #endif
 266              		.loc 1 1474 5 is_stmt 1 view .LVU63
 267 0026 0DF11F02 		add	r2, sp, #31
 268 002a 0549     		ldr	r1, .L14+8
 269 002c 3F20     		movs	r0, #63
 270 002e FFF7FEFF 		bl	OSTaskNameSet
 271              	.LVL9:
1476:uCOSII/Source/os_core.c **** /*$PAGE*/
 272              		.loc 1 1476 1 is_stmt 0 view .LVU64
 273 0032 09B0     		add	sp, sp, #36
 274              	.LCFI2:
 275              		.cfi_def_cfa_offset 4
 276              		@ sp needed
 277 0034 5DF804FB 		ldr	pc, [sp], #4
 278              	.L15:
 279              		.align	2
 280              	.L14:
 281 0038 FC010000 		.word	OSTaskIdleStk+508
 282 003c 00000000 		.word	OS_TaskIdle
 283 0040 00000000 		.word	.LC0
 284              		.cfi_endproc
 285              	.LFE22:
 287              		.section	.rodata.OS_InitTaskStat.str1.4,"aMS",%progbits,1
 288              		.align	2
 289              	.LC1:
 290 0000 75432F4F 		.ascii	"uC/OS-II Stat\000"
 290      532D4949 
 290      20537461 
 290      7400
 291              		.section	.text.OS_InitTaskStat,"ax",%progbits
 292              		.align	1
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu fpv4-sp-d16
 298              	OS_InitTaskStat:
 299              	.LFB23:
1493:uCOSII/Source/os_core.c **** #if OS_TASK_NAME_EN > 0u
 300              		.loc 1 1493 1 is_stmt 1 view -0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 8
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304 0000 00B5     		push	{lr}
 305              	.LCFI3:
 306              		.cfi_def_cfa_offset 4
 307              		.cfi_offset 14, -4
ARM GAS  /tmp/ccxgEmFy.s 			page 37


 308 0002 89B0     		sub	sp, sp, #36
 309              	.LCFI4:
 310              		.cfi_def_cfa_offset 40
1495:uCOSII/Source/os_core.c **** #endif
 311              		.loc 1 1495 5 view .LVU66
1501:uCOSII/Source/os_core.c ****                           (void *)0,                                   /* No args passed to OS_Task
 312              		.loc 1 1501 5 view .LVU67
1501:uCOSII/Source/os_core.c ****                           (void *)0,                                   /* No args passed to OS_Task
 313              		.loc 1 1501 11 is_stmt 0 view .LVU68
 314 0004 0C4A     		ldr	r2, .L18
 315 0006 0323     		movs	r3, #3
 316 0008 0493     		str	r3, [sp, #16]
 317 000a 0021     		movs	r1, #0
 318 000c 0391     		str	r1, [sp, #12]
 319 000e 8023     		movs	r3, #128
 320 0010 0293     		str	r3, [sp, #8]
 321 0012 A2F5FE73 		sub	r3, r2, #508
 322 0016 0193     		str	r3, [sp, #4]
 323 0018 4FF6FE73 		movw	r3, #65534
 324 001c 0093     		str	r3, [sp]
 325 001e 3E23     		movs	r3, #62
 326 0020 0648     		ldr	r0, .L18+4
 327 0022 FFF7FEFF 		bl	OSTaskCreateExt
 328              	.LVL10:
1536:uCOSII/Source/os_core.c **** #endif
 329              		.loc 1 1536 5 is_stmt 1 view .LVU69
 330 0026 0DF11F02 		add	r2, sp, #31
 331 002a 0549     		ldr	r1, .L18+8
 332 002c 3E20     		movs	r0, #62
 333 002e FFF7FEFF 		bl	OSTaskNameSet
 334              	.LVL11:
1538:uCOSII/Source/os_core.c **** #endif
 335              		.loc 1 1538 1 is_stmt 0 view .LVU70
 336 0032 09B0     		add	sp, sp, #36
 337              	.LCFI5:
 338              		.cfi_def_cfa_offset 4
 339              		@ sp needed
 340 0034 5DF804FB 		ldr	pc, [sp], #4
 341              	.L19:
 342              		.align	2
 343              	.L18:
 344 0038 FC010000 		.word	OSTaskStatStk+508
 345 003c 00000000 		.word	OS_TaskStat
 346 0040 00000000 		.word	.LC1
 347              		.cfi_endproc
 348              	.LFE23:
 350              		.section	.text.OS_TaskIdle,"ax",%progbits
 351              		.align	1
 352              		.global	OS_TaskIdle
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
 356              		.fpu fpv4-sp-d16
 358              	OS_TaskIdle:
 359              	.LFB30:
1737:uCOSII/Source/os_core.c **** 
1738:uCOSII/Source/os_core.c **** /*$PAGE*/
ARM GAS  /tmp/ccxgEmFy.s 			page 38


1739:uCOSII/Source/os_core.c **** /*
1740:uCOSII/Source/os_core.c **** ***************************************************************************************************
1741:uCOSII/Source/os_core.c **** *                               DETERMINE THE LENGTH OF AN ASCII STRING
1742:uCOSII/Source/os_core.c **** *
1743:uCOSII/Source/os_core.c **** * Description: This function is called by other uC/OS-II services to determine the size of an ASCII
1744:uCOSII/Source/os_core.c **** *              (excluding the NUL character).
1745:uCOSII/Source/os_core.c **** *
1746:uCOSII/Source/os_core.c **** * Arguments  : psrc     is a pointer to the string for which we need to know the size.
1747:uCOSII/Source/os_core.c **** *
1748:uCOSII/Source/os_core.c **** * Returns    : The size of the string (excluding the NUL terminating character)
1749:uCOSII/Source/os_core.c **** *
1750:uCOSII/Source/os_core.c **** * Notes      : 1) This function is INTERNAL to uC/OS-II and your application should not call it.
1751:uCOSII/Source/os_core.c **** *              2) The string to check must be less than 255 characters long.
1752:uCOSII/Source/os_core.c **** ***************************************************************************************************
1753:uCOSII/Source/os_core.c **** */
1754:uCOSII/Source/os_core.c **** 
1755:uCOSII/Source/os_core.c **** #if (OS_EVENT_NAME_EN > 0u) || (OS_FLAG_NAME_EN > 0u) || (OS_MEM_NAME_EN > 0u) || (OS_TASK_NAME_EN 
1756:uCOSII/Source/os_core.c **** INT8U  OS_StrLen (INT8U *psrc)
1757:uCOSII/Source/os_core.c **** {
1758:uCOSII/Source/os_core.c ****     INT8U  len;
1759:uCOSII/Source/os_core.c **** 
1760:uCOSII/Source/os_core.c **** 
1761:uCOSII/Source/os_core.c **** #if OS_ARG_CHK_EN > 0u
1762:uCOSII/Source/os_core.c ****     if (psrc == (INT8U *)0) {
1763:uCOSII/Source/os_core.c ****         return (0u);
1764:uCOSII/Source/os_core.c ****     }
1765:uCOSII/Source/os_core.c **** #endif
1766:uCOSII/Source/os_core.c **** 
1767:uCOSII/Source/os_core.c ****     len = 0u;
1768:uCOSII/Source/os_core.c ****     while (*psrc != OS_ASCII_NUL) {
1769:uCOSII/Source/os_core.c ****         psrc++;
1770:uCOSII/Source/os_core.c ****         len++;
1771:uCOSII/Source/os_core.c ****     }
1772:uCOSII/Source/os_core.c ****     return (len);
1773:uCOSII/Source/os_core.c **** }
1774:uCOSII/Source/os_core.c **** #endif
1775:uCOSII/Source/os_core.c **** /*$PAGE*/
1776:uCOSII/Source/os_core.c **** /*
1777:uCOSII/Source/os_core.c **** ***************************************************************************************************
1778:uCOSII/Source/os_core.c **** *                                              IDLE TASK
1779:uCOSII/Source/os_core.c **** *
1780:uCOSII/Source/os_core.c **** * Description: This task is internal to uC/OS-II and executes whenever no other higher priority tas
1781:uCOSII/Source/os_core.c **** *              executes because they are ALL waiting for event(s) to occur.
1782:uCOSII/Source/os_core.c **** *
1783:uCOSII/Source/os_core.c **** * Arguments  : none
1784:uCOSII/Source/os_core.c **** *
1785:uCOSII/Source/os_core.c **** * Returns    : none
1786:uCOSII/Source/os_core.c **** *
1787:uCOSII/Source/os_core.c **** * Note(s)    : 1) OSTaskIdleHook() is called after the critical section to ensure that interrupts w
1788:uCOSII/Source/os_core.c **** *                 enabled for at least a few instructions.  On some processors (ex. Philips XA), en
1789:uCOSII/Source/os_core.c **** *                 and then disabling interrupts didn't allow the processor enough time to have inte
1790:uCOSII/Source/os_core.c **** *                 enabled before they were disabled again.  uC/OS-II would thus never recognize
1791:uCOSII/Source/os_core.c **** *                 interrupts.
1792:uCOSII/Source/os_core.c **** *              2) This hook has been added to allow you to do such things as STOP the CPU to conser
1793:uCOSII/Source/os_core.c **** *                 power.
1794:uCOSII/Source/os_core.c **** ***************************************************************************************************
1795:uCOSII/Source/os_core.c **** */
ARM GAS  /tmp/ccxgEmFy.s 			page 39


1796:uCOSII/Source/os_core.c **** 
1797:uCOSII/Source/os_core.c **** void  OS_TaskIdle (void *p_arg)
1798:uCOSII/Source/os_core.c **** {
 360              		.loc 1 1798 1 is_stmt 1 view -0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364              	.LVL12:
 365              		.loc 1 1798 1 is_stmt 0 view .LVU72
 366 0000 08B5     		push	{r3, lr}
 367              	.LCFI6:
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 3, -8
 370              		.cfi_offset 14, -4
 371              	.LVL13:
 372              	.L21:
1799:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
1800:uCOSII/Source/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
1801:uCOSII/Source/os_core.c **** #endif
1802:uCOSII/Source/os_core.c **** 
1803:uCOSII/Source/os_core.c **** 
1804:uCOSII/Source/os_core.c **** 
1805:uCOSII/Source/os_core.c ****     p_arg = p_arg;                               /* Prevent compiler warning for not using 'p_arg' 
1806:uCOSII/Source/os_core.c ****     for (;;) {
 373              		.loc 1 1806 5 is_stmt 1 discriminator 1 view .LVU73
1807:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
 374              		.loc 1 1807 9 discriminator 1 view .LVU74
 375 0002 FFF7FEFF 		bl	OS_CPU_SR_Save
 376              	.LVL14:
 377              		.loc 1 1807 28 discriminator 1 view .LVU75
1808:uCOSII/Source/os_core.c ****         OSIdleCtr++;
 378              		.loc 1 1808 9 discriminator 1 view .LVU76
 379              		.loc 1 1808 18 is_stmt 0 discriminator 1 view .LVU77
 380 0006 044A     		ldr	r2, .L23
 381 0008 1368     		ldr	r3, [r2]
 382 000a 0133     		adds	r3, r3, #1
 383 000c 1360     		str	r3, [r2]
1809:uCOSII/Source/os_core.c ****         OS_EXIT_CRITICAL();
 384              		.loc 1 1809 9 is_stmt 1 discriminator 1 view .LVU78
 385 000e FFF7FEFF 		bl	OS_CPU_SR_Restore
 386              	.LVL15:
 387              		.loc 1 1809 27 discriminator 1 view .LVU79
1810:uCOSII/Source/os_core.c ****         OSTaskIdleHook();                        /* Call user definable HOOK                       
 388              		.loc 1 1810 9 discriminator 1 view .LVU80
 389 0012 FFF7FEFF 		bl	OSTaskIdleHook
 390              	.LVL16:
1806:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
 391              		.loc 1 1806 11 discriminator 1 view .LVU81
 392 0016 F4E7     		b	.L21
 393              	.L24:
 394              		.align	2
 395              	.L23:
 396 0018 00000000 		.word	OSIdleCtr
 397              		.cfi_endproc
 398              	.LFE30:
 400              		.section	.text.OSEventNameSet,"ax",%progbits
 401              		.align	1
ARM GAS  /tmp/ccxgEmFy.s 			page 40


 402              		.global	OSEventNameSet
 403              		.syntax unified
 404              		.thumb
 405              		.thumb_func
 406              		.fpu fpv4-sp-d16
 408              	OSEventNameSet:
 409              	.LVL17:
 410              	.LFB1:
 193:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 411              		.loc 1 193 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 193:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 415              		.loc 1 193 1 is_stmt 0 view .LVU83
 416 0000 70B5     		push	{r4, r5, r6, lr}
 417              	.LCFI7:
 418              		.cfi_def_cfa_offset 16
 419              		.cfi_offset 4, -16
 420              		.cfi_offset 5, -12
 421              		.cfi_offset 6, -8
 422              		.cfi_offset 14, -4
 423 0002 1646     		mov	r6, r2
 195:uCOSII/Source/os_core.c **** #endif
 424              		.loc 1 195 5 is_stmt 1 view .LVU84
 425              	.LVL18:
 217:uCOSII/Source/os_core.c ****         *perr = OS_ERR_NAME_SET_ISR;
 426              		.loc 1 217 5 view .LVU85
 217:uCOSII/Source/os_core.c ****         *perr = OS_ERR_NAME_SET_ISR;
 427              		.loc 1 217 22 is_stmt 0 view .LVU86
 428 0004 0B4B     		ldr	r3, .L31
 429 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 217:uCOSII/Source/os_core.c ****         *perr = OS_ERR_NAME_SET_ISR;
 430              		.loc 1 217 8 view .LVU87
 431 0008 43B9     		cbnz	r3, .L30
 432 000a 0546     		mov	r5, r0
 433 000c 0C46     		mov	r4, r1
 221:uCOSII/Source/os_core.c ****         case OS_EVENT_TYPE_SEM:
 434              		.loc 1 221 5 is_stmt 1 view .LVU88
 221:uCOSII/Source/os_core.c ****         case OS_EVENT_TYPE_SEM:
 435              		.loc 1 221 19 is_stmt 0 view .LVU89
 436 000e 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 221:uCOSII/Source/os_core.c ****         case OS_EVENT_TYPE_SEM:
 437              		.loc 1 221 5 view .LVU90
 438 0010 013B     		subs	r3, r3, #1
 439 0012 032B     		cmp	r3, #3
 440 0014 05D9     		bls	.L28
 229:uCOSII/Source/os_core.c ****              return;
 441              		.loc 1 229 14 is_stmt 1 view .LVU91
 229:uCOSII/Source/os_core.c ****              return;
 442              		.loc 1 229 20 is_stmt 0 view .LVU92
 443 0016 0123     		movs	r3, #1
 444 0018 1370     		strb	r3, [r2]
 230:uCOSII/Source/os_core.c ****     }
 445              		.loc 1 230 14 is_stmt 1 view .LVU93
 446              	.LVL19:
 447              	.L25:
ARM GAS  /tmp/ccxgEmFy.s 			page 41


 236:uCOSII/Source/os_core.c **** #endif
 448              		.loc 1 236 1 is_stmt 0 view .LVU94
 449 001a 70BD     		pop	{r4, r5, r6, pc}
 450              	.LVL20:
 451              	.L30:
 218:uCOSII/Source/os_core.c ****         return;
 452              		.loc 1 218 9 is_stmt 1 view .LVU95
 218:uCOSII/Source/os_core.c ****         return;
 453              		.loc 1 218 15 is_stmt 0 view .LVU96
 454 001c 1223     		movs	r3, #18
 455 001e 1370     		strb	r3, [r2]
 219:uCOSII/Source/os_core.c ****     }
 456              		.loc 1 219 9 is_stmt 1 view .LVU97
 457 0020 FBE7     		b	.L25
 458              	.L28:
 226:uCOSII/Source/os_core.c **** 
 459              		.loc 1 226 14 view .LVU98
 232:uCOSII/Source/os_core.c ****     pevent->OSEventName = pname;
 460              		.loc 1 232 5 view .LVU99
 461 0022 FFF7FEFF 		bl	OS_CPU_SR_Save
 462              	.LVL21:
 232:uCOSII/Source/os_core.c ****     pevent->OSEventName = pname;
 463              		.loc 1 232 24 view .LVU100
 233:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 464              		.loc 1 233 5 view .LVU101
 233:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 465              		.loc 1 233 25 is_stmt 0 view .LVU102
 466 0026 6C61     		str	r4, [r5, #20]
 234:uCOSII/Source/os_core.c ****     *perr = OS_ERR_NONE;
 467              		.loc 1 234 5 is_stmt 1 view .LVU103
 468 0028 FFF7FEFF 		bl	OS_CPU_SR_Restore
 469              	.LVL22:
 234:uCOSII/Source/os_core.c ****     *perr = OS_ERR_NONE;
 470              		.loc 1 234 23 view .LVU104
 235:uCOSII/Source/os_core.c **** }
 471              		.loc 1 235 5 view .LVU105
 235:uCOSII/Source/os_core.c **** }
 472              		.loc 1 235 11 is_stmt 0 view .LVU106
 473 002c 0023     		movs	r3, #0
 474 002e 3370     		strb	r3, [r6]
 475 0030 F3E7     		b	.L25
 476              	.L32:
 477 0032 00BF     		.align	2
 478              	.L31:
 479 0034 00000000 		.word	OSIntNesting
 480              		.cfi_endproc
 481              	.LFE1:
 483              		.section	.text.OSIntEnter,"ax",%progbits
 484              		.align	1
 485              		.global	OSIntEnter
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 489              		.fpu fpv4-sp-d16
 491              	OSIntEnter:
 492              	.LFB4:
 656:uCOSII/Source/os_core.c ****     if (OSRunning == OS_TRUE) {
ARM GAS  /tmp/ccxgEmFy.s 			page 42


 493              		.loc 1 656 1 is_stmt 1 view -0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 657:uCOSII/Source/os_core.c ****         if (OSIntNesting < 255u) {
 498              		.loc 1 657 5 view .LVU108
 657:uCOSII/Source/os_core.c ****         if (OSIntNesting < 255u) {
 499              		.loc 1 657 19 is_stmt 0 view .LVU109
 500 0000 064B     		ldr	r3, .L36
 501 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 657:uCOSII/Source/os_core.c ****         if (OSIntNesting < 255u) {
 502              		.loc 1 657 8 view .LVU110
 503 0004 012B     		cmp	r3, #1
 504 0006 00D0     		beq	.L35
 505              	.L33:
 662:uCOSII/Source/os_core.c **** /*$PAGE*/
 506              		.loc 1 662 1 view .LVU111
 507 0008 7047     		bx	lr
 508              	.L35:
 658:uCOSII/Source/os_core.c ****             OSIntNesting++;                      /* Increment ISR nesting level                    
 509              		.loc 1 658 9 is_stmt 1 view .LVU112
 658:uCOSII/Source/os_core.c ****             OSIntNesting++;                      /* Increment ISR nesting level                    
 510              		.loc 1 658 26 is_stmt 0 view .LVU113
 511 000a 054B     		ldr	r3, .L36+4
 512 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 658:uCOSII/Source/os_core.c ****             OSIntNesting++;                      /* Increment ISR nesting level                    
 513              		.loc 1 658 12 view .LVU114
 514 000e FF2B     		cmp	r3, #255
 515 0010 FAD0     		beq	.L33
 659:uCOSII/Source/os_core.c ****         }
 516              		.loc 1 659 13 is_stmt 1 view .LVU115
 659:uCOSII/Source/os_core.c ****         }
 517              		.loc 1 659 25 is_stmt 0 view .LVU116
 518 0012 0133     		adds	r3, r3, #1
 519 0014 024A     		ldr	r2, .L36+4
 520 0016 1370     		strb	r3, [r2]
 662:uCOSII/Source/os_core.c **** /*$PAGE*/
 521              		.loc 1 662 1 view .LVU117
 522 0018 F6E7     		b	.L33
 523              	.L37:
 524 001a 00BF     		.align	2
 525              	.L36:
 526 001c 00000000 		.word	OSRunning
 527 0020 00000000 		.word	OSIntNesting
 528              		.cfi_endproc
 529              	.LFE4:
 531              		.section	.text.OSIntExit,"ax",%progbits
 532              		.align	1
 533              		.global	OSIntExit
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 537              		.fpu fpv4-sp-d16
 539              	OSIntExit:
 540              	.LFB5:
 684:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                               /* Allocate storage for CPU status regis
ARM GAS  /tmp/ccxgEmFy.s 			page 43


 541              		.loc 1 684 1 is_stmt 1 view -0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 686:uCOSII/Source/os_core.c **** #endif
 545              		.loc 1 686 5 view .LVU119
 546              	.LVL23:
 691:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
 547              		.loc 1 691 5 view .LVU120
 691:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
 548              		.loc 1 691 19 is_stmt 0 view .LVU121
 549 0000 174B     		ldr	r3, .L48
 550 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 691:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
 551              		.loc 1 691 8 view .LVU122
 552 0004 012B     		cmp	r3, #1
 553 0006 00D0     		beq	.L46
 554 0008 7047     		bx	lr
 555              	.L46:
 684:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                               /* Allocate storage for CPU status regis
 556              		.loc 1 684 1 view .LVU123
 557 000a 10B5     		push	{r4, lr}
 558              	.LCFI8:
 559              		.cfi_def_cfa_offset 8
 560              		.cfi_offset 4, -8
 561              		.cfi_offset 14, -4
 692:uCOSII/Source/os_core.c ****         if (OSIntNesting > 0u) {                           /* Prevent OSIntNesting from wrapping   
 562              		.loc 1 692 9 is_stmt 1 view .LVU124
 563 000c FFF7FEFF 		bl	OS_CPU_SR_Save
 564              	.LVL24:
 565 0010 0446     		mov	r4, r0
 566              	.LVL25:
 692:uCOSII/Source/os_core.c ****         if (OSIntNesting > 0u) {                           /* Prevent OSIntNesting from wrapping   
 567              		.loc 1 692 28 view .LVU125
 693:uCOSII/Source/os_core.c ****             OSIntNesting--;
 568              		.loc 1 693 9 view .LVU126
 693:uCOSII/Source/os_core.c ****             OSIntNesting--;
 569              		.loc 1 693 26 is_stmt 0 view .LVU127
 570 0012 144B     		ldr	r3, .L48+4
 571 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 693:uCOSII/Source/os_core.c ****             OSIntNesting--;
 572              		.loc 1 693 12 view .LVU128
 573 0016 13B1     		cbz	r3, .L40
 694:uCOSII/Source/os_core.c ****         }
 574              		.loc 1 694 13 is_stmt 1 view .LVU129
 694:uCOSII/Source/os_core.c ****         }
 575              		.loc 1 694 25 is_stmt 0 view .LVU130
 576 0018 013B     		subs	r3, r3, #1
 577 001a 124A     		ldr	r2, .L48+4
 578 001c 1370     		strb	r3, [r2]
 579              	.L40:
 696:uCOSII/Source/os_core.c ****             if (OSLockNesting == 0u) {                     /* ... and not locked.                  
 580              		.loc 1 696 9 is_stmt 1 view .LVU131
 696:uCOSII/Source/os_core.c ****             if (OSLockNesting == 0u) {                     /* ... and not locked.                  
 581              		.loc 1 696 26 is_stmt 0 view .LVU132
 582 001e 114B     		ldr	r3, .L48+4
 583 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccxgEmFy.s 			page 44


 696:uCOSII/Source/os_core.c ****             if (OSLockNesting == 0u) {                     /* ... and not locked.                  
 584              		.loc 1 696 12 view .LVU133
 585 0022 13B9     		cbnz	r3, .L41
 697:uCOSII/Source/os_core.c ****                 OS_SchedNew();
 586              		.loc 1 697 13 is_stmt 1 view .LVU134
 697:uCOSII/Source/os_core.c ****                 OS_SchedNew();
 587              		.loc 1 697 31 is_stmt 0 view .LVU135
 588 0024 104B     		ldr	r3, .L48+8
 589 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 697:uCOSII/Source/os_core.c ****                 OS_SchedNew();
 590              		.loc 1 697 16 view .LVU136
 591 0028 1BB1     		cbz	r3, .L47
 592              	.LVL26:
 593              	.L41:
 716:uCOSII/Source/os_core.c ****     }
 594              		.loc 1 716 9 is_stmt 1 view .LVU137
 595 002a 2046     		mov	r0, r4
 596 002c FFF7FEFF 		bl	OS_CPU_SR_Restore
 597              	.LVL27:
 716:uCOSII/Source/os_core.c ****     }
 598              		.loc 1 716 27 view .LVU138
 718:uCOSII/Source/os_core.c **** /*$PAGE*/
 599              		.loc 1 718 1 is_stmt 0 view .LVU139
 600 0030 10BD     		pop	{r4, pc}
 601              	.LVL28:
 602              	.L47:
 698:uCOSII/Source/os_core.c ****                 OSTCBHighRdy = OSTCBPrioTbl[OSPrioHighRdy];
 603              		.loc 1 698 17 is_stmt 1 view .LVU140
 604 0032 FFF7FEFF 		bl	OS_SchedNew
 605              	.LVL29:
 699:uCOSII/Source/os_core.c ****                 if (OSPrioHighRdy != OSPrioCur) {          /* No Ctx Sw if current task is highest 
 606              		.loc 1 699 17 view .LVU141
 699:uCOSII/Source/os_core.c ****                 if (OSPrioHighRdy != OSPrioCur) {          /* No Ctx Sw if current task is highest 
 607              		.loc 1 699 44 is_stmt 0 view .LVU142
 608 0036 0D4B     		ldr	r3, .L48+12
 609 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 610 003a 0D4A     		ldr	r2, .L48+16
 611 003c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 699:uCOSII/Source/os_core.c ****                 if (OSPrioHighRdy != OSPrioCur) {          /* No Ctx Sw if current task is highest 
 612              		.loc 1 699 30 view .LVU143
 613 0040 0C49     		ldr	r1, .L48+20
 614 0042 0A60     		str	r2, [r1]
 700:uCOSII/Source/os_core.c **** #if OS_TASK_PROFILE_EN > 0u
 615              		.loc 1 700 17 is_stmt 1 view .LVU144
 700:uCOSII/Source/os_core.c **** #if OS_TASK_PROFILE_EN > 0u
 616              		.loc 1 700 35 is_stmt 0 view .LVU145
 617 0044 0C49     		ldr	r1, .L48+24
 618 0046 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 700:uCOSII/Source/os_core.c **** #if OS_TASK_PROFILE_EN > 0u
 619              		.loc 1 700 20 view .LVU146
 620 0048 8B42     		cmp	r3, r1
 621 004a EED0     		beq	.L41
 702:uCOSII/Source/os_core.c **** #endif
 622              		.loc 1 702 21 is_stmt 1 view .LVU147
 702:uCOSII/Source/os_core.c **** #endif
 623              		.loc 1 702 33 is_stmt 0 view .LVU148
 624 004c D36B     		ldr	r3, [r2, #60]
ARM GAS  /tmp/ccxgEmFy.s 			page 45


 702:uCOSII/Source/os_core.c **** #endif
 625              		.loc 1 702 48 view .LVU149
 626 004e 0133     		adds	r3, r3, #1
 627 0050 D363     		str	r3, [r2, #60]
 704:uCOSII/Source/os_core.c **** 
 628              		.loc 1 704 21 is_stmt 1 view .LVU150
 704:uCOSII/Source/os_core.c **** 
 629              		.loc 1 704 31 is_stmt 0 view .LVU151
 630 0052 0A4A     		ldr	r2, .L48+28
 631 0054 1368     		ldr	r3, [r2]
 632 0056 0133     		adds	r3, r3, #1
 633 0058 1360     		str	r3, [r2]
 712:uCOSII/Source/os_core.c ****                 }
 634              		.loc 1 712 21 is_stmt 1 view .LVU152
 635 005a FFF7FEFF 		bl	OSIntCtxSw
 636              	.LVL30:
 637 005e E4E7     		b	.L41
 638              	.L49:
 639              		.align	2
 640              	.L48:
 641 0060 00000000 		.word	OSRunning
 642 0064 00000000 		.word	OSIntNesting
 643 0068 00000000 		.word	OSLockNesting
 644 006c 00000000 		.word	OSPrioHighRdy
 645 0070 00000000 		.word	OSTCBPrioTbl
 646 0074 00000000 		.word	OSTCBHighRdy
 647 0078 00000000 		.word	OSPrioCur
 648 007c 00000000 		.word	OSCtxSwCtr
 649              		.cfi_endproc
 650              	.LFE5:
 652              		.section	.text.OSSchedLock,"ax",%progbits
 653              		.align	1
 654              		.global	OSSchedLock
 655              		.syntax unified
 656              		.thumb
 657              		.thumb_func
 658              		.fpu fpv4-sp-d16
 660              	OSSchedLock:
 661              	.LFB6:
 764:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 662              		.loc 1 764 1 view -0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666 0000 08B5     		push	{r3, lr}
 667              	.LCFI9:
 668              		.cfi_def_cfa_offset 8
 669              		.cfi_offset 3, -8
 670              		.cfi_offset 14, -4
 766:uCOSII/Source/os_core.c **** #endif
 671              		.loc 1 766 5 view .LVU154
 672              	.LVL31:
 771:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
 673              		.loc 1 771 5 view .LVU155
 771:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
 674              		.loc 1 771 19 is_stmt 0 view .LVU156
 675 0002 0A4B     		ldr	r3, .L55
ARM GAS  /tmp/ccxgEmFy.s 			page 46


 676 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 771:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
 677              		.loc 1 771 8 view .LVU157
 678 0006 012B     		cmp	r3, #1
 679 0008 00D0     		beq	.L54
 680              	.LVL32:
 681              	.L50:
 780:uCOSII/Source/os_core.c **** #endif
 682              		.loc 1 780 1 view .LVU158
 683 000a 08BD     		pop	{r3, pc}
 684              	.LVL33:
 685              	.L54:
 772:uCOSII/Source/os_core.c ****         if (OSIntNesting == 0u) {                /* Can't call from an ISR                         
 686              		.loc 1 772 9 is_stmt 1 view .LVU159
 687 000c FFF7FEFF 		bl	OS_CPU_SR_Save
 688              	.LVL34:
 772:uCOSII/Source/os_core.c ****         if (OSIntNesting == 0u) {                /* Can't call from an ISR                         
 689              		.loc 1 772 28 view .LVU160
 773:uCOSII/Source/os_core.c ****             if (OSLockNesting < 255u) {          /* Prevent OSLockNesting from wrapping back to 0  
 690              		.loc 1 773 9 view .LVU161
 773:uCOSII/Source/os_core.c ****             if (OSLockNesting < 255u) {          /* Prevent OSLockNesting from wrapping back to 0  
 691              		.loc 1 773 26 is_stmt 0 view .LVU162
 692 0010 074B     		ldr	r3, .L55+4
 693 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 773:uCOSII/Source/os_core.c ****             if (OSLockNesting < 255u) {          /* Prevent OSLockNesting from wrapping back to 0  
 694              		.loc 1 773 12 view .LVU163
 695 0014 33B9     		cbnz	r3, .L52
 774:uCOSII/Source/os_core.c ****                 OSLockNesting++;                 /* Increment lock nesting level                   
 696              		.loc 1 774 13 is_stmt 1 view .LVU164
 774:uCOSII/Source/os_core.c ****                 OSLockNesting++;                 /* Increment lock nesting level                   
 697              		.loc 1 774 31 is_stmt 0 view .LVU165
 698 0016 074B     		ldr	r3, .L55+8
 699 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 774:uCOSII/Source/os_core.c ****                 OSLockNesting++;                 /* Increment lock nesting level                   
 700              		.loc 1 774 16 view .LVU166
 701 001a FF2B     		cmp	r3, #255
 702 001c 02D0     		beq	.L52
 775:uCOSII/Source/os_core.c ****             }
 703              		.loc 1 775 17 is_stmt 1 view .LVU167
 775:uCOSII/Source/os_core.c ****             }
 704              		.loc 1 775 30 is_stmt 0 view .LVU168
 705 001e 0133     		adds	r3, r3, #1
 706 0020 044A     		ldr	r2, .L55+8
 707 0022 1370     		strb	r3, [r2]
 708              	.L52:
 778:uCOSII/Source/os_core.c ****     }
 709              		.loc 1 778 9 is_stmt 1 view .LVU169
 710 0024 FFF7FEFF 		bl	OS_CPU_SR_Restore
 711              	.LVL35:
 778:uCOSII/Source/os_core.c ****     }
 712              		.loc 1 778 27 view .LVU170
 780:uCOSII/Source/os_core.c **** #endif
 713              		.loc 1 780 1 is_stmt 0 view .LVU171
 714 0028 EFE7     		b	.L50
 715              	.L56:
 716 002a 00BF     		.align	2
 717              	.L55:
ARM GAS  /tmp/ccxgEmFy.s 			page 47


 718 002c 00000000 		.word	OSRunning
 719 0030 00000000 		.word	OSIntNesting
 720 0034 00000000 		.word	OSLockNesting
 721              		.cfi_endproc
 722              	.LFE6:
 724              		.section	.text.OSStart,"ax",%progbits
 725              		.align	1
 726              		.global	OSStart
 727              		.syntax unified
 728              		.thumb
 729              		.thumb_func
 730              		.fpu fpv4-sp-d16
 732              	OSStart:
 733              	.LFB8:
 851:uCOSII/Source/os_core.c ****     if (OSRunning == OS_FALSE) {
 734              		.loc 1 851 1 is_stmt 1 view -0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 738 0000 08B5     		push	{r3, lr}
 739              	.LCFI10:
 740              		.cfi_def_cfa_offset 8
 741              		.cfi_offset 3, -8
 742              		.cfi_offset 14, -4
 852:uCOSII/Source/os_core.c ****         OS_SchedNew();                               /* Find highest priority's task priority numbe
 743              		.loc 1 852 5 view .LVU173
 852:uCOSII/Source/os_core.c ****         OS_SchedNew();                               /* Find highest priority's task priority numbe
 744              		.loc 1 852 19 is_stmt 0 view .LVU174
 745 0002 0A4B     		ldr	r3, .L61
 746 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 852:uCOSII/Source/os_core.c ****         OS_SchedNew();                               /* Find highest priority's task priority numbe
 747              		.loc 1 852 8 view .LVU175
 748 0006 03B1     		cbz	r3, .L60
 749              	.L57:
 859:uCOSII/Source/os_core.c **** /*$PAGE*/
 750              		.loc 1 859 1 view .LVU176
 751 0008 08BD     		pop	{r3, pc}
 752              	.L60:
 853:uCOSII/Source/os_core.c ****         OSPrioCur     = OSPrioHighRdy;
 753              		.loc 1 853 9 is_stmt 1 view .LVU177
 754 000a FFF7FEFF 		bl	OS_SchedNew
 755              	.LVL36:
 854:uCOSII/Source/os_core.c ****         OSTCBHighRdy  = OSTCBPrioTbl[OSPrioHighRdy]; /* Point to highest priority task ready to run
 756              		.loc 1 854 9 view .LVU178
 854:uCOSII/Source/os_core.c ****         OSTCBHighRdy  = OSTCBPrioTbl[OSPrioHighRdy]; /* Point to highest priority task ready to run
 757              		.loc 1 854 23 is_stmt 0 view .LVU179
 758 000e 084B     		ldr	r3, .L61+4
 759 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 760 0012 084A     		ldr	r2, .L61+8
 761 0014 1370     		strb	r3, [r2]
 855:uCOSII/Source/os_core.c ****         OSTCBCur      = OSTCBHighRdy;
 762              		.loc 1 855 9 is_stmt 1 view .LVU180
 855:uCOSII/Source/os_core.c ****         OSTCBCur      = OSTCBHighRdy;
 763              		.loc 1 855 37 is_stmt 0 view .LVU181
 764 0016 084A     		ldr	r2, .L61+12
 765 0018 52F82330 		ldr	r3, [r2, r3, lsl #2]
 855:uCOSII/Source/os_core.c ****         OSTCBCur      = OSTCBHighRdy;
ARM GAS  /tmp/ccxgEmFy.s 			page 48


 766              		.loc 1 855 23 view .LVU182
 767 001c 074A     		ldr	r2, .L61+16
 768 001e 1360     		str	r3, [r2]
 856:uCOSII/Source/os_core.c ****         OSStartHighRdy();                            /* Execute target specific code to start task 
 769              		.loc 1 856 9 is_stmt 1 view .LVU183
 856:uCOSII/Source/os_core.c ****         OSStartHighRdy();                            /* Execute target specific code to start task 
 770              		.loc 1 856 23 is_stmt 0 view .LVU184
 771 0020 074A     		ldr	r2, .L61+20
 772 0022 1360     		str	r3, [r2]
 857:uCOSII/Source/os_core.c ****     }
 773              		.loc 1 857 9 is_stmt 1 view .LVU185
 774 0024 FFF7FEFF 		bl	OSStartHighRdy
 775              	.LVL37:
 859:uCOSII/Source/os_core.c **** /*$PAGE*/
 776              		.loc 1 859 1 is_stmt 0 view .LVU186
 777 0028 EEE7     		b	.L57
 778              	.L62:
 779 002a 00BF     		.align	2
 780              	.L61:
 781 002c 00000000 		.word	OSRunning
 782 0030 00000000 		.word	OSPrioHighRdy
 783 0034 00000000 		.word	OSPrioCur
 784 0038 00000000 		.word	OSTCBPrioTbl
 785 003c 00000000 		.word	OSTCBHighRdy
 786 0040 00000000 		.word	OSTCBCur
 787              		.cfi_endproc
 788              	.LFE8:
 790              		.section	.text.OSStatInit,"ax",%progbits
 791              		.align	1
 792              		.global	OSStatInit
 793              		.syntax unified
 794              		.thumb
 795              		.thumb_func
 796              		.fpu fpv4-sp-d16
 798              	OSStatInit:
 799              	.LFB9:
 883:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 800              		.loc 1 883 1 is_stmt 1 view -0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804 0000 10B5     		push	{r4, lr}
 805              	.LCFI11:
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 4, -8
 808              		.cfi_offset 14, -4
 885:uCOSII/Source/os_core.c **** #endif
 809              		.loc 1 885 5 view .LVU188
 810              	.LVL38:
 890:uCOSII/Source/os_core.c ****     OS_ENTER_CRITICAL();
 811              		.loc 1 890 5 view .LVU189
 812 0002 0220     		movs	r0, #2
 813 0004 FFF7FEFF 		bl	OSTimeDly
 814              	.LVL39:
 891:uCOSII/Source/os_core.c ****     OSIdleCtr    = 0uL;                          /* Clear idle counter                             
 815              		.loc 1 891 5 view .LVU190
 816 0008 FFF7FEFF 		bl	OS_CPU_SR_Save
ARM GAS  /tmp/ccxgEmFy.s 			page 49


 817              	.LVL40:
 891:uCOSII/Source/os_core.c ****     OSIdleCtr    = 0uL;                          /* Clear idle counter                             
 818              		.loc 1 891 24 view .LVU191
 892:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 819              		.loc 1 892 5 view .LVU192
 892:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 820              		.loc 1 892 18 is_stmt 0 view .LVU193
 821 000c 094C     		ldr	r4, .L65
 822 000e 0023     		movs	r3, #0
 823 0010 2360     		str	r3, [r4]
 893:uCOSII/Source/os_core.c ****     OSTimeDly(OS_TICKS_PER_SEC / 10u);           /* Determine MAX. idle counter value for 1/10 seco
 824              		.loc 1 893 5 is_stmt 1 view .LVU194
 825 0012 FFF7FEFF 		bl	OS_CPU_SR_Restore
 826              	.LVL41:
 893:uCOSII/Source/os_core.c ****     OSTimeDly(OS_TICKS_PER_SEC / 10u);           /* Determine MAX. idle counter value for 1/10 seco
 827              		.loc 1 893 23 view .LVU195
 894:uCOSII/Source/os_core.c ****     OS_ENTER_CRITICAL();
 828              		.loc 1 894 5 view .LVU196
 829 0016 0A20     		movs	r0, #10
 830 0018 FFF7FEFF 		bl	OSTimeDly
 831              	.LVL42:
 895:uCOSII/Source/os_core.c ****     OSIdleCtrMax = OSIdleCtr;                    /* Store maximum idle counter count in 1/10 second
 832              		.loc 1 895 5 view .LVU197
 833 001c FFF7FEFF 		bl	OS_CPU_SR_Save
 834              	.LVL43:
 895:uCOSII/Source/os_core.c ****     OSIdleCtrMax = OSIdleCtr;                    /* Store maximum idle counter count in 1/10 second
 835              		.loc 1 895 24 view .LVU198
 896:uCOSII/Source/os_core.c ****     OSStatRdy    = OS_TRUE;
 836              		.loc 1 896 5 view .LVU199
 896:uCOSII/Source/os_core.c ****     OSStatRdy    = OS_TRUE;
 837              		.loc 1 896 18 is_stmt 0 view .LVU200
 838 0020 2268     		ldr	r2, [r4]
 839 0022 054B     		ldr	r3, .L65+4
 840 0024 1A60     		str	r2, [r3]
 897:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 841              		.loc 1 897 5 is_stmt 1 view .LVU201
 897:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 842              		.loc 1 897 18 is_stmt 0 view .LVU202
 843 0026 054B     		ldr	r3, .L65+8
 844 0028 0122     		movs	r2, #1
 845 002a 1A70     		strb	r2, [r3]
 898:uCOSII/Source/os_core.c **** }
 846              		.loc 1 898 5 is_stmt 1 view .LVU203
 847 002c FFF7FEFF 		bl	OS_CPU_SR_Restore
 848              	.LVL44:
 898:uCOSII/Source/os_core.c **** }
 849              		.loc 1 898 23 view .LVU204
 899:uCOSII/Source/os_core.c **** #endif
 850              		.loc 1 899 1 is_stmt 0 view .LVU205
 851 0030 10BD     		pop	{r4, pc}
 852              	.L66:
 853 0032 00BF     		.align	2
 854              	.L65:
 855 0034 00000000 		.word	OSIdleCtr
 856 0038 00000000 		.word	OSIdleCtrMax
 857 003c 00000000 		.word	OSStatRdy
 858              		.cfi_endproc
ARM GAS  /tmp/ccxgEmFy.s 			page 50


 859              	.LFE9:
 861              		.section	.text.OSTimeTick,"ax",%progbits
 862              		.align	1
 863              		.global	OSTimeTick
 864              		.syntax unified
 865              		.thumb
 866              		.thumb_func
 867              		.fpu fpv4-sp-d16
 869              	OSTimeTick:
 870              	.LFB10:
 917:uCOSII/Source/os_core.c ****     OS_TCB    *ptcb;
 871              		.loc 1 917 1 is_stmt 1 view -0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 0
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875 0000 38B5     		push	{r3, r4, r5, lr}
 876              	.LCFI12:
 877              		.cfi_def_cfa_offset 16
 878              		.cfi_offset 3, -16
 879              		.cfi_offset 4, -12
 880              		.cfi_offset 5, -8
 881              		.cfi_offset 14, -4
 918:uCOSII/Source/os_core.c **** #if OS_TICK_STEP_EN > 0u
 882              		.loc 1 918 5 view .LVU207
 920:uCOSII/Source/os_core.c **** #endif
 883              		.loc 1 920 5 view .LVU208
 923:uCOSII/Source/os_core.c **** #endif
 884              		.loc 1 923 5 view .LVU209
 885              	.LVL45:
 929:uCOSII/Source/os_core.c **** #endif
 886              		.loc 1 929 5 view .LVU210
 887 0002 FFF7FEFF 		bl	OSTimeTickHook
 888              	.LVL46:
 932:uCOSII/Source/os_core.c ****     OSTime++;
 889              		.loc 1 932 5 view .LVU211
 890 0006 FFF7FEFF 		bl	OS_CPU_SR_Save
 891              	.LVL47:
 932:uCOSII/Source/os_core.c ****     OSTime++;
 892              		.loc 1 932 24 view .LVU212
 933:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 893              		.loc 1 933 5 view .LVU213
 933:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 894              		.loc 1 933 11 is_stmt 0 view .LVU214
 895 000a 284A     		ldr	r2, .L80
 896 000c 1368     		ldr	r3, [r2]
 897 000e 0133     		adds	r3, r3, #1
 898 0010 1360     		str	r3, [r2]
 934:uCOSII/Source/os_core.c **** #endif
 899              		.loc 1 934 5 is_stmt 1 view .LVU215
 900 0012 FFF7FEFF 		bl	OS_CPU_SR_Restore
 901              	.LVL48:
 934:uCOSII/Source/os_core.c **** #endif
 902              		.loc 1 934 23 view .LVU216
 936:uCOSII/Source/os_core.c **** #if OS_TICK_STEP_EN > 0u
 903              		.loc 1 936 5 view .LVU217
 936:uCOSII/Source/os_core.c **** #if OS_TICK_STEP_EN > 0u
 904              		.loc 1 936 19 is_stmt 0 view .LVU218
ARM GAS  /tmp/ccxgEmFy.s 			page 51


 905 0016 264B     		ldr	r3, .L80+4
 906 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 936:uCOSII/Source/os_core.c **** #if OS_TICK_STEP_EN > 0u
 907              		.loc 1 936 8 view .LVU219
 908 001a 012B     		cmp	r3, #1
 909 001c 00D0     		beq	.L79
 910              	.L67:
 985:uCOSII/Source/os_core.c **** 
 911              		.loc 1 985 1 view .LVU220
 912 001e 38BD     		pop	{r3, r4, r5, pc}
 913              	.L79:
 938:uCOSII/Source/os_core.c ****             case OS_TICK_STEP_DIS:                         /* Yes, stepping is disabled            
 914              		.loc 1 938 9 is_stmt 1 view .LVU221
 915 0020 244B     		ldr	r3, .L80+8
 916 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 917 0024 012B     		cmp	r3, #1
 918 0026 FAD0     		beq	.L67
 919 0028 022B     		cmp	r3, #2
 920 002a 04D0     		beq	.L69
 921 002c 33B1     		cbz	r3, .L70
 953:uCOSII/Source/os_core.c ****                  OSTickStepState = OS_TICK_STEP_DIS;
 922              		.loc 1 953 18 view .LVU222
 923              	.LVL49:
 954:uCOSII/Source/os_core.c ****                  break;
 924              		.loc 1 954 18 view .LVU223
 954:uCOSII/Source/os_core.c ****                  break;
 925              		.loc 1 954 34 is_stmt 0 view .LVU224
 926 002e 214B     		ldr	r3, .L80+8
 927 0030 0022     		movs	r2, #0
 928 0032 1A70     		strb	r2, [r3]
 955:uCOSII/Source/os_core.c ****         }
 929              		.loc 1 955 18 is_stmt 1 view .LVU225
 957:uCOSII/Source/os_core.c ****             return;
 930              		.loc 1 957 9 view .LVU226
 931 0034 02E0     		b	.L70
 932              	.LVL50:
 933              	.L69:
 948:uCOSII/Source/os_core.c ****                  OSTickStepState = OS_TICK_STEP_WAIT;
 934              		.loc 1 948 18 view .LVU227
 949:uCOSII/Source/os_core.c ****                  break;
 935              		.loc 1 949 18 view .LVU228
 949:uCOSII/Source/os_core.c ****                  break;
 936              		.loc 1 949 34 is_stmt 0 view .LVU229
 937 0036 1F4B     		ldr	r3, .L80+8
 938 0038 0122     		movs	r2, #1
 939 003a 1A70     		strb	r2, [r3]
 950:uCOSII/Source/os_core.c **** 
 940              		.loc 1 950 18 is_stmt 1 view .LVU230
 957:uCOSII/Source/os_core.c ****             return;
 941              		.loc 1 957 9 view .LVU231
 942              	.LVL51:
 943              	.L70:
 961:uCOSII/Source/os_core.c ****         while (ptcb->OSTCBPrio != OS_TASK_IDLE_PRIO) {     /* Go through all TCBs in TCB list      
 944              		.loc 1 961 9 view .LVU232
 961:uCOSII/Source/os_core.c ****         while (ptcb->OSTCBPrio != OS_TASK_IDLE_PRIO) {     /* Go through all TCBs in TCB list      
 945              		.loc 1 961 14 is_stmt 0 view .LVU233
 946 003c 1E4B     		ldr	r3, .L80+12
ARM GAS  /tmp/ccxgEmFy.s 			page 52


 947 003e 1C68     		ldr	r4, [r3]
 948              	.LVL52:
 962:uCOSII/Source/os_core.c ****             OS_ENTER_CRITICAL();
 949              		.loc 1 962 9 is_stmt 1 view .LVU234
 962:uCOSII/Source/os_core.c ****             OS_ENTER_CRITICAL();
 950              		.loc 1 962 15 is_stmt 0 view .LVU235
 951 0040 06E0     		b	.L72
 952              	.LVL53:
 953              	.L74:
 972:uCOSII/Source/os_core.c ****                     }
 954              		.loc 1 972 25 is_stmt 1 view .LVU236
 972:uCOSII/Source/os_core.c ****                     }
 955              		.loc 1 972 45 is_stmt 0 view .LVU237
 956 0042 0023     		movs	r3, #0
 957 0044 84F83530 		strb	r3, [r4, #53]
 958 0048 1BE0     		b	.L75
 959              	.L73:
 981:uCOSII/Source/os_core.c ****             OS_EXIT_CRITICAL();
 960              		.loc 1 981 13 is_stmt 1 view .LVU238
 981:uCOSII/Source/os_core.c ****             OS_EXIT_CRITICAL();
 961              		.loc 1 981 18 is_stmt 0 view .LVU239
 962 004a 6469     		ldr	r4, [r4, #20]
 963              	.LVL54:
 982:uCOSII/Source/os_core.c ****         }
 964              		.loc 1 982 13 is_stmt 1 view .LVU240
 965 004c FFF7FEFF 		bl	OS_CPU_SR_Restore
 966              	.LVL55:
 967              	.L72:
 982:uCOSII/Source/os_core.c ****         }
 968              		.loc 1 982 31 discriminator 1 view .LVU241
 962:uCOSII/Source/os_core.c ****             OS_ENTER_CRITICAL();
 969              		.loc 1 962 15 discriminator 1 view .LVU242
 962:uCOSII/Source/os_core.c ****             OS_ENTER_CRITICAL();
 970              		.loc 1 962 20 is_stmt 0 discriminator 1 view .LVU243
 971 0050 94F83630 		ldrb	r3, [r4, #54]	@ zero_extendqisi2
 962:uCOSII/Source/os_core.c ****             OS_ENTER_CRITICAL();
 972              		.loc 1 962 15 discriminator 1 view .LVU244
 973 0054 3F2B     		cmp	r3, #63
 974 0056 E2D0     		beq	.L67
 963:uCOSII/Source/os_core.c ****             if (ptcb->OSTCBDly != 0u) {                    /* No, Delayed or waiting for event with
 975              		.loc 1 963 13 is_stmt 1 view .LVU245
 976 0058 FFF7FEFF 		bl	OS_CPU_SR_Save
 977              	.LVL56:
 963:uCOSII/Source/os_core.c ****             if (ptcb->OSTCBDly != 0u) {                    /* No, Delayed or waiting for event with
 978              		.loc 1 963 32 view .LVU246
 964:uCOSII/Source/os_core.c ****                 ptcb->OSTCBDly--;                          /* Decrement nbr of ticks to end of dela
 979              		.loc 1 964 13 view .LVU247
 964:uCOSII/Source/os_core.c ****                 ptcb->OSTCBDly--;                          /* Decrement nbr of ticks to end of dela
 980              		.loc 1 964 21 is_stmt 0 view .LVU248
 981 005c 236B     		ldr	r3, [r4, #48]
 964:uCOSII/Source/os_core.c ****                 ptcb->OSTCBDly--;                          /* Decrement nbr of ticks to end of dela
 982              		.loc 1 964 16 view .LVU249
 983 005e 002B     		cmp	r3, #0
 984 0060 F3D0     		beq	.L73
 965:uCOSII/Source/os_core.c ****                 if (ptcb->OSTCBDly == 0u) {                /* Check for timeout                    
 985              		.loc 1 965 17 is_stmt 1 view .LVU250
 965:uCOSII/Source/os_core.c ****                 if (ptcb->OSTCBDly == 0u) {                /* Check for timeout                    
ARM GAS  /tmp/ccxgEmFy.s 			page 53


 986              		.loc 1 965 31 is_stmt 0 view .LVU251
 987 0062 013B     		subs	r3, r3, #1
 988 0064 2363     		str	r3, [r4, #48]
 966:uCOSII/Source/os_core.c **** 
 989              		.loc 1 966 17 is_stmt 1 view .LVU252
 966:uCOSII/Source/os_core.c **** 
 990              		.loc 1 966 20 is_stmt 0 view .LVU253
 991 0066 002B     		cmp	r3, #0
 992 0068 EFD1     		bne	.L73
 968:uCOSII/Source/os_core.c ****                         ptcb->OSTCBStat  &= (INT8U)~(INT8U)OS_STAT_PEND_ANY;          /* Yes, Clear
 993              		.loc 1 968 21 is_stmt 1 view .LVU254
 968:uCOSII/Source/os_core.c ****                         ptcb->OSTCBStat  &= (INT8U)~(INT8U)OS_STAT_PEND_ANY;          /* Yes, Clear
 994              		.loc 1 968 30 is_stmt 0 view .LVU255
 995 006a 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 968:uCOSII/Source/os_core.c ****                         ptcb->OSTCBStat  &= (INT8U)~(INT8U)OS_STAT_PEND_ANY;          /* Yes, Clear
 996              		.loc 1 968 24 view .LVU256
 997 006e 13F0370F 		tst	r3, #55
 998 0072 E6D0     		beq	.L74
 969:uCOSII/Source/os_core.c ****                         ptcb->OSTCBStatPend = OS_STAT_PEND_TO;                 /* Indicate PEND tim
 999              		.loc 1 969 25 is_stmt 1 view .LVU257
 969:uCOSII/Source/os_core.c ****                         ptcb->OSTCBStatPend = OS_STAT_PEND_TO;                 /* Indicate PEND tim
 1000              		.loc 1 969 42 is_stmt 0 view .LVU258
 1001 0074 23F03703 		bic	r3, r3, #55
 1002 0078 84F83430 		strb	r3, [r4, #52]
 970:uCOSII/Source/os_core.c ****                     } else {
 1003              		.loc 1 970 25 is_stmt 1 view .LVU259
 970:uCOSII/Source/os_core.c ****                     } else {
 1004              		.loc 1 970 45 is_stmt 0 view .LVU260
 1005 007c 0123     		movs	r3, #1
 1006 007e 84F83530 		strb	r3, [r4, #53]
 1007              	.L75:
 975:uCOSII/Source/os_core.c ****                         OSRdyGrp               |= ptcb->OSTCBBitY;             /* No,  Make ready  
 1008              		.loc 1 975 21 is_stmt 1 view .LVU261
 975:uCOSII/Source/os_core.c ****                         OSRdyGrp               |= ptcb->OSTCBBitY;             /* No,  Make ready  
 1009              		.loc 1 975 30 is_stmt 0 view .LVU262
 1010 0082 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 975:uCOSII/Source/os_core.c ****                         OSRdyGrp               |= ptcb->OSTCBBitY;             /* No,  Make ready  
 1011              		.loc 1 975 24 view .LVU263
 1012 0086 13F0080F 		tst	r3, #8
 1013 008a DED1     		bne	.L73
 976:uCOSII/Source/os_core.c ****                         OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
 1014              		.loc 1 976 25 is_stmt 1 view .LVU264
 976:uCOSII/Source/os_core.c ****                         OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
 1015              		.loc 1 976 55 is_stmt 0 view .LVU265
 1016 008c 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 976:uCOSII/Source/os_core.c ****                         OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
 1017              		.loc 1 976 48 view .LVU266
 1018 0090 0A4A     		ldr	r2, .L80+16
 1019 0092 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1020 0094 0B43     		orrs	r3, r3, r1
 1021 0096 1370     		strb	r3, [r2]
 977:uCOSII/Source/os_core.c ****                     }
 1022              		.loc 1 977 25 is_stmt 1 view .LVU267
 977:uCOSII/Source/os_core.c ****                     }
 1023              		.loc 1 977 38 is_stmt 0 view .LVU268
 1024 0098 94F83820 		ldrb	r2, [r4, #56]	@ zero_extendqisi2
 977:uCOSII/Source/os_core.c ****                     }
ARM GAS  /tmp/ccxgEmFy.s 			page 54


 1025              		.loc 1 977 55 view .LVU269
 1026 009c 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 977:uCOSII/Source/os_core.c ****                     }
 1027              		.loc 1 977 48 view .LVU270
 1028 00a0 0749     		ldr	r1, .L80+20
 1029 00a2 8D5C     		ldrb	r5, [r1, r2]	@ zero_extendqisi2
 1030 00a4 2B43     		orrs	r3, r3, r5
 1031 00a6 8B54     		strb	r3, [r1, r2]
 1032 00a8 CFE7     		b	.L73
 1033              	.L81:
 1034 00aa 00BF     		.align	2
 1035              	.L80:
 1036 00ac 00000000 		.word	OSTime
 1037 00b0 00000000 		.word	OSRunning
 1038 00b4 00000000 		.word	OSTickStepState
 1039 00b8 00000000 		.word	OSTCBList
 1040 00bc 00000000 		.word	OSRdyGrp
 1041 00c0 00000000 		.word	OSRdyTbl
 1042              		.cfi_endproc
 1043              	.LFE10:
 1045              		.section	.text.OSVersion,"ax",%progbits
 1046              		.align	1
 1047              		.global	OSVersion
 1048              		.syntax unified
 1049              		.thumb
 1050              		.thumb_func
 1051              		.fpu fpv4-sp-d16
 1053              	OSVersion:
 1054              	.LFB11:
1003:uCOSII/Source/os_core.c ****     return (OS_VERSION);
 1055              		.loc 1 1003 1 is_stmt 1 view -0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 0
 1058              		@ frame_needed = 0, uses_anonymous_args = 0
 1059              		@ link register save eliminated.
1004:uCOSII/Source/os_core.c **** }
 1060              		.loc 1 1004 5 view .LVU272
1005:uCOSII/Source/os_core.c **** 
 1061              		.loc 1 1005 1 is_stmt 0 view .LVU273
 1062 0000 47F21B20 		movw	r0, #29211
 1063 0004 7047     		bx	lr
 1064              		.cfi_endproc
 1065              	.LFE11:
 1067              		.section	.text.OS_Dummy,"ax",%progbits
 1068              		.align	1
 1069              		.global	OS_Dummy
 1070              		.syntax unified
 1071              		.thumb
 1072              		.thumb_func
 1073              		.fpu fpv4-sp-d16
 1075              	OS_Dummy:
 1076              	.LFB12:
1022:uCOSII/Source/os_core.c **** }
 1077              		.loc 1 1022 1 is_stmt 1 view -0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 0
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccxgEmFy.s 			page 55


 1081              		@ link register save eliminated.
1023:uCOSII/Source/os_core.c **** #endif
 1082              		.loc 1 1023 1 view .LVU275
 1083 0000 7047     		bx	lr
 1084              		.cfi_endproc
 1085              	.LFE12:
 1087              		.section	.text.OS_EventTaskWait,"ax",%progbits
 1088              		.align	1
 1089              		.global	OS_EventTaskWait
 1090              		.syntax unified
 1091              		.thumb
 1092              		.thumb_func
 1093              		.fpu fpv4-sp-d16
 1095              	OS_EventTaskWait:
 1096              	.LVL57:
 1097              	.LFB14:
1131:uCOSII/Source/os_core.c ****     INT8U  y;
 1098              		.loc 1 1131 1 view -0
 1099              		.cfi_startproc
 1100              		@ args = 0, pretend = 0, frame = 0
 1101              		@ frame_needed = 0, uses_anonymous_args = 0
 1102              		@ link register save eliminated.
1131:uCOSII/Source/os_core.c ****     INT8U  y;
 1103              		.loc 1 1131 1 is_stmt 0 view .LVU277
 1104 0000 10B4     		push	{r4}
 1105              	.LCFI13:
 1106              		.cfi_def_cfa_offset 4
 1107              		.cfi_offset 4, -4
1132:uCOSII/Source/os_core.c **** 
 1108              		.loc 1 1132 5 is_stmt 1 view .LVU278
1135:uCOSII/Source/os_core.c **** 
 1109              		.loc 1 1135 5 view .LVU279
1135:uCOSII/Source/os_core.c **** 
 1110              		.loc 1 1135 13 is_stmt 0 view .LVU280
 1111 0002 124B     		ldr	r3, .L87
 1112 0004 1B68     		ldr	r3, [r3]
1135:uCOSII/Source/os_core.c **** 
 1113              		.loc 1 1135 43 view .LVU281
 1114 0006 D861     		str	r0, [r3, #28]
1137:uCOSII/Source/os_core.c ****     pevent->OSEventGrp                   |= OSTCBCur->OSTCBBitY;
 1115              		.loc 1 1137 5 is_stmt 1 view .LVU282
1137:uCOSII/Source/os_core.c ****     pevent->OSEventGrp                   |= OSTCBCur->OSTCBBitY;
 1116              		.loc 1 1137 32 is_stmt 0 view .LVU283
 1117 0008 93F83820 		ldrb	r2, [r3, #56]	@ zero_extendqisi2
1137:uCOSII/Source/os_core.c ****     pevent->OSEventGrp                   |= OSTCBCur->OSTCBBitY;
 1118              		.loc 1 1137 53 view .LVU284
 1119 000c 93F83910 		ldrb	r1, [r3, #57]	@ zero_extendqisi2
1137:uCOSII/Source/os_core.c ****     pevent->OSEventGrp                   |= OSTCBCur->OSTCBBitY;
 1120              		.loc 1 1137 42 view .LVU285
 1121 0010 0244     		add	r2, r2, r0
 1122 0012 D47A     		ldrb	r4, [r2, #11]	@ zero_extendqisi2
 1123 0014 2143     		orrs	r1, r1, r4
 1124 0016 D172     		strb	r1, [r2, #11]
1138:uCOSII/Source/os_core.c **** 
 1125              		.loc 1 1138 5 is_stmt 1 view .LVU286
1138:uCOSII/Source/os_core.c **** 
 1126              		.loc 1 1138 53 is_stmt 0 view .LVU287
ARM GAS  /tmp/ccxgEmFy.s 			page 56


 1127 0018 93F83A20 		ldrb	r2, [r3, #58]	@ zero_extendqisi2
1138:uCOSII/Source/os_core.c **** 
 1128              		.loc 1 1138 42 view .LVU288
 1129 001c 817A     		ldrb	r1, [r0, #10]	@ zero_extendqisi2
 1130 001e 0A43     		orrs	r2, r2, r1
 1131 0020 8272     		strb	r2, [r0, #10]
1140:uCOSII/Source/os_core.c ****     OSRdyTbl[y]  &= (OS_PRIO)~OSTCBCur->OSTCBBitX;
 1132              		.loc 1 1140 5 is_stmt 1 view .LVU289
1140:uCOSII/Source/os_core.c ****     OSRdyTbl[y]  &= (OS_PRIO)~OSTCBCur->OSTCBBitX;
 1133              		.loc 1 1140 19 is_stmt 0 view .LVU290
 1134 0022 93F83810 		ldrb	r1, [r3, #56]	@ zero_extendqisi2
 1135              	.LVL58:
1141:uCOSII/Source/os_core.c ****     if (OSRdyTbl[y] == 0u) {                      /* Clear event grp bit if this was only task pend
 1136              		.loc 1 1141 5 is_stmt 1 view .LVU291
1141:uCOSII/Source/os_core.c ****     if (OSRdyTbl[y] == 0u) {                      /* Clear event grp bit if this was only task pend
 1137              		.loc 1 1141 39 is_stmt 0 view .LVU292
 1138 0026 93F83940 		ldrb	r4, [r3, #57]	@ zero_extendqisi2
1141:uCOSII/Source/os_core.c ****     if (OSRdyTbl[y] == 0u) {                      /* Clear event grp bit if this was only task pend
 1139              		.loc 1 1141 18 view .LVU293
 1140 002a 0948     		ldr	r0, .L87+4
 1141              	.LVL59:
1141:uCOSII/Source/os_core.c ****     if (OSRdyTbl[y] == 0u) {                      /* Clear event grp bit if this was only task pend
 1142              		.loc 1 1141 18 view .LVU294
 1143 002c 425C     		ldrb	r2, [r0, r1]	@ zero_extendqisi2
 1144 002e 22EA0402 		bic	r2, r2, r4
 1145 0032 4254     		strb	r2, [r0, r1]
1142:uCOSII/Source/os_core.c ****         OSRdyGrp &= (OS_PRIO)~OSTCBCur->OSTCBBitY;
 1146              		.loc 1 1142 5 is_stmt 1 view .LVU295
1142:uCOSII/Source/os_core.c ****         OSRdyGrp &= (OS_PRIO)~OSTCBCur->OSTCBBitY;
 1147              		.loc 1 1142 8 is_stmt 0 view .LVU296
 1148 0034 32B9     		cbnz	r2, .L84
1143:uCOSII/Source/os_core.c ****     }
 1149              		.loc 1 1143 9 is_stmt 1 view .LVU297
1143:uCOSII/Source/os_core.c ****     }
 1150              		.loc 1 1143 39 is_stmt 0 view .LVU298
 1151 0036 93F83A10 		ldrb	r1, [r3, #58]	@ zero_extendqisi2
 1152              	.LVL60:
1143:uCOSII/Source/os_core.c ****     }
 1153              		.loc 1 1143 18 view .LVU299
 1154 003a 064A     		ldr	r2, .L87+8
 1155 003c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1156              	.LVL61:
1143:uCOSII/Source/os_core.c ****     }
 1157              		.loc 1 1143 18 view .LVU300
 1158 003e 23EA0103 		bic	r3, r3, r1
 1159 0042 1370     		strb	r3, [r2]
 1160              	.L84:
1145:uCOSII/Source/os_core.c **** #endif
 1161              		.loc 1 1145 1 view .LVU301
 1162 0044 5DF8044B 		ldr	r4, [sp], #4
 1163              	.LCFI14:
 1164              		.cfi_restore 4
 1165              		.cfi_def_cfa_offset 0
 1166 0048 7047     		bx	lr
 1167              	.L88:
 1168 004a 00BF     		.align	2
 1169              	.L87:
ARM GAS  /tmp/ccxgEmFy.s 			page 57


 1170 004c 00000000 		.word	OSTCBCur
 1171 0050 00000000 		.word	OSRdyTbl
 1172 0054 00000000 		.word	OSRdyGrp
 1173              		.cfi_endproc
 1174              	.LFE14:
 1176              		.section	.text.OS_EventTaskWaitMulti,"ax",%progbits
 1177              		.align	1
 1178              		.global	OS_EventTaskWaitMulti
 1179              		.syntax unified
 1180              		.thumb
 1181              		.thumb_func
 1182              		.fpu fpv4-sp-d16
 1184              	OS_EventTaskWaitMulti:
 1185              	.LVL62:
 1186              	.LFB15:
1165:uCOSII/Source/os_core.c ****     OS_EVENT **pevents;
 1187              		.loc 1 1165 1 is_stmt 1 view -0
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 0
 1190              		@ frame_needed = 0, uses_anonymous_args = 0
 1191              		@ link register save eliminated.
1165:uCOSII/Source/os_core.c ****     OS_EVENT **pevents;
 1192              		.loc 1 1165 1 is_stmt 0 view .LVU303
 1193 0000 30B4     		push	{r4, r5}
 1194              	.LCFI15:
 1195              		.cfi_def_cfa_offset 8
 1196              		.cfi_offset 4, -8
 1197              		.cfi_offset 5, -4
1166:uCOSII/Source/os_core.c ****     OS_EVENT  *pevent;
 1198              		.loc 1 1166 5 is_stmt 1 view .LVU304
1167:uCOSII/Source/os_core.c ****     INT8U      y;
 1199              		.loc 1 1167 5 view .LVU305
1168:uCOSII/Source/os_core.c **** 
 1200              		.loc 1 1168 5 view .LVU306
1171:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)pevents_wait;       /* Store ptr to ECBs in TCB    
 1201              		.loc 1 1171 5 view .LVU307
1171:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)pevents_wait;       /* Store ptr to ECBs in TCB    
 1202              		.loc 1 1171 13 is_stmt 0 view .LVU308
 1203 0002 154B     		ldr	r3, .L95
 1204 0004 1C68     		ldr	r4, [r3]
1171:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)pevents_wait;       /* Store ptr to ECBs in TCB    
 1205              		.loc 1 1171 34 view .LVU309
 1206 0006 0023     		movs	r3, #0
 1207 0008 E361     		str	r3, [r4, #28]
1172:uCOSII/Source/os_core.c **** 
 1208              		.loc 1 1172 5 is_stmt 1 view .LVU310
1172:uCOSII/Source/os_core.c **** 
 1209              		.loc 1 1172 34 is_stmt 0 view .LVU311
 1210 000a 2062     		str	r0, [r4, #32]
1174:uCOSII/Source/os_core.c ****     pevent  = *pevents;
 1211              		.loc 1 1174 5 is_stmt 1 view .LVU312
 1212              	.LVL63:
1175:uCOSII/Source/os_core.c ****     while (pevent != (OS_EVENT *)0) {                               /* Put task in waiting lists   
 1213              		.loc 1 1175 5 view .LVU313
1175:uCOSII/Source/os_core.c ****     while (pevent != (OS_EVENT *)0) {                               /* Put task in waiting lists   
 1214              		.loc 1 1175 13 is_stmt 0 view .LVU314
 1215 000c 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccxgEmFy.s 			page 58


 1216              	.LVL64:
1176:uCOSII/Source/os_core.c ****         pevent->OSEventTbl[OSTCBCur->OSTCBY] |= OSTCBCur->OSTCBBitX;
 1217              		.loc 1 1176 5 is_stmt 1 view .LVU315
 1218              	.L90:
1176:uCOSII/Source/os_core.c ****         pevent->OSEventTbl[OSTCBCur->OSTCBY] |= OSTCBCur->OSTCBBitX;
 1219              		.loc 1 1176 11 view .LVU316
 1220 000e 7BB1     		cbz	r3, .L94
1177:uCOSII/Source/os_core.c ****         pevent->OSEventGrp                   |= OSTCBCur->OSTCBBitY;
 1221              		.loc 1 1177 9 view .LVU317
1177:uCOSII/Source/os_core.c ****         pevent->OSEventGrp                   |= OSTCBCur->OSTCBBitY;
 1222              		.loc 1 1177 36 is_stmt 0 view .LVU318
 1223 0010 94F83820 		ldrb	r2, [r4, #56]	@ zero_extendqisi2
1177:uCOSII/Source/os_core.c ****         pevent->OSEventGrp                   |= OSTCBCur->OSTCBBitY;
 1224              		.loc 1 1177 57 view .LVU319
 1225 0014 94F83910 		ldrb	r1, [r4, #57]	@ zero_extendqisi2
1177:uCOSII/Source/os_core.c ****         pevent->OSEventGrp                   |= OSTCBCur->OSTCBBitY;
 1226              		.loc 1 1177 46 view .LVU320
 1227 0018 1A44     		add	r2, r2, r3
 1228 001a D57A     		ldrb	r5, [r2, #11]	@ zero_extendqisi2
 1229 001c 2943     		orrs	r1, r1, r5
 1230 001e D172     		strb	r1, [r2, #11]
1178:uCOSII/Source/os_core.c ****         pevents++;
 1231              		.loc 1 1178 9 is_stmt 1 view .LVU321
1178:uCOSII/Source/os_core.c ****         pevents++;
 1232              		.loc 1 1178 57 is_stmt 0 view .LVU322
 1233 0020 94F83A20 		ldrb	r2, [r4, #58]	@ zero_extendqisi2
1178:uCOSII/Source/os_core.c ****         pevents++;
 1234              		.loc 1 1178 46 view .LVU323
 1235 0024 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 1236 0026 0A43     		orrs	r2, r2, r1
 1237 0028 9A72     		strb	r2, [r3, #10]
1179:uCOSII/Source/os_core.c ****         pevent = *pevents;
 1238              		.loc 1 1179 9 is_stmt 1 view .LVU324
 1239              	.LVL65:
1180:uCOSII/Source/os_core.c ****     }
 1240              		.loc 1 1180 9 view .LVU325
1180:uCOSII/Source/os_core.c ****     }
 1241              		.loc 1 1180 16 is_stmt 0 view .LVU326
 1242 002a 50F8043F 		ldr	r3, [r0, #4]!
 1243              	.LVL66:
1180:uCOSII/Source/os_core.c ****     }
 1244              		.loc 1 1180 16 view .LVU327
 1245 002e EEE7     		b	.L90
 1246              	.L94:
1183:uCOSII/Source/os_core.c ****     OSRdyTbl[y]  &= (OS_PRIO)~OSTCBCur->OSTCBBitX;
 1247              		.loc 1 1183 5 is_stmt 1 view .LVU328
1183:uCOSII/Source/os_core.c ****     OSRdyTbl[y]  &= (OS_PRIO)~OSTCBCur->OSTCBBitX;
 1248              		.loc 1 1183 19 is_stmt 0 view .LVU329
 1249 0030 94F83820 		ldrb	r2, [r4, #56]	@ zero_extendqisi2
 1250              	.LVL67:
1184:uCOSII/Source/os_core.c ****     if (OSRdyTbl[y] == 0u) {                      /* Clear event grp bit if this was only task pend
 1251              		.loc 1 1184 5 is_stmt 1 view .LVU330
1184:uCOSII/Source/os_core.c ****     if (OSRdyTbl[y] == 0u) {                      /* Clear event grp bit if this was only task pend
 1252              		.loc 1 1184 39 is_stmt 0 view .LVU331
 1253 0034 94F83900 		ldrb	r0, [r4, #57]	@ zero_extendqisi2
 1254              	.LVL68:
1184:uCOSII/Source/os_core.c ****     if (OSRdyTbl[y] == 0u) {                      /* Clear event grp bit if this was only task pend
ARM GAS  /tmp/ccxgEmFy.s 			page 59


 1255              		.loc 1 1184 18 view .LVU332
 1256 0038 0849     		ldr	r1, .L95+4
 1257 003a 8B5C     		ldrb	r3, [r1, r2]	@ zero_extendqisi2
 1258              	.LVL69:
1184:uCOSII/Source/os_core.c ****     if (OSRdyTbl[y] == 0u) {                      /* Clear event grp bit if this was only task pend
 1259              		.loc 1 1184 18 view .LVU333
 1260 003c 23EA0003 		bic	r3, r3, r0
 1261 0040 8B54     		strb	r3, [r1, r2]
1185:uCOSII/Source/os_core.c ****         OSRdyGrp &= (OS_PRIO)~OSTCBCur->OSTCBBitY;
 1262              		.loc 1 1185 5 is_stmt 1 view .LVU334
1185:uCOSII/Source/os_core.c ****         OSRdyGrp &= (OS_PRIO)~OSTCBCur->OSTCBBitY;
 1263              		.loc 1 1185 8 is_stmt 0 view .LVU335
 1264 0042 33B9     		cbnz	r3, .L89
1186:uCOSII/Source/os_core.c ****     }
 1265              		.loc 1 1186 9 is_stmt 1 view .LVU336
1186:uCOSII/Source/os_core.c ****     }
 1266              		.loc 1 1186 39 is_stmt 0 view .LVU337
 1267 0044 94F83A10 		ldrb	r1, [r4, #58]	@ zero_extendqisi2
1186:uCOSII/Source/os_core.c ****     }
 1268              		.loc 1 1186 18 view .LVU338
 1269 0048 054A     		ldr	r2, .L95+8
 1270              	.LVL70:
1186:uCOSII/Source/os_core.c ****     }
 1271              		.loc 1 1186 18 view .LVU339
 1272 004a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1273 004c 23EA0103 		bic	r3, r3, r1
 1274 0050 1370     		strb	r3, [r2]
 1275              	.L89:
1188:uCOSII/Source/os_core.c **** #endif
 1276              		.loc 1 1188 1 view .LVU340
 1277 0052 30BC     		pop	{r4, r5}
 1278              	.LCFI16:
 1279              		.cfi_restore 5
 1280              		.cfi_restore 4
 1281              		.cfi_def_cfa_offset 0
 1282              	.LVL71:
1188:uCOSII/Source/os_core.c **** #endif
 1283              		.loc 1 1188 1 view .LVU341
 1284 0054 7047     		bx	lr
 1285              	.L96:
 1286 0056 00BF     		.align	2
 1287              	.L95:
 1288 0058 00000000 		.word	OSTCBCur
 1289 005c 00000000 		.word	OSRdyTbl
 1290 0060 00000000 		.word	OSRdyGrp
 1291              		.cfi_endproc
 1292              	.LFE15:
 1294              		.section	.text.OS_EventTaskRemove,"ax",%progbits
 1295              		.align	1
 1296              		.global	OS_EventTaskRemove
 1297              		.syntax unified
 1298              		.thumb
 1299              		.thumb_func
 1300              		.fpu fpv4-sp-d16
 1302              	OS_EventTaskRemove:
 1303              	.LVL72:
 1304              	.LFB16:
ARM GAS  /tmp/ccxgEmFy.s 			page 60


1209:uCOSII/Source/os_core.c ****     INT8U  y;
 1305              		.loc 1 1209 1 is_stmt 1 view -0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 0
 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 1309              		@ link register save eliminated.
1209:uCOSII/Source/os_core.c ****     INT8U  y;
 1310              		.loc 1 1209 1 is_stmt 0 view .LVU343
 1311 0000 10B4     		push	{r4}
 1312              	.LCFI17:
 1313              		.cfi_def_cfa_offset 4
 1314              		.cfi_offset 4, -4
1210:uCOSII/Source/os_core.c **** 
 1315              		.loc 1 1210 5 is_stmt 1 view .LVU344
1213:uCOSII/Source/os_core.c ****     pevent->OSEventTbl[y]  &= (OS_PRIO)~ptcb->OSTCBBitX;    /* Remove task from wait list          
 1316              		.loc 1 1213 5 view .LVU345
1213:uCOSII/Source/os_core.c ****     pevent->OSEventTbl[y]  &= (OS_PRIO)~ptcb->OSTCBBitX;    /* Remove task from wait list          
 1317              		.loc 1 1213 29 is_stmt 0 view .LVU346
 1318 0002 90F83820 		ldrb	r2, [r0, #56]	@ zero_extendqisi2
 1319              	.LVL73:
1214:uCOSII/Source/os_core.c ****     if (pevent->OSEventTbl[y] == 0u) {
 1320              		.loc 1 1214 5 is_stmt 1 view .LVU347
1214:uCOSII/Source/os_core.c ****     if (pevent->OSEventTbl[y] == 0u) {
 1321              		.loc 1 1214 45 is_stmt 0 view .LVU348
 1322 0006 90F83940 		ldrb	r4, [r0, #57]	@ zero_extendqisi2
1214:uCOSII/Source/os_core.c ****     if (pevent->OSEventTbl[y] == 0u) {
 1323              		.loc 1 1214 28 view .LVU349
 1324 000a 0A44     		add	r2, r2, r1
 1325              	.LVL74:
1214:uCOSII/Source/os_core.c ****     if (pevent->OSEventTbl[y] == 0u) {
 1326              		.loc 1 1214 28 view .LVU350
 1327 000c D37A     		ldrb	r3, [r2, #11]	@ zero_extendqisi2
 1328 000e 23EA0403 		bic	r3, r3, r4
 1329 0012 D372     		strb	r3, [r2, #11]
 1330              	.LVL75:
1215:uCOSII/Source/os_core.c ****         pevent->OSEventGrp &= (OS_PRIO)~ptcb->OSTCBBitY;
 1331              		.loc 1 1215 5 is_stmt 1 view .LVU351
1215:uCOSII/Source/os_core.c ****         pevent->OSEventGrp &= (OS_PRIO)~ptcb->OSTCBBitY;
 1332              		.loc 1 1215 8 is_stmt 0 view .LVU352
 1333 0014 2BB9     		cbnz	r3, .L98
1216:uCOSII/Source/os_core.c ****     }
 1334              		.loc 1 1216 9 is_stmt 1 view .LVU353
1216:uCOSII/Source/os_core.c ****     }
 1335              		.loc 1 1216 45 is_stmt 0 view .LVU354
 1336 0016 90F83A20 		ldrb	r2, [r0, #58]	@ zero_extendqisi2
1216:uCOSII/Source/os_core.c ****     }
 1337              		.loc 1 1216 28 view .LVU355
 1338 001a 8B7A     		ldrb	r3, [r1, #10]	@ zero_extendqisi2
 1339 001c 23EA0203 		bic	r3, r3, r2
 1340 0020 8B72     		strb	r3, [r1, #10]
 1341              	.L98:
1218:uCOSII/Source/os_core.c **** }
 1342              		.loc 1 1218 5 is_stmt 1 view .LVU356
1218:uCOSII/Source/os_core.c **** }
 1343              		.loc 1 1218 29 is_stmt 0 view .LVU357
 1344 0022 0023     		movs	r3, #0
 1345 0024 C361     		str	r3, [r0, #28]
ARM GAS  /tmp/ccxgEmFy.s 			page 61


1219:uCOSII/Source/os_core.c **** #endif
 1346              		.loc 1 1219 1 view .LVU358
 1347 0026 5DF8044B 		ldr	r4, [sp], #4
 1348              	.LCFI18:
 1349              		.cfi_restore 4
 1350              		.cfi_def_cfa_offset 0
 1351 002a 7047     		bx	lr
 1352              		.cfi_endproc
 1353              	.LFE16:
 1355              		.section	.text.OS_EventTaskRemoveMulti,"ax",%progbits
 1356              		.align	1
 1357              		.global	OS_EventTaskRemoveMulti
 1358              		.syntax unified
 1359              		.thumb
 1360              		.thumb_func
 1361              		.fpu fpv4-sp-d16
 1363              	OS_EventTaskRemoveMulti:
 1364              	.LVL76:
 1365              	.LFB17:
1240:uCOSII/Source/os_core.c ****     OS_EVENT **pevents;
 1366              		.loc 1 1240 1 is_stmt 1 view -0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 0
 1369              		@ frame_needed = 0, uses_anonymous_args = 0
 1370              		@ link register save eliminated.
1240:uCOSII/Source/os_core.c ****     OS_EVENT **pevents;
 1371              		.loc 1 1240 1 is_stmt 0 view .LVU360
 1372 0000 70B4     		push	{r4, r5, r6}
 1373              	.LCFI19:
 1374              		.cfi_def_cfa_offset 12
 1375              		.cfi_offset 4, -12
 1376              		.cfi_offset 5, -8
 1377              		.cfi_offset 6, -4
1241:uCOSII/Source/os_core.c ****     OS_EVENT  *pevent;
 1378              		.loc 1 1241 5 is_stmt 1 view .LVU361
1242:uCOSII/Source/os_core.c ****     INT8U      y;
 1379              		.loc 1 1242 5 view .LVU362
1243:uCOSII/Source/os_core.c ****     OS_PRIO    bity;
 1380              		.loc 1 1243 5 view .LVU363
1244:uCOSII/Source/os_core.c ****     OS_PRIO    bitx;
 1381              		.loc 1 1244 5 view .LVU364
1245:uCOSII/Source/os_core.c **** 
 1382              		.loc 1 1245 5 view .LVU365
1248:uCOSII/Source/os_core.c ****     bity    =  ptcb->OSTCBBitY;
 1383              		.loc 1 1248 5 view .LVU366
1248:uCOSII/Source/os_core.c ****     bity    =  ptcb->OSTCBBitY;
 1384              		.loc 1 1248 13 is_stmt 0 view .LVU367
 1385 0002 90F83850 		ldrb	r5, [r0, #56]	@ zero_extendqisi2
 1386              	.LVL77:
1249:uCOSII/Source/os_core.c ****     bitx    =  ptcb->OSTCBBitX;
 1387              		.loc 1 1249 5 is_stmt 1 view .LVU368
1249:uCOSII/Source/os_core.c ****     bitx    =  ptcb->OSTCBBitX;
 1388              		.loc 1 1249 13 is_stmt 0 view .LVU369
 1389 0006 90F83A60 		ldrb	r6, [r0, #58]	@ zero_extendqisi2
 1390              	.LVL78:
1250:uCOSII/Source/os_core.c ****     pevents =  pevents_multi;
 1391              		.loc 1 1250 5 is_stmt 1 view .LVU370
ARM GAS  /tmp/ccxgEmFy.s 			page 62


1250:uCOSII/Source/os_core.c ****     pevents =  pevents_multi;
 1392              		.loc 1 1250 13 is_stmt 0 view .LVU371
 1393 000a 90F83940 		ldrb	r4, [r0, #57]	@ zero_extendqisi2
 1394              	.LVL79:
1251:uCOSII/Source/os_core.c ****     pevent  = *pevents;
 1395              		.loc 1 1251 5 is_stmt 1 view .LVU372
1252:uCOSII/Source/os_core.c ****     while (pevent != (OS_EVENT *)0) {                   /* Remove task from all events' wait lists 
 1396              		.loc 1 1252 5 view .LVU373
1252:uCOSII/Source/os_core.c ****     while (pevent != (OS_EVENT *)0) {                   /* Remove task from all events' wait lists 
 1397              		.loc 1 1252 13 is_stmt 0 view .LVU374
 1398 000e 0A68     		ldr	r2, [r1]
 1399              	.LVL80:
1253:uCOSII/Source/os_core.c ****         pevent->OSEventTbl[y]  &= (OS_PRIO)~bitx;
 1400              		.loc 1 1253 5 is_stmt 1 view .LVU375
1253:uCOSII/Source/os_core.c ****         pevent->OSEventTbl[y]  &= (OS_PRIO)~bitx;
 1401              		.loc 1 1253 11 is_stmt 0 view .LVU376
 1402 0010 01E0     		b	.L101
 1403              	.LVL81:
 1404              	.L102:
1258:uCOSII/Source/os_core.c ****         pevent = *pevents;
 1405              		.loc 1 1258 9 is_stmt 1 view .LVU377
1259:uCOSII/Source/os_core.c ****     }
 1406              		.loc 1 1259 9 view .LVU378
1259:uCOSII/Source/os_core.c ****     }
 1407              		.loc 1 1259 16 is_stmt 0 view .LVU379
 1408 0012 51F8042F 		ldr	r2, [r1, #4]!
 1409              	.LVL82:
 1410              	.L101:
1253:uCOSII/Source/os_core.c ****         pevent->OSEventTbl[y]  &= (OS_PRIO)~bitx;
 1411              		.loc 1 1253 11 is_stmt 1 view .LVU380
 1412 0016 5AB1     		cbz	r2, .L105
1254:uCOSII/Source/os_core.c ****         if (pevent->OSEventTbl[y] == 0u) {
 1413              		.loc 1 1254 9 view .LVU381
1254:uCOSII/Source/os_core.c ****         if (pevent->OSEventTbl[y] == 0u) {
 1414              		.loc 1 1254 32 is_stmt 0 view .LVU382
 1415 0018 5019     		adds	r0, r2, r5
 1416 001a C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1417 001c 23EA0403 		bic	r3, r3, r4
 1418 0020 C372     		strb	r3, [r0, #11]
1255:uCOSII/Source/os_core.c ****             pevent->OSEventGrp &= (OS_PRIO)~bity;
 1419              		.loc 1 1255 9 is_stmt 1 view .LVU383
1255:uCOSII/Source/os_core.c ****             pevent->OSEventGrp &= (OS_PRIO)~bity;
 1420              		.loc 1 1255 12 is_stmt 0 view .LVU384
 1421 0022 002B     		cmp	r3, #0
 1422 0024 F5D1     		bne	.L102
1256:uCOSII/Source/os_core.c ****         }
 1423              		.loc 1 1256 13 is_stmt 1 view .LVU385
1256:uCOSII/Source/os_core.c ****         }
 1424              		.loc 1 1256 32 is_stmt 0 view .LVU386
 1425 0026 937A     		ldrb	r3, [r2, #10]	@ zero_extendqisi2
 1426 0028 23EA0603 		bic	r3, r3, r6
 1427 002c 9372     		strb	r3, [r2, #10]
 1428 002e F0E7     		b	.L102
 1429              	.L105:
1261:uCOSII/Source/os_core.c **** #endif
 1430              		.loc 1 1261 1 view .LVU387
 1431 0030 70BC     		pop	{r4, r5, r6}
ARM GAS  /tmp/ccxgEmFy.s 			page 63


 1432              	.LCFI20:
 1433              		.cfi_restore 6
 1434              		.cfi_restore 5
 1435              		.cfi_restore 4
 1436              		.cfi_def_cfa_offset 0
 1437              	.LVL83:
1261:uCOSII/Source/os_core.c **** #endif
 1438              		.loc 1 1261 1 view .LVU388
 1439 0032 7047     		bx	lr
 1440              		.cfi_endproc
 1441              	.LFE17:
 1443              		.section	.text.OS_EventTaskRdy,"ax",%progbits
 1444              		.align	1
 1445              		.global	OS_EventTaskRdy
 1446              		.syntax unified
 1447              		.thumb
 1448              		.thumb_func
 1449              		.fpu fpv4-sp-d16
 1451              	OS_EventTaskRdy:
 1452              	.LVL84:
 1453              	.LFB13:
1059:uCOSII/Source/os_core.c ****     OS_TCB   *ptcb;
 1454              		.loc 1 1059 1 is_stmt 1 view -0
 1455              		.cfi_startproc
 1456              		@ args = 0, pretend = 0, frame = 0
 1457              		@ frame_needed = 0, uses_anonymous_args = 0
1059:uCOSII/Source/os_core.c ****     OS_TCB   *ptcb;
 1458              		.loc 1 1059 1 is_stmt 0 view .LVU390
 1459 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1460              	.LCFI21:
 1461              		.cfi_def_cfa_offset 24
 1462              		.cfi_offset 3, -24
 1463              		.cfi_offset 4, -20
 1464              		.cfi_offset 5, -16
 1465              		.cfi_offset 6, -12
 1466              		.cfi_offset 7, -8
 1467              		.cfi_offset 14, -4
 1468 0002 0646     		mov	r6, r0
1060:uCOSII/Source/os_core.c ****     INT8U     y;
 1469              		.loc 1 1060 5 is_stmt 1 view .LVU391
1061:uCOSII/Source/os_core.c ****     INT8U     x;
 1470              		.loc 1 1061 5 view .LVU392
1062:uCOSII/Source/os_core.c ****     INT8U     prio;
 1471              		.loc 1 1062 5 view .LVU393
1063:uCOSII/Source/os_core.c **** #if OS_LOWEST_PRIO > 63u
 1472              		.loc 1 1063 5 view .LVU394
1070:uCOSII/Source/os_core.c ****     x    = OSUnMapTbl[pevent->OSEventTbl[y]];
 1473              		.loc 1 1070 5 view .LVU395
1070:uCOSII/Source/os_core.c ****     x    = OSUnMapTbl[pevent->OSEventTbl[y]];
 1474              		.loc 1 1070 29 is_stmt 0 view .LVU396
 1475 0004 807A     		ldrb	r0, [r0, #10]	@ zero_extendqisi2
 1476              	.LVL85:
1070:uCOSII/Source/os_core.c ****     x    = OSUnMapTbl[pevent->OSEventTbl[y]];
 1477              		.loc 1 1070 10 view .LVU397
 1478 0006 194C     		ldr	r4, .L110
 1479 0008 205C     		ldrb	r0, [r4, r0]	@ zero_extendqisi2
1071:uCOSII/Source/os_core.c ****     prio = (INT8U)((y << 3u) + x);                      /* Find priority of task getting the msg   
ARM GAS  /tmp/ccxgEmFy.s 			page 64


 1480              		.loc 1 1071 5 is_stmt 1 view .LVU398
1071:uCOSII/Source/os_core.c ****     prio = (INT8U)((y << 3u) + x);                      /* Find priority of task getting the msg   
 1481              		.loc 1 1071 41 is_stmt 0 view .LVU399
 1482 000a 3518     		adds	r5, r6, r0
 1483 000c ED7A     		ldrb	r5, [r5, #11]	@ zero_extendqisi2
1071:uCOSII/Source/os_core.c ****     prio = (INT8U)((y << 3u) + x);                      /* Find priority of task getting the msg   
 1484              		.loc 1 1071 10 view .LVU400
 1485 000e 645D     		ldrb	r4, [r4, r5]	@ zero_extendqisi2
 1486              	.LVL86:
1072:uCOSII/Source/os_core.c **** #else
 1487              		.loc 1 1072 5 is_stmt 1 view .LVU401
1072:uCOSII/Source/os_core.c **** #else
 1488              		.loc 1 1072 23 is_stmt 0 view .LVU402
 1489 0010 C500     		lsls	r5, r0, #3
 1490 0012 EDB2     		uxtb	r5, r5
1072:uCOSII/Source/os_core.c **** #else
 1491              		.loc 1 1072 10 view .LVU403
 1492 0014 2544     		add	r5, r5, r4
 1493 0016 EDB2     		uxtb	r5, r5
 1494              	.LVL87:
1088:uCOSII/Source/os_core.c ****     ptcb->OSTCBDly        =  0u;                        /* Prevent OSTimeTick() from readying task 
 1495              		.loc 1 1088 5 is_stmt 1 view .LVU404
1088:uCOSII/Source/os_core.c ****     ptcb->OSTCBDly        =  0u;                        /* Prevent OSTimeTick() from readying task 
 1496              		.loc 1 1088 27 is_stmt 0 view .LVU405
 1497 0018 154C     		ldr	r4, .L110+4
 1498              	.LVL88:
1088:uCOSII/Source/os_core.c ****     ptcb->OSTCBDly        =  0u;                        /* Prevent OSTimeTick() from readying task 
 1499              		.loc 1 1088 27 view .LVU406
 1500 001a 54F82540 		ldr	r4, [r4, r5, lsl #2]
 1501              	.LVL89:
1089:uCOSII/Source/os_core.c **** #if ((OS_Q_EN > 0u) && (OS_MAX_QS > 0u)) || (OS_MBOX_EN > 0u)
 1502              		.loc 1 1089 5 is_stmt 1 view .LVU407
1089:uCOSII/Source/os_core.c **** #if ((OS_Q_EN > 0u) && (OS_MAX_QS > 0u)) || (OS_MBOX_EN > 0u)
 1503              		.loc 1 1089 27 is_stmt 0 view .LVU408
 1504 001e 0027     		movs	r7, #0
 1505 0020 2763     		str	r7, [r4, #48]
 1506              	.LVL90:
1091:uCOSII/Source/os_core.c **** #else
 1507              		.loc 1 1091 5 is_stmt 1 view .LVU409
1091:uCOSII/Source/os_core.c **** #else
 1508              		.loc 1 1091 27 is_stmt 0 view .LVU410
 1509 0022 6162     		str	r1, [r4, #36]
1095:uCOSII/Source/os_core.c ****     ptcb->OSTCBStatPend   =  pend_stat;                 /* Set pend status of post or abort        
 1510              		.loc 1 1095 5 is_stmt 1 view .LVU411
1095:uCOSII/Source/os_core.c ****     ptcb->OSTCBStatPend   =  pend_stat;                 /* Set pend status of post or abort        
 1511              		.loc 1 1095 26 is_stmt 0 view .LVU412
 1512 0024 94F83410 		ldrb	r1, [r4, #52]	@ zero_extendqisi2
 1513              	.LVL91:
1095:uCOSII/Source/os_core.c ****     ptcb->OSTCBStatPend   =  pend_stat;                 /* Set pend status of post or abort        
 1514              		.loc 1 1095 26 view .LVU413
 1515 0028 21EA0202 		bic	r2, r1, r2
 1516              	.LVL92:
1095:uCOSII/Source/os_core.c ****     ptcb->OSTCBStatPend   =  pend_stat;                 /* Set pend status of post or abort        
 1517              		.loc 1 1095 26 view .LVU414
 1518 002c 84F83420 		strb	r2, [r4, #52]
1096:uCOSII/Source/os_core.c ****                                                         /* See if task is ready (could be susp'd)  
 1519              		.loc 1 1096 5 is_stmt 1 view .LVU415
ARM GAS  /tmp/ccxgEmFy.s 			page 65


1096:uCOSII/Source/os_core.c ****                                                         /* See if task is ready (could be susp'd)  
 1520              		.loc 1 1096 27 is_stmt 0 view .LVU416
 1521 0030 84F83530 		strb	r3, [r4, #53]
1098:uCOSII/Source/os_core.c ****         OSRdyGrp         |=  ptcb->OSTCBBitY;           /* Put task in the ready to run list       
 1522              		.loc 1 1098 5 is_stmt 1 view .LVU417
1098:uCOSII/Source/os_core.c ****         OSRdyGrp         |=  ptcb->OSTCBBitY;           /* Put task in the ready to run list       
 1523              		.loc 1 1098 8 is_stmt 0 view .LVU418
 1524 0034 12F0080F 		tst	r2, #8
 1525 0038 0BD1     		bne	.L107
1099:uCOSII/Source/os_core.c ****         OSRdyTbl[y]      |=  ptcb->OSTCBBitX;
 1526              		.loc 1 1099 9 is_stmt 1 view .LVU419
1099:uCOSII/Source/os_core.c ****         OSRdyTbl[y]      |=  ptcb->OSTCBBitX;
 1527              		.loc 1 1099 34 is_stmt 0 view .LVU420
 1528 003a 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 1529              	.LVL93:
1099:uCOSII/Source/os_core.c ****         OSRdyTbl[y]      |=  ptcb->OSTCBBitX;
 1530              		.loc 1 1099 26 view .LVU421
 1531 003e 0D4A     		ldr	r2, .L110+8
 1532 0040 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1533 0042 0B43     		orrs	r3, r3, r1
 1534 0044 1370     		strb	r3, [r2]
1100:uCOSII/Source/os_core.c ****     }
 1535              		.loc 1 1100 9 is_stmt 1 view .LVU422
1100:uCOSII/Source/os_core.c ****     }
 1536              		.loc 1 1100 34 is_stmt 0 view .LVU423
 1537 0046 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
1100:uCOSII/Source/os_core.c ****     }
 1538              		.loc 1 1100 26 view .LVU424
 1539 004a 0B4A     		ldr	r2, .L110+12
 1540 004c 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 1541 004e 0B43     		orrs	r3, r3, r1
 1542 0050 1354     		strb	r3, [r2, r0]
 1543              	.L107:
1103:uCOSII/Source/os_core.c **** #if (OS_EVENT_MULTI_EN > 0u)
 1544              		.loc 1 1103 5 is_stmt 1 view .LVU425
 1545 0052 3146     		mov	r1, r6
 1546 0054 2046     		mov	r0, r4
 1547 0056 FFF7FEFF 		bl	OS_EventTaskRemove
 1548              	.LVL94:
1105:uCOSII/Source/os_core.c ****         OS_EventTaskRemoveMulti(ptcb, ptcb->OSTCBEventMultiPtr);
 1549              		.loc 1 1105 5 view .LVU426
1105:uCOSII/Source/os_core.c ****         OS_EventTaskRemoveMulti(ptcb, ptcb->OSTCBEventMultiPtr);
 1550              		.loc 1 1105 13 is_stmt 0 view .LVU427
 1551 005a 216A     		ldr	r1, [r4, #32]
1105:uCOSII/Source/os_core.c ****         OS_EventTaskRemoveMulti(ptcb, ptcb->OSTCBEventMultiPtr);
 1552              		.loc 1 1105 8 view .LVU428
 1553 005c 19B1     		cbz	r1, .L108
1106:uCOSII/Source/os_core.c ****         ptcb->OSTCBEventPtr       = (OS_EVENT  *)pevent;/* Return event as first multi-pend event r
 1554              		.loc 1 1106 9 is_stmt 1 view .LVU429
 1555 005e 2046     		mov	r0, r4
 1556 0060 FFF7FEFF 		bl	OS_EventTaskRemoveMulti
 1557              	.LVL95:
1107:uCOSII/Source/os_core.c ****     }
 1558              		.loc 1 1107 9 view .LVU430
1107:uCOSII/Source/os_core.c ****     }
 1559              		.loc 1 1107 35 is_stmt 0 view .LVU431
 1560 0064 E661     		str	r6, [r4, #28]
ARM GAS  /tmp/ccxgEmFy.s 			page 66


 1561              	.L108:
1111:uCOSII/Source/os_core.c **** }
 1562              		.loc 1 1111 5 is_stmt 1 view .LVU432
1112:uCOSII/Source/os_core.c **** #endif
 1563              		.loc 1 1112 1 is_stmt 0 view .LVU433
 1564 0066 2846     		mov	r0, r5
 1565 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1566              	.LVL96:
 1567              	.L111:
1112:uCOSII/Source/os_core.c **** #endif
 1568              		.loc 1 1112 1 view .LVU434
 1569 006a 00BF     		.align	2
 1570              	.L110:
 1571 006c 00000000 		.word	.LANCHOR0
 1572 0070 00000000 		.word	OSTCBPrioTbl
 1573 0074 00000000 		.word	OSRdyGrp
 1574 0078 00000000 		.word	OSRdyTbl
 1575              		.cfi_endproc
 1576              	.LFE13:
 1578              		.section	.text.OS_EventWaitListInit,"ax",%progbits
 1579              		.align	1
 1580              		.global	OS_EventWaitListInit
 1581              		.syntax unified
 1582              		.thumb
 1583              		.thumb_func
 1584              		.fpu fpv4-sp-d16
 1586              	OS_EventWaitListInit:
 1587              	.LVL97:
 1588              	.LFB18:
1279:uCOSII/Source/os_core.c ****     INT8U  i;
 1589              		.loc 1 1279 1 is_stmt 1 view -0
 1590              		.cfi_startproc
 1591              		@ args = 0, pretend = 0, frame = 0
 1592              		@ frame_needed = 0, uses_anonymous_args = 0
 1593              		@ link register save eliminated.
1280:uCOSII/Source/os_core.c **** 
 1594              		.loc 1 1280 5 view .LVU436
1283:uCOSII/Source/os_core.c ****     for (i = 0u; i < OS_EVENT_TBL_SIZE; i++) {
 1595              		.loc 1 1283 5 view .LVU437
1283:uCOSII/Source/os_core.c ****     for (i = 0u; i < OS_EVENT_TBL_SIZE; i++) {
 1596              		.loc 1 1283 24 is_stmt 0 view .LVU438
 1597 0000 0023     		movs	r3, #0
 1598 0002 8372     		strb	r3, [r0, #10]
1284:uCOSII/Source/os_core.c ****         pevent->OSEventTbl[i] = 0u;
 1599              		.loc 1 1284 5 is_stmt 1 view .LVU439
 1600              	.LVL98:
1284:uCOSII/Source/os_core.c ****         pevent->OSEventTbl[i] = 0u;
 1601              		.loc 1 1284 5 is_stmt 0 view .LVU440
 1602 0004 04E0     		b	.L113
 1603              	.LVL99:
 1604              	.L114:
1285:uCOSII/Source/os_core.c ****     }
 1605              		.loc 1 1285 9 is_stmt 1 discriminator 3 view .LVU441
1285:uCOSII/Source/os_core.c ****     }
 1606              		.loc 1 1285 31 is_stmt 0 discriminator 3 view .LVU442
 1607 0006 C218     		adds	r2, r0, r3
 1608 0008 0021     		movs	r1, #0
ARM GAS  /tmp/ccxgEmFy.s 			page 67


 1609 000a D172     		strb	r1, [r2, #11]
1284:uCOSII/Source/os_core.c ****         pevent->OSEventTbl[i] = 0u;
 1610              		.loc 1 1284 41 is_stmt 1 discriminator 3 view .LVU443
1284:uCOSII/Source/os_core.c ****         pevent->OSEventTbl[i] = 0u;
 1611              		.loc 1 1284 42 is_stmt 0 discriminator 3 view .LVU444
 1612 000c 0133     		adds	r3, r3, #1
 1613              	.LVL100:
1284:uCOSII/Source/os_core.c ****         pevent->OSEventTbl[i] = 0u;
 1614              		.loc 1 1284 42 discriminator 3 view .LVU445
 1615 000e DBB2     		uxtb	r3, r3
 1616              	.LVL101:
 1617              	.L113:
1284:uCOSII/Source/os_core.c ****         pevent->OSEventTbl[i] = 0u;
 1618              		.loc 1 1284 18 is_stmt 1 discriminator 1 view .LVU446
1284:uCOSII/Source/os_core.c ****         pevent->OSEventTbl[i] = 0u;
 1619              		.loc 1 1284 5 is_stmt 0 discriminator 1 view .LVU447
 1620 0010 072B     		cmp	r3, #7
 1621 0012 F8D9     		bls	.L114
1287:uCOSII/Source/os_core.c **** #endif
 1622              		.loc 1 1287 1 view .LVU448
 1623 0014 7047     		bx	lr
 1624              		.cfi_endproc
 1625              	.LFE18:
 1627              		.section	.text.OS_MemClr,"ax",%progbits
 1628              		.align	1
 1629              		.global	OS_MemClr
 1630              		.syntax unified
 1631              		.thumb
 1632              		.thumb_func
 1633              		.fpu fpv4-sp-d16
 1635              	OS_MemClr:
 1636              	.LVL102:
 1637              	.LFB25:
1604:uCOSII/Source/os_core.c ****     while (size > 0u) {
 1638              		.loc 1 1604 1 is_stmt 1 view -0
 1639              		.cfi_startproc
 1640              		@ args = 0, pretend = 0, frame = 0
 1641              		@ frame_needed = 0, uses_anonymous_args = 0
 1642              		@ link register save eliminated.
1605:uCOSII/Source/os_core.c ****         *pdest++ = (INT8U)0;
 1643              		.loc 1 1605 5 view .LVU450
 1644              	.L116:
1605:uCOSII/Source/os_core.c ****         *pdest++ = (INT8U)0;
 1645              		.loc 1 1605 11 view .LVU451
 1646 0000 29B1     		cbz	r1, .L118
1606:uCOSII/Source/os_core.c ****         size--;
 1647              		.loc 1 1606 9 view .LVU452
 1648              	.LVL103:
1606:uCOSII/Source/os_core.c ****         size--;
 1649              		.loc 1 1606 18 is_stmt 0 view .LVU453
 1650 0002 0023     		movs	r3, #0
 1651 0004 00F8013B 		strb	r3, [r0], #1
 1652              	.LVL104:
1607:uCOSII/Source/os_core.c ****     }
 1653              		.loc 1 1607 9 is_stmt 1 view .LVU454
1607:uCOSII/Source/os_core.c ****     }
 1654              		.loc 1 1607 13 is_stmt 0 view .LVU455
ARM GAS  /tmp/ccxgEmFy.s 			page 68


 1655 0008 0139     		subs	r1, r1, #1
 1656              	.LVL105:
1607:uCOSII/Source/os_core.c ****     }
 1657              		.loc 1 1607 13 view .LVU456
 1658 000a 89B2     		uxth	r1, r1
 1659              	.LVL106:
1607:uCOSII/Source/os_core.c ****     }
 1660              		.loc 1 1607 13 view .LVU457
 1661 000c F8E7     		b	.L116
 1662              	.L118:
1609:uCOSII/Source/os_core.c **** /*$PAGE*/
 1663              		.loc 1 1609 1 view .LVU458
 1664 000e 7047     		bx	lr
 1665              		.cfi_endproc
 1666              	.LFE25:
 1668              		.section	.rodata.OS_InitTCBList.str1.4,"aMS",%progbits,1
 1669              		.align	2
 1670              	.LC2:
 1671 0000 3F00     		.ascii	"?\000"
 1672              		.section	.text.OS_InitTCBList,"ax",%progbits
 1673              		.align	1
 1674              		.syntax unified
 1675              		.thumb
 1676              		.thumb_func
 1677              		.fpu fpv4-sp-d16
 1679              	OS_InitTCBList:
 1680              	.LFB24:
1555:uCOSII/Source/os_core.c ****     INT8U    ix;
 1681              		.loc 1 1555 1 is_stmt 1 view -0
 1682              		.cfi_startproc
 1683              		@ args = 0, pretend = 0, frame = 0
 1684              		@ frame_needed = 0, uses_anonymous_args = 0
 1685 0000 10B5     		push	{r4, lr}
 1686              	.LCFI22:
 1687              		.cfi_def_cfa_offset 8
 1688              		.cfi_offset 4, -8
 1689              		.cfi_offset 14, -4
1556:uCOSII/Source/os_core.c ****     INT8U    ix_next;
 1690              		.loc 1 1556 5 view .LVU460
1557:uCOSII/Source/os_core.c ****     OS_TCB  *ptcb1;
 1691              		.loc 1 1557 5 view .LVU461
1558:uCOSII/Source/os_core.c ****     OS_TCB  *ptcb2;
 1692              		.loc 1 1558 5 view .LVU462
1559:uCOSII/Source/os_core.c **** 
 1693              		.loc 1 1559 5 view .LVU463
1562:uCOSII/Source/os_core.c ****     OS_MemClr((INT8U *)&OSTCBPrioTbl[0], sizeof(OSTCBPrioTbl));  /* Clear the priority table       
 1694              		.loc 1 1562 5 view .LVU464
 1695 0002 4FF4F261 		mov	r1, #1936
 1696 0006 1248     		ldr	r0, .L123
 1697 0008 FFF7FEFF 		bl	OS_MemClr
 1698              	.LVL107:
1563:uCOSII/Source/os_core.c ****     for (ix = 0u; ix < (OS_MAX_TASKS + OS_N_SYS_TASKS - 1u); ix++) {    /* Init. list of free TCBs 
 1699              		.loc 1 1563 5 view .LVU465
 1700 000c 4FF48071 		mov	r1, #256
 1701 0010 1048     		ldr	r0, .L123+4
 1702 0012 FFF7FEFF 		bl	OS_MemClr
 1703              	.LVL108:
ARM GAS  /tmp/ccxgEmFy.s 			page 69


1564:uCOSII/Source/os_core.c ****         ix_next =  ix + 1u;
 1704              		.loc 1 1564 5 view .LVU466
1564:uCOSII/Source/os_core.c ****         ix_next =  ix + 1u;
 1705              		.loc 1 1564 13 is_stmt 0 view .LVU467
 1706 0016 0023     		movs	r3, #0
1564:uCOSII/Source/os_core.c ****         ix_next =  ix + 1u;
 1707              		.loc 1 1564 5 view .LVU468
 1708 0018 0BE0     		b	.L120
 1709              	.LVL109:
 1710              	.L121:
1565:uCOSII/Source/os_core.c ****         ptcb1   = &OSTCBTbl[ix];
 1711              		.loc 1 1565 9 is_stmt 1 discriminator 3 view .LVU469
1565:uCOSII/Source/os_core.c ****         ptcb1   = &OSTCBTbl[ix];
 1712              		.loc 1 1565 17 is_stmt 0 discriminator 3 view .LVU470
 1713 001a 5A1C     		adds	r2, r3, #1
 1714 001c D2B2     		uxtb	r2, r2
 1715              	.LVL110:
1566:uCOSII/Source/os_core.c ****         ptcb2   = &OSTCBTbl[ix_next];
 1716              		.loc 1 1566 9 is_stmt 1 discriminator 3 view .LVU471
1567:uCOSII/Source/os_core.c ****         ptcb1->OSTCBNext = ptcb2;
 1717              		.loc 1 1567 9 discriminator 3 view .LVU472
1567:uCOSII/Source/os_core.c ****         ptcb1->OSTCBNext = ptcb2;
 1718              		.loc 1 1567 17 is_stmt 0 discriminator 3 view .LVU473
 1719 001e 5820     		movs	r0, #88
 1720 0020 0B49     		ldr	r1, .L123
 1721 0022 00FB0214 		mla	r4, r0, r2, r1
 1722              	.LVL111:
1568:uCOSII/Source/os_core.c **** #if OS_TASK_NAME_EN > 0u
 1723              		.loc 1 1568 9 is_stmt 1 discriminator 3 view .LVU474
1568:uCOSII/Source/os_core.c **** #if OS_TASK_NAME_EN > 0u
 1724              		.loc 1 1568 26 is_stmt 0 discriminator 3 view .LVU475
 1725 0026 00FB0313 		mla	r3, r0, r3, r1
 1726              	.LVL112:
1568:uCOSII/Source/os_core.c **** #if OS_TASK_NAME_EN > 0u
 1727              		.loc 1 1568 26 discriminator 3 view .LVU476
 1728 002a 5C61     		str	r4, [r3, #20]
1570:uCOSII/Source/os_core.c **** #endif
 1729              		.loc 1 1570 9 is_stmt 1 discriminator 3 view .LVU477
1570:uCOSII/Source/os_core.c **** #endif
 1730              		.loc 1 1570 30 is_stmt 0 discriminator 3 view .LVU478
 1731 002c 0A49     		ldr	r1, .L123+8
 1732 002e 1965     		str	r1, [r3, #80]
1564:uCOSII/Source/os_core.c ****         ix_next =  ix + 1u;
 1733              		.loc 1 1564 62 is_stmt 1 discriminator 3 view .LVU479
 1734              	.LVL113:
1564:uCOSII/Source/os_core.c ****         ix_next =  ix + 1u;
 1735              		.loc 1 1564 64 is_stmt 0 discriminator 3 view .LVU480
 1736 0030 1346     		mov	r3, r2
 1737              	.LVL114:
 1738              	.L120:
1564:uCOSII/Source/os_core.c ****         ix_next =  ix + 1u;
 1739              		.loc 1 1564 19 is_stmt 1 discriminator 1 view .LVU481
1564:uCOSII/Source/os_core.c ****         ix_next =  ix + 1u;
 1740              		.loc 1 1564 5 is_stmt 0 discriminator 1 view .LVU482
 1741 0032 142B     		cmp	r3, #20
 1742 0034 F1D9     		bls	.L121
1573:uCOSII/Source/os_core.c ****     ptcb1->OSTCBNext        = (OS_TCB *)0;                       /* Last OS_TCB                    
ARM GAS  /tmp/ccxgEmFy.s 			page 70


 1743              		.loc 1 1573 5 is_stmt 1 view .LVU483
 1744              	.LVL115:
1574:uCOSII/Source/os_core.c **** #if OS_TASK_NAME_EN > 0u
 1745              		.loc 1 1574 5 view .LVU484
1574:uCOSII/Source/os_core.c **** #if OS_TASK_NAME_EN > 0u
 1746              		.loc 1 1574 29 is_stmt 0 view .LVU485
 1747 0036 064A     		ldr	r2, .L123
 1748 0038 5821     		movs	r1, #88
 1749 003a 01FB0323 		mla	r3, r1, r3, r2
 1750              	.LVL116:
1574:uCOSII/Source/os_core.c **** #if OS_TASK_NAME_EN > 0u
 1751              		.loc 1 1574 29 view .LVU486
 1752 003e 0021     		movs	r1, #0
 1753 0040 5961     		str	r1, [r3, #20]
1576:uCOSII/Source/os_core.c **** #endif
 1754              		.loc 1 1576 5 is_stmt 1 view .LVU487
1576:uCOSII/Source/os_core.c **** #endif
 1755              		.loc 1 1576 29 is_stmt 0 view .LVU488
 1756 0042 0548     		ldr	r0, .L123+8
 1757 0044 1865     		str	r0, [r3, #80]
1578:uCOSII/Source/os_core.c ****     OSTCBFreeList           = &OSTCBTbl[0];
 1758              		.loc 1 1578 5 is_stmt 1 view .LVU489
1578:uCOSII/Source/os_core.c ****     OSTCBFreeList           = &OSTCBTbl[0];
 1759              		.loc 1 1578 29 is_stmt 0 view .LVU490
 1760 0046 054B     		ldr	r3, .L123+12
 1761              	.LVL117:
1578:uCOSII/Source/os_core.c ****     OSTCBFreeList           = &OSTCBTbl[0];
 1762              		.loc 1 1578 29 view .LVU491
 1763 0048 1960     		str	r1, [r3]
1579:uCOSII/Source/os_core.c **** }
 1764              		.loc 1 1579 5 is_stmt 1 view .LVU492
1579:uCOSII/Source/os_core.c **** }
 1765              		.loc 1 1579 29 is_stmt 0 view .LVU493
 1766 004a 054B     		ldr	r3, .L123+16
 1767 004c 1A60     		str	r2, [r3]
1580:uCOSII/Source/os_core.c **** /*$PAGE*/
 1768              		.loc 1 1580 1 view .LVU494
 1769 004e 10BD     		pop	{r4, pc}
 1770              	.L124:
 1771              		.align	2
 1772              	.L123:
 1773 0050 00000000 		.word	OSTCBTbl
 1774 0054 00000000 		.word	OSTCBPrioTbl
 1775 0058 00000000 		.word	.LC2
 1776 005c 00000000 		.word	OSTCBList
 1777 0060 00000000 		.word	OSTCBFreeList
 1778              		.cfi_endproc
 1779              	.LFE24:
 1781              		.section	.text.OS_InitEventList,"ax",%progbits
 1782              		.align	1
 1783              		.syntax unified
 1784              		.thumb
 1785              		.thumb_func
 1786              		.fpu fpv4-sp-d16
 1788              	OS_InitEventList:
 1789              	.LFB19:
1304:uCOSII/Source/os_core.c **** #if (OS_EVENT_EN) && (OS_MAX_EVENTS > 0u)
ARM GAS  /tmp/ccxgEmFy.s 			page 71


 1790              		.loc 1 1304 1 is_stmt 1 view -0
 1791              		.cfi_startproc
 1792              		@ args = 0, pretend = 0, frame = 0
 1793              		@ frame_needed = 0, uses_anonymous_args = 0
 1794 0000 70B5     		push	{r4, r5, r6, lr}
 1795              	.LCFI23:
 1796              		.cfi_def_cfa_offset 16
 1797              		.cfi_offset 4, -16
 1798              		.cfi_offset 5, -12
 1799              		.cfi_offset 6, -8
 1800              		.cfi_offset 14, -4
1307:uCOSII/Source/os_core.c ****     INT16U     ix_next;
 1801              		.loc 1 1307 5 view .LVU496
1308:uCOSII/Source/os_core.c ****     OS_EVENT  *pevent1;
 1802              		.loc 1 1308 5 view .LVU497
1309:uCOSII/Source/os_core.c ****     OS_EVENT  *pevent2;
 1803              		.loc 1 1309 5 view .LVU498
1310:uCOSII/Source/os_core.c **** 
 1804              		.loc 1 1310 5 view .LVU499
1313:uCOSII/Source/os_core.c ****     for (ix = 0u; ix < (OS_MAX_EVENTS - 1u); ix++) {        /* Init. list of free EVENT control blo
 1805              		.loc 1 1313 5 view .LVU500
 1806 0002 4FF4F071 		mov	r1, #480
 1807 0006 1248     		ldr	r0, .L130
 1808 0008 FFF7FEFF 		bl	OS_MemClr
 1809              	.LVL118:
1314:uCOSII/Source/os_core.c ****         ix_next = ix + 1u;
 1810              		.loc 1 1314 5 view .LVU501
1314:uCOSII/Source/os_core.c ****         ix_next = ix + 1u;
 1811              		.loc 1 1314 13 is_stmt 0 view .LVU502
 1812 000c 0023     		movs	r3, #0
 1813              	.LVL119:
 1814              	.L126:
1314:uCOSII/Source/os_core.c ****         ix_next = ix + 1u;
 1815              		.loc 1 1314 19 is_stmt 1 discriminator 1 view .LVU503
1314:uCOSII/Source/os_core.c ****         ix_next = ix + 1u;
 1816              		.loc 1 1314 5 is_stmt 0 discriminator 1 view .LVU504
 1817 000e 122B     		cmp	r3, #18
 1818 0010 11D8     		bhi	.L129
1315:uCOSII/Source/os_core.c ****         pevent1 = &OSEventTbl[ix];
 1819              		.loc 1 1315 9 is_stmt 1 discriminator 3 view .LVU505
1315:uCOSII/Source/os_core.c ****         pevent1 = &OSEventTbl[ix];
 1820              		.loc 1 1315 17 is_stmt 0 discriminator 3 view .LVU506
 1821 0012 591C     		adds	r1, r3, #1
 1822 0014 89B2     		uxth	r1, r1
 1823              	.LVL120:
1316:uCOSII/Source/os_core.c ****         pevent2 = &OSEventTbl[ix_next];
 1824              		.loc 1 1316 9 is_stmt 1 discriminator 3 view .LVU507
1317:uCOSII/Source/os_core.c ****         pevent1->OSEventType    = OS_EVENT_TYPE_UNUSED;
 1825              		.loc 1 1317 9 discriminator 3 view .LVU508
1317:uCOSII/Source/os_core.c ****         pevent1->OSEventType    = OS_EVENT_TYPE_UNUSED;
 1826              		.loc 1 1317 17 is_stmt 0 discriminator 3 view .LVU509
 1827 0016 01EB4102 		add	r2, r1, r1, lsl #1
 1828 001a D000     		lsls	r0, r2, #3
 1829 001c 0C4A     		ldr	r2, .L130
 1830 001e 1044     		add	r0, r0, r2
 1831              	.LVL121:
1318:uCOSII/Source/os_core.c ****         pevent1->OSEventPtr     = pevent2;
ARM GAS  /tmp/ccxgEmFy.s 			page 72


 1832              		.loc 1 1318 9 is_stmt 1 discriminator 3 view .LVU510
1318:uCOSII/Source/os_core.c ****         pevent1->OSEventPtr     = pevent2;
 1833              		.loc 1 1318 33 is_stmt 0 discriminator 3 view .LVU511
 1834 0020 03EB4305 		add	r5, r3, r3, lsl #1
 1835 0024 EC00     		lsls	r4, r5, #3
 1836 0026 1519     		adds	r5, r2, r4
 1837 0028 0026     		movs	r6, #0
 1838 002a 1655     		strb	r6, [r2, r4]
1319:uCOSII/Source/os_core.c **** #if OS_EVENT_NAME_EN > 0u
 1839              		.loc 1 1319 9 is_stmt 1 discriminator 3 view .LVU512
1319:uCOSII/Source/os_core.c **** #if OS_EVENT_NAME_EN > 0u
 1840              		.loc 1 1319 33 is_stmt 0 discriminator 3 view .LVU513
 1841 002c 6860     		str	r0, [r5, #4]
1321:uCOSII/Source/os_core.c **** #endif
 1842              		.loc 1 1321 9 is_stmt 1 discriminator 3 view .LVU514
1321:uCOSII/Source/os_core.c **** #endif
 1843              		.loc 1 1321 33 is_stmt 0 discriminator 3 view .LVU515
 1844 002e 094B     		ldr	r3, .L130+4
 1845              	.LVL122:
1321:uCOSII/Source/os_core.c **** #endif
 1846              		.loc 1 1321 33 discriminator 3 view .LVU516
 1847 0030 6B61     		str	r3, [r5, #20]
1314:uCOSII/Source/os_core.c ****         ix_next = ix + 1u;
 1848              		.loc 1 1314 46 is_stmt 1 discriminator 3 view .LVU517
 1849              	.LVL123:
1314:uCOSII/Source/os_core.c ****         ix_next = ix + 1u;
 1850              		.loc 1 1314 48 is_stmt 0 discriminator 3 view .LVU518
 1851 0032 0B46     		mov	r3, r1
 1852 0034 EBE7     		b	.L126
 1853              	.LVL124:
 1854              	.L129:
1324:uCOSII/Source/os_core.c ****     pevent1->OSEventType            = OS_EVENT_TYPE_UNUSED;
 1855              		.loc 1 1324 5 is_stmt 1 view .LVU519
1325:uCOSII/Source/os_core.c ****     pevent1->OSEventPtr             = (OS_EVENT *)0;
 1856              		.loc 1 1325 5 view .LVU520
1325:uCOSII/Source/os_core.c ****     pevent1->OSEventPtr             = (OS_EVENT *)0;
 1857              		.loc 1 1325 37 is_stmt 0 view .LVU521
 1858 0036 064A     		ldr	r2, .L130
 1859 0038 03EB4300 		add	r0, r3, r3, lsl #1
 1860 003c C100     		lsls	r1, r0, #3
 1861 003e 5418     		adds	r4, r2, r1
 1862 0040 0020     		movs	r0, #0
 1863 0042 5054     		strb	r0, [r2, r1]
1326:uCOSII/Source/os_core.c **** #if OS_EVENT_NAME_EN > 0u
 1864              		.loc 1 1326 5 is_stmt 1 view .LVU522
1326:uCOSII/Source/os_core.c **** #if OS_EVENT_NAME_EN > 0u
 1865              		.loc 1 1326 37 is_stmt 0 view .LVU523
 1866 0044 6060     		str	r0, [r4, #4]
1328:uCOSII/Source/os_core.c **** #endif
 1867              		.loc 1 1328 5 is_stmt 1 view .LVU524
1328:uCOSII/Source/os_core.c **** #endif
 1868              		.loc 1 1328 37 is_stmt 0 view .LVU525
 1869 0046 034B     		ldr	r3, .L130+4
 1870              	.LVL125:
1328:uCOSII/Source/os_core.c **** #endif
 1871              		.loc 1 1328 37 view .LVU526
 1872 0048 6361     		str	r3, [r4, #20]
ARM GAS  /tmp/ccxgEmFy.s 			page 73


1330:uCOSII/Source/os_core.c **** #else
 1873              		.loc 1 1330 5 is_stmt 1 view .LVU527
1330:uCOSII/Source/os_core.c **** #else
 1874              		.loc 1 1330 37 is_stmt 0 view .LVU528
 1875 004a 034B     		ldr	r3, .L130+8
 1876 004c 1A60     		str	r2, [r3]
1340:uCOSII/Source/os_core.c **** /*$PAGE*/
 1877              		.loc 1 1340 1 view .LVU529
 1878 004e 70BD     		pop	{r4, r5, r6, pc}
 1879              	.L131:
 1880              		.align	2
 1881              	.L130:
 1882 0050 00000000 		.word	OSEventTbl
 1883 0054 00000000 		.word	.LC2
 1884 0058 00000000 		.word	OSEventFreeList
 1885              		.cfi_endproc
 1886              	.LFE19:
 1888              		.section	.text.OSInit,"ax",%progbits
 1889              		.align	1
 1890              		.global	OSInit
 1891              		.syntax unified
 1892              		.thumb
 1893              		.thumb_func
 1894              		.fpu fpv4-sp-d16
 1896              	OSInit:
 1897              	.LFB3:
 576:uCOSII/Source/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
 1898              		.loc 1 576 1 is_stmt 1 view -0
 1899              		.cfi_startproc
 1900              		@ args = 0, pretend = 0, frame = 0
 1901              		@ frame_needed = 0, uses_anonymous_args = 0
 1902 0000 08B5     		push	{r3, lr}
 1903              	.LCFI24:
 1904              		.cfi_def_cfa_offset 8
 1905              		.cfi_offset 3, -8
 1906              		.cfi_offset 14, -4
 583:uCOSII/Source/os_core.c **** 
 1907              		.loc 1 583 5 view .LVU531
 1908 0002 FFF7FEFF 		bl	OSInitHookBegin
 1909              	.LVL126:
 585:uCOSII/Source/os_core.c **** 
 1910              		.loc 1 585 5 view .LVU532
 1911 0006 FFF7FEFF 		bl	OS_InitMisc
 1912              	.LVL127:
 587:uCOSII/Source/os_core.c **** 
 1913              		.loc 1 587 5 view .LVU533
 1914 000a FFF7FEFF 		bl	OS_InitRdyList
 1915              	.LVL128:
 589:uCOSII/Source/os_core.c **** 
 1916              		.loc 1 589 5 view .LVU534
 1917 000e FFF7FEFF 		bl	OS_InitTCBList
 1918              	.LVL129:
 591:uCOSII/Source/os_core.c **** 
 1919              		.loc 1 591 5 view .LVU535
 1920 0012 FFF7FEFF 		bl	OS_InitEventList
 1921              	.LVL130:
 594:uCOSII/Source/os_core.c **** #endif
ARM GAS  /tmp/ccxgEmFy.s 			page 74


 1922              		.loc 1 594 5 view .LVU536
 1923 0016 FFF7FEFF 		bl	OS_FlagInit
 1924              	.LVL131:
 602:uCOSII/Source/os_core.c **** #endif
 1925              		.loc 1 602 5 view .LVU537
 1926 001a FFF7FEFF 		bl	OS_QInit
 1927              	.LVL132:
 614:uCOSII/Source/os_core.c **** #if OS_TASK_STAT_EN > 0u
 1928              		.loc 1 614 5 view .LVU538
 1929 001e FFF7FEFF 		bl	OS_InitTaskIdle
 1930              	.LVL133:
 616:uCOSII/Source/os_core.c **** #endif
 1931              		.loc 1 616 5 view .LVU539
 1932 0022 FFF7FEFF 		bl	OS_InitTaskStat
 1933              	.LVL134:
 623:uCOSII/Source/os_core.c **** 
 1934              		.loc 1 623 5 view .LVU540
 1935 0026 FFF7FEFF 		bl	OSInitHookEnd
 1936              	.LVL135:
 626:uCOSII/Source/os_core.c **** #endif
 1937              		.loc 1 626 5 view .LVU541
 1938 002a FFF7FEFF 		bl	OSDebugInit
 1939              	.LVL136:
 628:uCOSII/Source/os_core.c **** /*$PAGE*/
 1940              		.loc 1 628 1 is_stmt 0 view .LVU542
 1941 002e 08BD     		pop	{r3, pc}
 1942              		.cfi_endproc
 1943              	.LFE3:
 1945              		.section	.text.OS_MemCopy,"ax",%progbits
 1946              		.align	1
 1947              		.global	OS_MemCopy
 1948              		.syntax unified
 1949              		.thumb
 1950              		.thumb_func
 1951              		.fpu fpv4-sp-d16
 1953              	OS_MemCopy:
 1954              	.LVL137:
 1955              	.LFB26:
1638:uCOSII/Source/os_core.c ****     while (size > 0u) {
 1956              		.loc 1 1638 1 is_stmt 1 view -0
 1957              		.cfi_startproc
 1958              		@ args = 0, pretend = 0, frame = 0
 1959              		@ frame_needed = 0, uses_anonymous_args = 0
 1960              		@ link register save eliminated.
1639:uCOSII/Source/os_core.c ****         *pdest++ = *psrc++;
 1961              		.loc 1 1639 5 view .LVU544
 1962              	.L135:
1639:uCOSII/Source/os_core.c ****         *pdest++ = *psrc++;
 1963              		.loc 1 1639 11 view .LVU545
 1964 0000 32B1     		cbz	r2, .L137
1640:uCOSII/Source/os_core.c ****         size--;
 1965              		.loc 1 1640 9 view .LVU546
 1966              	.LVL138:
1640:uCOSII/Source/os_core.c ****         size--;
 1967              		.loc 1 1640 20 is_stmt 0 view .LVU547
 1968 0002 11F8013B 		ldrb	r3, [r1], #1	@ zero_extendqisi2
 1969              	.LVL139:
ARM GAS  /tmp/ccxgEmFy.s 			page 75


1640:uCOSII/Source/os_core.c ****         size--;
 1970              		.loc 1 1640 18 view .LVU548
 1971 0006 00F8013B 		strb	r3, [r0], #1
 1972              	.LVL140:
1641:uCOSII/Source/os_core.c ****     }
 1973              		.loc 1 1641 9 is_stmt 1 view .LVU549
1641:uCOSII/Source/os_core.c ****     }
 1974              		.loc 1 1641 13 is_stmt 0 view .LVU550
 1975 000a 013A     		subs	r2, r2, #1
 1976              	.LVL141:
1641:uCOSII/Source/os_core.c ****     }
 1977              		.loc 1 1641 13 view .LVU551
 1978 000c 92B2     		uxth	r2, r2
 1979              	.LVL142:
1641:uCOSII/Source/os_core.c ****     }
 1980              		.loc 1 1641 13 view .LVU552
 1981 000e F7E7     		b	.L135
 1982              	.L137:
1643:uCOSII/Source/os_core.c **** /*$PAGE*/
 1983              		.loc 1 1643 1 view .LVU553
 1984 0010 7047     		bx	lr
 1985              		.cfi_endproc
 1986              	.LFE26:
 1988              		.section	.text.OS_Sched,"ax",%progbits
 1989              		.align	1
 1990              		.global	OS_Sched
 1991              		.syntax unified
 1992              		.thumb
 1993              		.thumb_func
 1994              		.fpu fpv4-sp-d16
 1996              	OS_Sched:
 1997              	.LFB27:
1663:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                           /* Allocate storage for CPU status register 
 1998              		.loc 1 1663 1 is_stmt 1 view -0
 1999              		.cfi_startproc
 2000              		@ args = 0, pretend = 0, frame = 0
 2001              		@ frame_needed = 0, uses_anonymous_args = 0
 2002 0000 10B5     		push	{r4, lr}
 2003              	.LCFI25:
 2004              		.cfi_def_cfa_offset 8
 2005              		.cfi_offset 4, -8
 2006              		.cfi_offset 14, -4
1665:uCOSII/Source/os_core.c **** #endif
 2007              		.loc 1 1665 5 view .LVU555
 2008              	.LVL143:
1670:uCOSII/Source/os_core.c ****     if (OSIntNesting == 0u) {                          /* Schedule only if all ISRs done and ...   
 2009              		.loc 1 1670 5 view .LVU556
 2010 0002 FFF7FEFF 		bl	OS_CPU_SR_Save
 2011              	.LVL144:
 2012 0006 0446     		mov	r4, r0
 2013              	.LVL145:
1670:uCOSII/Source/os_core.c ****     if (OSIntNesting == 0u) {                          /* Schedule only if all ISRs done and ...   
 2014              		.loc 1 1670 24 view .LVU557
1671:uCOSII/Source/os_core.c ****         if (OSLockNesting == 0u) {                     /* ... scheduler is not locked              
 2015              		.loc 1 1671 5 view .LVU558
1671:uCOSII/Source/os_core.c ****         if (OSLockNesting == 0u) {                     /* ... scheduler is not locked              
 2016              		.loc 1 1671 22 is_stmt 0 view .LVU559
ARM GAS  /tmp/ccxgEmFy.s 			page 76


 2017 0008 104B     		ldr	r3, .L142
 2018 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1671:uCOSII/Source/os_core.c ****         if (OSLockNesting == 0u) {                     /* ... scheduler is not locked              
 2019              		.loc 1 1671 8 view .LVU560
 2020 000c 13B9     		cbnz	r3, .L139
1672:uCOSII/Source/os_core.c ****             OS_SchedNew();
 2021              		.loc 1 1672 9 is_stmt 1 view .LVU561
1672:uCOSII/Source/os_core.c ****             OS_SchedNew();
 2022              		.loc 1 1672 27 is_stmt 0 view .LVU562
 2023 000e 104B     		ldr	r3, .L142+4
 2024 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1672:uCOSII/Source/os_core.c ****             OS_SchedNew();
 2025              		.loc 1 1672 12 view .LVU563
 2026 0012 1BB1     		cbz	r3, .L141
 2027              	.LVL146:
 2028              	.L139:
1691:uCOSII/Source/os_core.c **** }
 2029              		.loc 1 1691 5 is_stmt 1 view .LVU564
 2030 0014 2046     		mov	r0, r4
 2031 0016 FFF7FEFF 		bl	OS_CPU_SR_Restore
 2032              	.LVL147:
1691:uCOSII/Source/os_core.c **** }
 2033              		.loc 1 1691 23 view .LVU565
1692:uCOSII/Source/os_core.c **** 
 2034              		.loc 1 1692 1 is_stmt 0 view .LVU566
 2035 001a 10BD     		pop	{r4, pc}
 2036              	.LVL148:
 2037              	.L141:
1673:uCOSII/Source/os_core.c ****             OSTCBHighRdy = OSTCBPrioTbl[OSPrioHighRdy];
 2038              		.loc 1 1673 13 is_stmt 1 view .LVU567
 2039 001c FFF7FEFF 		bl	OS_SchedNew
 2040              	.LVL149:
1674:uCOSII/Source/os_core.c ****             if (OSPrioHighRdy != OSPrioCur) {          /* No Ctx Sw if current task is highest rdy 
 2041              		.loc 1 1674 13 view .LVU568
1674:uCOSII/Source/os_core.c ****             if (OSPrioHighRdy != OSPrioCur) {          /* No Ctx Sw if current task is highest rdy 
 2042              		.loc 1 1674 40 is_stmt 0 view .LVU569
 2043 0020 0C4B     		ldr	r3, .L142+8
 2044 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2045 0024 0C4A     		ldr	r2, .L142+12
 2046 0026 52F82320 		ldr	r2, [r2, r3, lsl #2]
1674:uCOSII/Source/os_core.c ****             if (OSPrioHighRdy != OSPrioCur) {          /* No Ctx Sw if current task is highest rdy 
 2047              		.loc 1 1674 26 view .LVU570
 2048 002a 0C49     		ldr	r1, .L142+16
 2049 002c 0A60     		str	r2, [r1]
1675:uCOSII/Source/os_core.c **** #if OS_TASK_PROFILE_EN > 0u
 2050              		.loc 1 1675 13 is_stmt 1 view .LVU571
1675:uCOSII/Source/os_core.c **** #if OS_TASK_PROFILE_EN > 0u
 2051              		.loc 1 1675 31 is_stmt 0 view .LVU572
 2052 002e 0C49     		ldr	r1, .L142+20
 2053 0030 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
1675:uCOSII/Source/os_core.c **** #if OS_TASK_PROFILE_EN > 0u
 2054              		.loc 1 1675 16 view .LVU573
 2055 0032 8B42     		cmp	r3, r1
 2056 0034 EED0     		beq	.L139
1677:uCOSII/Source/os_core.c **** #endif
 2057              		.loc 1 1677 17 is_stmt 1 view .LVU574
1677:uCOSII/Source/os_core.c **** #endif
ARM GAS  /tmp/ccxgEmFy.s 			page 77


 2058              		.loc 1 1677 29 is_stmt 0 view .LVU575
 2059 0036 D36B     		ldr	r3, [r2, #60]
1677:uCOSII/Source/os_core.c **** #endif
 2060              		.loc 1 1677 44 view .LVU576
 2061 0038 0133     		adds	r3, r3, #1
 2062 003a D363     		str	r3, [r2, #60]
1679:uCOSII/Source/os_core.c **** 
 2063              		.loc 1 1679 17 is_stmt 1 view .LVU577
1679:uCOSII/Source/os_core.c **** 
 2064              		.loc 1 1679 27 is_stmt 0 view .LVU578
 2065 003c 094A     		ldr	r2, .L142+24
 2066 003e 1368     		ldr	r3, [r2]
 2067 0040 0133     		adds	r3, r3, #1
 2068 0042 1360     		str	r3, [r2]
1687:uCOSII/Source/os_core.c ****             }
 2069              		.loc 1 1687 17 is_stmt 1 view .LVU579
 2070 0044 FFF7FEFF 		bl	OSCtxSw
 2071              	.LVL150:
 2072 0048 E4E7     		b	.L139
 2073              	.L143:
 2074 004a 00BF     		.align	2
 2075              	.L142:
 2076 004c 00000000 		.word	OSIntNesting
 2077 0050 00000000 		.word	OSLockNesting
 2078 0054 00000000 		.word	OSPrioHighRdy
 2079 0058 00000000 		.word	OSTCBPrioTbl
 2080 005c 00000000 		.word	OSTCBHighRdy
 2081 0060 00000000 		.word	OSPrioCur
 2082 0064 00000000 		.word	OSCtxSwCtr
 2083              		.cfi_endproc
 2084              	.LFE27:
 2086              		.section	.text.OSEventPendMulti,"ax",%progbits
 2087              		.align	1
 2088              		.global	OSEventPendMulti
 2089              		.syntax unified
 2090              		.thumb
 2091              		.thumb_func
 2092              		.fpu fpv4-sp-d16
 2094              	OSEventPendMulti:
 2095              	.LVL151:
 2096              	.LFB2:
 317:uCOSII/Source/os_core.c ****     OS_EVENT  **pevents;
 2097              		.loc 1 317 1 view -0
 2098              		.cfi_startproc
 2099              		@ args = 4, pretend = 0, frame = 0
 2100              		@ frame_needed = 0, uses_anonymous_args = 0
 317:uCOSII/Source/os_core.c ****     OS_EVENT  **pevents;
 2101              		.loc 1 317 1 is_stmt 0 view .LVU581
 2102 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2103              	.LCFI26:
 2104              		.cfi_def_cfa_offset 40
 2105              		.cfi_offset 3, -40
 2106              		.cfi_offset 4, -36
 2107              		.cfi_offset 5, -32
 2108              		.cfi_offset 6, -28
 2109              		.cfi_offset 7, -24
 2110              		.cfi_offset 8, -20
ARM GAS  /tmp/ccxgEmFy.s 			page 78


 2111              		.cfi_offset 9, -16
 2112              		.cfi_offset 10, -12
 2113              		.cfi_offset 11, -8
 2114              		.cfi_offset 14, -4
 2115 0004 0546     		mov	r5, r0
 2116 0006 0C46     		mov	r4, r1
 2117 0008 1646     		mov	r6, r2
 2118 000a 9846     		mov	r8, r3
 318:uCOSII/Source/os_core.c ****     OS_EVENT   *pevent;
 2119              		.loc 1 318 5 is_stmt 1 view .LVU582
 319:uCOSII/Source/os_core.c **** #if ((OS_Q_EN > 0u) && (OS_MAX_QS > 0u))
 2120              		.loc 1 319 5 view .LVU583
 321:uCOSII/Source/os_core.c **** #endif
 2121              		.loc 1 321 5 view .LVU584
 323:uCOSII/Source/os_core.c ****     INT16U      events_rdy_nbr;
 2122              		.loc 1 323 5 view .LVU585
 324:uCOSII/Source/os_core.c ****     INT8U       events_stat;
 2123              		.loc 1 324 5 view .LVU586
 325:uCOSII/Source/os_core.c **** #if (OS_CRITICAL_METHOD == 3u)                          /* Allocate storage for CPU status register
 2124              		.loc 1 325 5 view .LVU587
 327:uCOSII/Source/os_core.c **** #endif
 2125              		.loc 1 327 5 view .LVU588
 2126              	.LVL152:
 358:uCOSII/Source/os_core.c **** 
 2127              		.loc 1 358 4 view .LVU589
 358:uCOSII/Source/os_core.c **** 
 2128              		.loc 1 358 17 is_stmt 0 view .LVU590
 2129 000c 0023     		movs	r3, #0
 2130              	.LVL153:
 358:uCOSII/Source/os_core.c **** 
 2131              		.loc 1 358 17 view .LVU591
 2132 000e 0B60     		str	r3, [r1]
 360:uCOSII/Source/os_core.c ****     pevent      = *pevents;
 2133              		.loc 1 360 5 is_stmt 1 view .LVU592
 2134              	.LVL154:
 361:uCOSII/Source/os_core.c ****     while  (pevent != (OS_EVENT *)0) {
 2135              		.loc 1 361 5 view .LVU593
 361:uCOSII/Source/os_core.c ****     while  (pevent != (OS_EVENT *)0) {
 2136              		.loc 1 361 17 is_stmt 0 view .LVU594
 2137 0010 0768     		ldr	r7, [r0]
 2138              	.LVL155:
 362:uCOSII/Source/os_core.c ****         switch (pevent->OSEventType) {                  /* Validate event block types              
 2139              		.loc 1 362 5 is_stmt 1 view .LVU595
 361:uCOSII/Source/os_core.c ****     while  (pevent != (OS_EVENT *)0) {
 2140              		.loc 1 361 17 is_stmt 0 view .LVU596
 2141 0012 3B46     		mov	r3, r7
 360:uCOSII/Source/os_core.c ****     pevent      = *pevents;
 2142              		.loc 1 360 17 view .LVU597
 2143 0014 0246     		mov	r2, r0
 2144              	.LVL156:
 2145              	.L145:
 362:uCOSII/Source/os_core.c ****         switch (pevent->OSEventType) {                  /* Validate event block types              
 2146              		.loc 1 362 12 is_stmt 1 view .LVU598
 2147 0016 73B1     		cbz	r3, .L178
 363:uCOSII/Source/os_core.c **** #if (OS_SEM_EN  > 0u)
 2148              		.loc 1 363 9 view .LVU599
 363:uCOSII/Source/os_core.c **** #if (OS_SEM_EN  > 0u)
ARM GAS  /tmp/ccxgEmFy.s 			page 79


 2149              		.loc 1 363 23 is_stmt 0 view .LVU600
 2150 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2151              	.LVL157:
 363:uCOSII/Source/os_core.c **** #if (OS_SEM_EN  > 0u)
 2152              		.loc 1 363 9 view .LVU601
 2153 001a 013B     		subs	r3, r3, #1
 2154 001c 022B     		cmp	r3, #2
 2155 001e 02D8     		bhi	.L179
 383:uCOSII/Source/os_core.c ****         pevent = *pevents;
 2156              		.loc 1 383 9 is_stmt 1 view .LVU602
 2157              	.LVL158:
 384:uCOSII/Source/os_core.c ****     }
 2158              		.loc 1 384 9 view .LVU603
 384:uCOSII/Source/os_core.c ****     }
 2159              		.loc 1 384 16 is_stmt 0 view .LVU604
 2160 0020 52F8043F 		ldr	r3, [r2, #4]!
 2161              	.LVL159:
 384:uCOSII/Source/os_core.c ****     }
 2162              		.loc 1 384 16 view .LVU605
 2163 0024 F7E7     		b	.L145
 2164              	.LVL160:
 2165              	.L179:
 380:uCOSII/Source/os_core.c ****                  return (0u);
 2166              		.loc 1 380 17 is_stmt 1 view .LVU606
 380:uCOSII/Source/os_core.c ****                  return (0u);
 2167              		.loc 1 380 23 is_stmt 0 view .LVU607
 2168 0026 0123     		movs	r3, #1
 2169 0028 0A9A     		ldr	r2, [sp, #40]
 2170              	.LVL161:
 380:uCOSII/Source/os_core.c ****                  return (0u);
 2171              		.loc 1 380 23 view .LVU608
 2172 002a 1370     		strb	r3, [r2]
 381:uCOSII/Source/os_core.c ****         }
 2173              		.loc 1 381 18 is_stmt 1 view .LVU609
 381:uCOSII/Source/os_core.c ****         }
 2174              		.loc 1 381 25 is_stmt 0 view .LVU610
 2175 002c 4FF00009 		mov	r9, #0
 2176              	.LVL162:
 2177              	.L147:
 558:uCOSII/Source/os_core.c **** #endif
 2178              		.loc 1 558 1 view .LVU611
 2179 0030 4846     		mov	r0, r9
 2180 0032 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2181              	.LVL163:
 2182              	.L178:
 387:uCOSII/Source/os_core.c ****        *perr =  OS_ERR_PEND_ISR;                        /* ... can't PEND from an ISR              
 2183              		.loc 1 387 5 is_stmt 1 view .LVU612
 387:uCOSII/Source/os_core.c ****        *perr =  OS_ERR_PEND_ISR;                        /* ... can't PEND from an ISR              
 2184              		.loc 1 387 23 is_stmt 0 view .LVU613
 2185 0036 7B4B     		ldr	r3, .L186
 2186              	.LVL164:
 387:uCOSII/Source/os_core.c ****        *perr =  OS_ERR_PEND_ISR;                        /* ... can't PEND from an ISR              
 2187              		.loc 1 387 23 view .LVU614
 2188 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 387:uCOSII/Source/os_core.c ****        *perr =  OS_ERR_PEND_ISR;                        /* ... can't PEND from an ISR              
 2189              		.loc 1 387 8 view .LVU615
 2190 003a 5BB9     		cbnz	r3, .L180
ARM GAS  /tmp/ccxgEmFy.s 			page 80


 391:uCOSII/Source/os_core.c ****        *perr =  OS_ERR_PEND_LOCKED;                     /* ... can't PEND when locked              
 2191              		.loc 1 391 5 is_stmt 1 view .LVU616
 391:uCOSII/Source/os_core.c ****        *perr =  OS_ERR_PEND_LOCKED;                     /* ... can't PEND when locked              
 2192              		.loc 1 391 23 is_stmt 0 view .LVU617
 2193 003c 7A4B     		ldr	r3, .L186+4
 2194 003e 93F800A0 		ldrb	r10, [r3]	@ zero_extendqisi2
 391:uCOSII/Source/os_core.c ****        *perr =  OS_ERR_PEND_LOCKED;                     /* ... can't PEND when locked              
 2195              		.loc 1 391 8 view .LVU618
 2196 0042 BAF1000F 		cmp	r10, #0
 2197 0046 0BD0     		beq	.L150
 392:uCOSII/Source/os_core.c ****         return (0u);
 2198              		.loc 1 392 8 is_stmt 1 view .LVU619
 392:uCOSII/Source/os_core.c ****         return (0u);
 2199              		.loc 1 392 14 is_stmt 0 view .LVU620
 2200 0048 0D23     		movs	r3, #13
 2201 004a 0A9A     		ldr	r2, [sp, #40]
 2202              	.LVL165:
 392:uCOSII/Source/os_core.c ****         return (0u);
 2203              		.loc 1 392 14 view .LVU621
 2204 004c 1370     		strb	r3, [r2]
 393:uCOSII/Source/os_core.c ****     }
 2205              		.loc 1 393 9 is_stmt 1 view .LVU622
 393:uCOSII/Source/os_core.c ****     }
 2206              		.loc 1 393 16 is_stmt 0 view .LVU623
 2207 004e 4FF00009 		mov	r9, #0
 2208 0052 EDE7     		b	.L147
 2209              	.LVL166:
 2210              	.L180:
 388:uCOSII/Source/os_core.c ****         return (0u);
 2211              		.loc 1 388 8 is_stmt 1 view .LVU624
 388:uCOSII/Source/os_core.c ****         return (0u);
 2212              		.loc 1 388 14 is_stmt 0 view .LVU625
 2213 0054 0223     		movs	r3, #2
 2214 0056 0A9A     		ldr	r2, [sp, #40]
 2215              	.LVL167:
 388:uCOSII/Source/os_core.c ****         return (0u);
 2216              		.loc 1 388 14 view .LVU626
 2217 0058 1370     		strb	r3, [r2]
 389:uCOSII/Source/os_core.c ****     }
 2218              		.loc 1 389 9 is_stmt 1 view .LVU627
 389:uCOSII/Source/os_core.c ****     }
 2219              		.loc 1 389 16 is_stmt 0 view .LVU628
 2220 005a 4FF00009 		mov	r9, #0
 2221 005e E7E7     		b	.L147
 2222              	.LVL168:
 2223              	.L150:
 397:uCOSII/Source/os_core.c ****     events_rdy_nbr =  0u;
 2224              		.loc 1 397 5 is_stmt 1 view .LVU629
 398:uCOSII/Source/os_core.c ****     events_stat    =  OS_STAT_RDY;
 2225              		.loc 1 398 5 view .LVU630
 399:uCOSII/Source/os_core.c ****     pevents        =  pevents_pend;
 2226              		.loc 1 399 5 view .LVU631
 400:uCOSII/Source/os_core.c ****     pevent         = *pevents;
 2227              		.loc 1 400 5 view .LVU632
 401:uCOSII/Source/os_core.c ****     OS_ENTER_CRITICAL();
 2228              		.loc 1 401 5 view .LVU633
 402:uCOSII/Source/os_core.c ****     while (pevent != (OS_EVENT *)0) {                   /* See if any events already available     
ARM GAS  /tmp/ccxgEmFy.s 			page 81


 2229              		.loc 1 402 5 view .LVU634
 2230 0060 FFF7FEFF 		bl	OS_CPU_SR_Save
 2231              	.LVL169:
 402:uCOSII/Source/os_core.c ****     while (pevent != (OS_EVENT *)0) {                   /* See if any events already available     
 2232              		.loc 1 402 5 is_stmt 0 view .LVU635
 2233 0064 8346     		mov	fp, r0
 2234              	.LVL170:
 402:uCOSII/Source/os_core.c ****     while (pevent != (OS_EVENT *)0) {                   /* See if any events already available     
 2235              		.loc 1 402 24 is_stmt 1 view .LVU636
 403:uCOSII/Source/os_core.c ****         switch (pevent->OSEventType) {
 2236              		.loc 1 403 5 view .LVU637
 399:uCOSII/Source/os_core.c ****     pevents        =  pevents_pend;
 2237              		.loc 1 399 20 is_stmt 0 view .LVU638
 2238 0066 D446     		mov	ip, r10
 400:uCOSII/Source/os_core.c ****     pevent         = *pevents;
 2239              		.loc 1 400 20 view .LVU639
 2240 0068 2846     		mov	r0, r5
 2241              	.LVL171:
 398:uCOSII/Source/os_core.c ****     events_stat    =  OS_STAT_RDY;
 2242              		.loc 1 398 20 view .LVU640
 2243 006a 4FF00009 		mov	r9, #0
 403:uCOSII/Source/os_core.c ****         switch (pevent->OSEventType) {
 2244              		.loc 1 403 11 view .LVU641
 2245 006e 23E0     		b	.L151
 2246              	.LVL172:
 2247              	.L153:
 407:uCOSII/Source/os_core.c ****                      pevent->OSEventCnt--;              /* ... decrement semaphore,                
 2248              		.loc 1 407 18 is_stmt 1 view .LVU642
 407:uCOSII/Source/os_core.c ****                      pevent->OSEventCnt--;              /* ... decrement semaphore,                
 2249              		.loc 1 407 28 is_stmt 0 view .LVU643
 2250 0070 3B89     		ldrh	r3, [r7, #8]
 407:uCOSII/Source/os_core.c ****                      pevent->OSEventCnt--;              /* ... decrement semaphore,                
 2251              		.loc 1 407 21 view .LVU644
 2252 0072 6BB1     		cbz	r3, .L156
 408:uCOSII/Source/os_core.c ****                     *pevents_rdy++ =  pevent;           /* ... and return available semaphore event
 2253              		.loc 1 408 22 is_stmt 1 view .LVU645
 408:uCOSII/Source/os_core.c ****                     *pevents_rdy++ =  pevent;           /* ... and return available semaphore event
 2254              		.loc 1 408 40 is_stmt 0 view .LVU646
 2255 0074 013B     		subs	r3, r3, #1
 2256 0076 3B81     		strh	r3, [r7, #8]	@ movhi
 409:uCOSII/Source/os_core.c ****                       events_rdy   =  OS_TRUE;
 2257              		.loc 1 409 21 is_stmt 1 view .LVU647
 2258              	.LVL173:
 409:uCOSII/Source/os_core.c ****                       events_rdy   =  OS_TRUE;
 2259              		.loc 1 409 36 is_stmt 0 view .LVU648
 2260 0078 44F8047B 		str	r7, [r4], #4
 2261              	.LVL174:
 410:uCOSII/Source/os_core.c ****                     *pmsgs_rdy++   = (void *)0;         /* NO message returned  for semaphores     
 2262              		.loc 1 410 23 is_stmt 1 view .LVU649
 411:uCOSII/Source/os_core.c ****                       events_rdy_nbr++;
 2263              		.loc 1 411 21 view .LVU650
 411:uCOSII/Source/os_core.c ****                       events_rdy_nbr++;
 2264              		.loc 1 411 36 is_stmt 0 view .LVU651
 2265 007c 0023     		movs	r3, #0
 2266 007e 46F8043B 		str	r3, [r6], #4
 2267              	.LVL175:
 412:uCOSII/Source/os_core.c **** 
ARM GAS  /tmp/ccxgEmFy.s 			page 82


 2268              		.loc 1 412 23 is_stmt 1 view .LVU652
 412:uCOSII/Source/os_core.c **** 
 2269              		.loc 1 412 37 is_stmt 0 view .LVU653
 2270 0082 09F10109 		add	r9, r9, #1
 2271              	.LVL176:
 412:uCOSII/Source/os_core.c **** 
 2272              		.loc 1 412 37 view .LVU654
 2273 0086 1FFA89F9 		uxth	r9, r9
 2274              	.LVL177:
 410:uCOSII/Source/os_core.c ****                     *pmsgs_rdy++   = (void *)0;         /* NO message returned  for semaphores     
 2275              		.loc 1 410 36 view .LVU655
 2276 008a 4FF0010A 		mov	r10, #1
 2277 008e 11E0     		b	.L157
 2278              	.LVL178:
 2279              	.L156:
 415:uCOSII/Source/os_core.c ****                  }
 2280              		.loc 1 415 23 is_stmt 1 view .LVU656
 415:uCOSII/Source/os_core.c ****                  }
 2281              		.loc 1 415 35 is_stmt 0 view .LVU657
 2282 0090 4CF0010C 		orr	ip, ip, #1
 2283              	.LVL179:
 415:uCOSII/Source/os_core.c ****                  }
 2284              		.loc 1 415 35 view .LVU658
 2285 0094 5FFA8CFC 		uxtb	ip, ip
 2286              	.LVL180:
 415:uCOSII/Source/os_core.c ****                  }
 2287              		.loc 1 415 35 view .LVU659
 2288 0098 0CE0     		b	.L157
 2289              	.L182:
 422:uCOSII/Source/os_core.c ****                                                         /* ... return available message,           
 2290              		.loc 1 422 18 is_stmt 1 view .LVU660
 422:uCOSII/Source/os_core.c ****                                                         /* ... return available message,           
 2291              		.loc 1 422 28 is_stmt 0 view .LVU661
 2292 009a 7A68     		ldr	r2, [r7, #4]
 422:uCOSII/Source/os_core.c ****                                                         /* ... return available message,           
 2293              		.loc 1 422 21 view .LVU662
 2294 009c F2B1     		cbz	r2, .L158
 424:uCOSII/Source/os_core.c ****                      pevent->OSEventPtr  = (void *)0;
 2295              		.loc 1 424 21 is_stmt 1 view .LVU663
 2296              	.LVL181:
 424:uCOSII/Source/os_core.c ****                      pevent->OSEventPtr  = (void *)0;
 2297              		.loc 1 424 42 is_stmt 0 view .LVU664
 2298 009e 46F8042B 		str	r2, [r6], #4
 2299              	.LVL182:
 425:uCOSII/Source/os_core.c ****                     *pevents_rdy++       =  pevent;     /* ... and return available mailbox event  
 2300              		.loc 1 425 22 is_stmt 1 view .LVU665
 425:uCOSII/Source/os_core.c ****                     *pevents_rdy++       =  pevent;     /* ... and return available mailbox event  
 2301              		.loc 1 425 42 is_stmt 0 view .LVU666
 2302 00a2 0022     		movs	r2, #0
 2303 00a4 7A60     		str	r2, [r7, #4]
 426:uCOSII/Source/os_core.c ****                       events_rdy         =  OS_TRUE;
 2304              		.loc 1 426 21 is_stmt 1 view .LVU667
 2305              	.LVL183:
 426:uCOSII/Source/os_core.c ****                       events_rdy         =  OS_TRUE;
 2306              		.loc 1 426 42 is_stmt 0 view .LVU668
 2307 00a6 44F8047B 		str	r7, [r4], #4
 2308              	.LVL184:
ARM GAS  /tmp/ccxgEmFy.s 			page 83


 427:uCOSII/Source/os_core.c ****                       events_rdy_nbr++;
 2309              		.loc 1 427 23 is_stmt 1 view .LVU669
 428:uCOSII/Source/os_core.c **** 
 2310              		.loc 1 428 23 view .LVU670
 428:uCOSII/Source/os_core.c **** 
 2311              		.loc 1 428 37 is_stmt 0 view .LVU671
 2312 00aa 09F10109 		add	r9, r9, #1
 2313              	.LVL185:
 428:uCOSII/Source/os_core.c **** 
 2314              		.loc 1 428 37 view .LVU672
 2315 00ae 1FFA89F9 		uxth	r9, r9
 2316              	.LVL186:
 427:uCOSII/Source/os_core.c ****                       events_rdy_nbr++;
 2317              		.loc 1 427 42 view .LVU673
 2318 00b2 9A46     		mov	r10, r3
 2319              	.LVL187:
 2320              	.L157:
 464:uCOSII/Source/os_core.c ****         pevent = *pevents;
 2321              		.loc 1 464 9 is_stmt 1 view .LVU674
 465:uCOSII/Source/os_core.c ****     }
 2322              		.loc 1 465 9 view .LVU675
 465:uCOSII/Source/os_core.c ****     }
 2323              		.loc 1 465 16 is_stmt 0 view .LVU676
 2324 00b4 50F8047F 		ldr	r7, [r0, #4]!
 2325              	.LVL188:
 2326              	.L151:
 403:uCOSII/Source/os_core.c ****         switch (pevent->OSEventType) {
 2327              		.loc 1 403 11 is_stmt 1 view .LVU677
 2328 00b8 002F     		cmp	r7, #0
 2329 00ba 35D0     		beq	.L181
 404:uCOSII/Source/os_core.c **** #if (OS_SEM_EN > 0u)
 2330              		.loc 1 404 9 view .LVU678
 404:uCOSII/Source/os_core.c **** #if (OS_SEM_EN > 0u)
 2331              		.loc 1 404 23 is_stmt 0 view .LVU679
 2332 00bc 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 404:uCOSII/Source/os_core.c **** #if (OS_SEM_EN > 0u)
 2333              		.loc 1 404 9 view .LVU680
 2334 00be 022B     		cmp	r3, #2
 2335 00c0 11D0     		beq	.L152
 2336 00c2 032B     		cmp	r3, #3
 2337 00c4 D4D0     		beq	.L153
 2338 00c6 012B     		cmp	r3, #1
 2339 00c8 E7D0     		beq	.L182
 459:uCOSII/Source/os_core.c ****                 *pevents_rdy = (OS_EVENT *)0;           /* NULL terminate return event array       
 2340              		.loc 1 459 18 is_stmt 1 view .LVU681
 2341 00ca 5846     		mov	r0, fp
 2342              	.LVL189:
 459:uCOSII/Source/os_core.c ****                 *pevents_rdy = (OS_EVENT *)0;           /* NULL terminate return event array       
 2343              		.loc 1 459 18 is_stmt 0 view .LVU682
 2344 00cc FFF7FEFF 		bl	OS_CPU_SR_Restore
 2345              	.LVL190:
 459:uCOSII/Source/os_core.c ****                 *pevents_rdy = (OS_EVENT *)0;           /* NULL terminate return event array       
 2346              		.loc 1 459 36 is_stmt 1 view .LVU683
 460:uCOSII/Source/os_core.c ****                 *perr        =  OS_ERR_EVENT_TYPE;
 2347              		.loc 1 460 17 view .LVU684
 460:uCOSII/Source/os_core.c ****                 *perr        =  OS_ERR_EVENT_TYPE;
 2348              		.loc 1 460 30 is_stmt 0 view .LVU685
ARM GAS  /tmp/ccxgEmFy.s 			page 84


 2349 00d0 0023     		movs	r3, #0
 2350 00d2 2360     		str	r3, [r4]
 461:uCOSII/Source/os_core.c ****                  return (events_rdy_nbr);
 2351              		.loc 1 461 17 is_stmt 1 view .LVU686
 461:uCOSII/Source/os_core.c ****                  return (events_rdy_nbr);
 2352              		.loc 1 461 30 is_stmt 0 view .LVU687
 2353 00d4 0123     		movs	r3, #1
 2354 00d6 0A9A     		ldr	r2, [sp, #40]
 2355 00d8 1370     		strb	r3, [r2]
 462:uCOSII/Source/os_core.c ****         }
 2356              		.loc 1 462 18 is_stmt 1 view .LVU688
 462:uCOSII/Source/os_core.c ****         }
 2357              		.loc 1 462 25 is_stmt 0 view .LVU689
 2358 00da A9E7     		b	.L147
 2359              	.LVL191:
 2360              	.L158:
 431:uCOSII/Source/os_core.c ****                  }
 2361              		.loc 1 431 23 is_stmt 1 view .LVU690
 431:uCOSII/Source/os_core.c ****                  }
 2362              		.loc 1 431 35 is_stmt 0 view .LVU691
 2363 00dc 4CF0020C 		orr	ip, ip, #2
 2364              	.LVL192:
 431:uCOSII/Source/os_core.c ****                  }
 2365              		.loc 1 431 35 view .LVU692
 2366 00e0 5FFA8CFC 		uxtb	ip, ip
 2367              	.LVL193:
 431:uCOSII/Source/os_core.c ****                  }
 2368              		.loc 1 431 35 view .LVU693
 2369 00e4 E6E7     		b	.L157
 2370              	.L152:
 438:uCOSII/Source/os_core.c ****                  if (pq->OSQEntries > 0u) {             /* If queue NOT empty;                     
 2371              		.loc 1 438 18 is_stmt 1 view .LVU694
 438:uCOSII/Source/os_core.c ****                  if (pq->OSQEntries > 0u) {             /* If queue NOT empty;                     
 2372              		.loc 1 438 21 is_stmt 0 view .LVU695
 2373 00e6 7A68     		ldr	r2, [r7, #4]
 2374              	.LVL194:
 439:uCOSII/Source/os_core.c ****                                                         /* ... return available message,           
 2375              		.loc 1 439 18 is_stmt 1 view .LVU696
 439:uCOSII/Source/os_core.c ****                                                         /* ... return available message,           
 2376              		.loc 1 439 24 is_stmt 0 view .LVU697
 2377 00e8 D38A     		ldrh	r3, [r2, #22]
 439:uCOSII/Source/os_core.c ****                                                         /* ... return available message,           
 2378              		.loc 1 439 21 view .LVU698
 2379 00ea C3B1     		cbz	r3, .L159
 441:uCOSII/Source/os_core.c ****                      if (pq->OSQOut == pq->OSQEnd) {    /* If OUT ptr at queue end, ...            
 2380              		.loc 1 441 21 is_stmt 1 view .LVU699
 441:uCOSII/Source/os_core.c ****                      if (pq->OSQOut == pq->OSQEnd) {    /* If OUT ptr at queue end, ...            
 2381              		.loc 1 441 47 is_stmt 0 view .LVU700
 2382 00ec 1369     		ldr	r3, [r2, #16]
 441:uCOSII/Source/os_core.c ****                      if (pq->OSQOut == pq->OSQEnd) {    /* If OUT ptr at queue end, ...            
 2383              		.loc 1 441 55 view .LVU701
 2384 00ee 191D     		adds	r1, r3, #4
 2385 00f0 1161     		str	r1, [r2, #16]
 2386              	.LVL195:
 441:uCOSII/Source/os_core.c ****                      if (pq->OSQOut == pq->OSQEnd) {    /* If OUT ptr at queue end, ...            
 2387              		.loc 1 441 36 view .LVU702
 2388 00f2 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccxgEmFy.s 			page 85


 441:uCOSII/Source/os_core.c ****                      if (pq->OSQOut == pq->OSQEnd) {    /* If OUT ptr at queue end, ...            
 2389              		.loc 1 441 34 view .LVU703
 2390 00f4 46F8043B 		str	r3, [r6], #4
 2391              	.LVL196:
 442:uCOSII/Source/os_core.c ****                          pq->OSQOut  = pq->OSQStart;    /* ... wrap   to queue start               
 2392              		.loc 1 442 22 is_stmt 1 view .LVU704
 442:uCOSII/Source/os_core.c ****                          pq->OSQOut  = pq->OSQStart;    /* ... wrap   to queue start               
 2393              		.loc 1 442 28 is_stmt 0 view .LVU705
 2394 00f8 1169     		ldr	r1, [r2, #16]
 442:uCOSII/Source/os_core.c ****                          pq->OSQOut  = pq->OSQStart;    /* ... wrap   to queue start               
 2395              		.loc 1 442 42 view .LVU706
 2396 00fa 9368     		ldr	r3, [r2, #8]
 442:uCOSII/Source/os_core.c ****                          pq->OSQOut  = pq->OSQStart;    /* ... wrap   to queue start               
 2397              		.loc 1 442 25 view .LVU707
 2398 00fc 9942     		cmp	r1, r3
 2399 00fe 0BD0     		beq	.L183
 2400              	.L160:
 445:uCOSII/Source/os_core.c ****                     *pevents_rdy++ = pevent;            /* ... and return available queue event    
 2401              		.loc 1 445 22 is_stmt 1 view .LVU708
 445:uCOSII/Source/os_core.c ****                     *pevents_rdy++ = pevent;            /* ... and return available queue event    
 2402              		.loc 1 445 24 is_stmt 0 view .LVU709
 2403 0100 D38A     		ldrh	r3, [r2, #22]
 445:uCOSII/Source/os_core.c ****                     *pevents_rdy++ = pevent;            /* ... and return available queue event    
 2404              		.loc 1 445 36 view .LVU710
 2405 0102 013B     		subs	r3, r3, #1
 2406 0104 D382     		strh	r3, [r2, #22]	@ movhi
 446:uCOSII/Source/os_core.c ****                       events_rdy   = OS_TRUE;
 2407              		.loc 1 446 21 is_stmt 1 view .LVU711
 2408              	.LVL197:
 446:uCOSII/Source/os_core.c ****                       events_rdy   = OS_TRUE;
 2409              		.loc 1 446 36 is_stmt 0 view .LVU712
 2410 0106 44F8047B 		str	r7, [r4], #4
 2411              	.LVL198:
 447:uCOSII/Source/os_core.c ****                       events_rdy_nbr++;
 2412              		.loc 1 447 23 is_stmt 1 view .LVU713
 448:uCOSII/Source/os_core.c **** 
 2413              		.loc 1 448 23 view .LVU714
 448:uCOSII/Source/os_core.c **** 
 2414              		.loc 1 448 37 is_stmt 0 view .LVU715
 2415 010a 09F10109 		add	r9, r9, #1
 2416              	.LVL199:
 448:uCOSII/Source/os_core.c **** 
 2417              		.loc 1 448 37 view .LVU716
 2418 010e 1FFA89F9 		uxth	r9, r9
 2419              	.LVL200:
 447:uCOSII/Source/os_core.c ****                       events_rdy_nbr++;
 2420              		.loc 1 447 36 view .LVU717
 2421 0112 4FF0010A 		mov	r10, #1
 2422 0116 CDE7     		b	.L157
 2423              	.LVL201:
 2424              	.L183:
 443:uCOSII/Source/os_core.c ****                      }
 2425              		.loc 1 443 26 is_stmt 1 view .LVU718
 443:uCOSII/Source/os_core.c ****                      }
 2426              		.loc 1 443 42 is_stmt 0 view .LVU719
 2427 0118 5368     		ldr	r3, [r2, #4]
 443:uCOSII/Source/os_core.c ****                      }
ARM GAS  /tmp/ccxgEmFy.s 			page 86


 2428              		.loc 1 443 38 view .LVU720
 2429 011a 1361     		str	r3, [r2, #16]
 2430 011c F0E7     		b	.L160
 2431              	.L159:
 451:uCOSII/Source/os_core.c ****                  }
 2432              		.loc 1 451 23 is_stmt 1 view .LVU721
 451:uCOSII/Source/os_core.c ****                  }
 2433              		.loc 1 451 35 is_stmt 0 view .LVU722
 2434 011e 4CF0040C 		orr	ip, ip, #4
 2435              	.LVL202:
 451:uCOSII/Source/os_core.c ****                  }
 2436              		.loc 1 451 35 view .LVU723
 2437 0122 5FFA8CFC 		uxtb	ip, ip
 2438              	.LVL203:
 451:uCOSII/Source/os_core.c ****                  }
 2439              		.loc 1 451 35 view .LVU724
 2440 0126 C5E7     		b	.L157
 2441              	.LVL204:
 2442              	.L181:
 468:uCOSII/Source/os_core.c ****        *pevents_rdy = (OS_EVENT *)0;                    /* NULL terminate return event array       
 2443              		.loc 1 468 5 is_stmt 1 view .LVU725
 468:uCOSII/Source/os_core.c ****        *pevents_rdy = (OS_EVENT *)0;                    /* NULL terminate return event array       
 2444              		.loc 1 468 8 is_stmt 0 view .LVU726
 2445 0128 BAF1010F 		cmp	r10, #1
 2446 012c 38D0     		beq	.L184
 476:uCOSII/Source/os_core.c ****                                OS_STAT_MULTI;           /* ... pend on multiple events             
 2447              		.loc 1 476 5 is_stmt 1 view .LVU727
 476:uCOSII/Source/os_core.c ****                                OS_STAT_MULTI;           /* ... pend on multiple events             
 2448              		.loc 1 476 29 is_stmt 0 view .LVU728
 2449 012e DFF8FCA0 		ldr	r10, .L186+8
 2450              	.LVL205:
 476:uCOSII/Source/os_core.c ****                                OS_STAT_MULTI;           /* ... pend on multiple events             
 2451              		.loc 1 476 29 view .LVU729
 2452 0132 DAF80020 		ldr	r2, [r10]
 2453 0136 92F83430 		ldrb	r3, [r2, #52]	@ zero_extendqisi2
 2454 013a 4CEA0303 		orr	r3, ip, r3
 2455 013e 63F07F03 		orn	r3, r3, #127
 2456 0142 82F83430 		strb	r3, [r2, #52]
 478:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBDly       = timeout;                 /* Store pend timeout in TCB               
 2457              		.loc 1 478 5 is_stmt 1 view .LVU730
 478:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBDly       = timeout;                 /* Store pend timeout in TCB               
 2458              		.loc 1 478 30 is_stmt 0 view .LVU731
 2459 0146 0023     		movs	r3, #0
 2460 0148 82F83530 		strb	r3, [r2, #53]
 479:uCOSII/Source/os_core.c ****     OS_EventTaskWaitMulti(pevents_pend);                /* Suspend task until events or timeout occ
 2461              		.loc 1 479 5 is_stmt 1 view .LVU732
 479:uCOSII/Source/os_core.c ****     OS_EventTaskWaitMulti(pevents_pend);                /* Suspend task until events or timeout occ
 2462              		.loc 1 479 30 is_stmt 0 view .LVU733
 2463 014c C2F83080 		str	r8, [r2, #48]
 480:uCOSII/Source/os_core.c **** 
 2464              		.loc 1 480 5 is_stmt 1 view .LVU734
 2465 0150 2846     		mov	r0, r5
 2466              	.LVL206:
 480:uCOSII/Source/os_core.c **** 
 2467              		.loc 1 480 5 is_stmt 0 view .LVU735
 2468 0152 FFF7FEFF 		bl	OS_EventTaskWaitMulti
 2469              	.LVL207:
ARM GAS  /tmp/ccxgEmFy.s 			page 87


 482:uCOSII/Source/os_core.c ****     OS_Sched();                                         /* Find next highest priority task ready   
 2470              		.loc 1 482 5 is_stmt 1 view .LVU736
 2471 0156 5846     		mov	r0, fp
 2472 0158 FFF7FEFF 		bl	OS_CPU_SR_Restore
 2473              	.LVL208:
 482:uCOSII/Source/os_core.c ****     OS_Sched();                                         /* Find next highest priority task ready   
 2474              		.loc 1 482 23 view .LVU737
 483:uCOSII/Source/os_core.c ****     OS_ENTER_CRITICAL();
 2475              		.loc 1 483 5 view .LVU738
 2476 015c FFF7FEFF 		bl	OS_Sched
 2477              	.LVL209:
 484:uCOSII/Source/os_core.c **** 
 2478              		.loc 1 484 5 view .LVU739
 2479 0160 FFF7FEFF 		bl	OS_CPU_SR_Save
 2480              	.LVL210:
 2481 0164 8046     		mov	r8, r0
 2482              	.LVL211:
 484:uCOSII/Source/os_core.c **** 
 2483              		.loc 1 484 24 view .LVU740
 486:uCOSII/Source/os_core.c ****         case OS_STAT_PEND_OK:
 2484              		.loc 1 486 5 view .LVU741
 486:uCOSII/Source/os_core.c ****         case OS_STAT_PEND_OK:
 2485              		.loc 1 486 21 is_stmt 0 view .LVU742
 2486 0166 DAF80000 		ldr	r0, [r10]
 2487              	.LVL212:
 486:uCOSII/Source/os_core.c ****         case OS_STAT_PEND_OK:
 2488              		.loc 1 486 21 view .LVU743
 2489 016a 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 486:uCOSII/Source/os_core.c ****         case OS_STAT_PEND_OK:
 2490              		.loc 1 486 5 view .LVU744
 2491 016e 0BB1     		cbz	r3, .L163
 2492 0170 022B     		cmp	r3, #2
 2493 0172 25D1     		bne	.L164
 2494              	.L163:
 489:uCOSII/Source/os_core.c ****              if (pevent != (OS_EVENT *)0) {             /* If task event ptr != NULL, ...          
 2495              		.loc 1 489 14 is_stmt 1 view .LVU745
 489:uCOSII/Source/os_core.c ****              if (pevent != (OS_EVENT *)0) {             /* If task event ptr != NULL, ...          
 2496              		.loc 1 489 21 is_stmt 0 view .LVU746
 2497 0174 C769     		ldr	r7, [r0, #28]
 2498              	.LVL213:
 490:uCOSII/Source/os_core.c ****                 *pevents_rdy++   =  pevent;             /* ... return available event ...          
 2499              		.loc 1 490 14 is_stmt 1 view .LVU747
 490:uCOSII/Source/os_core.c ****                 *pevents_rdy++   =  pevent;             /* ... return available event ...          
 2500              		.loc 1 490 17 is_stmt 0 view .LVU748
 2501 0176 DFB1     		cbz	r7, .L165
 491:uCOSII/Source/os_core.c ****                 *pevents_rdy     = (OS_EVENT *)0;       /* ... & NULL terminate return event array 
 2502              		.loc 1 491 17 is_stmt 1 view .LVU749
 491:uCOSII/Source/os_core.c ****                 *pevents_rdy     = (OS_EVENT *)0;       /* ... & NULL terminate return event array 
 2503              		.loc 1 491 29 is_stmt 0 view .LVU750
 2504 0178 2546     		mov	r5, r4
 2505              	.LVL214:
 491:uCOSII/Source/os_core.c ****                 *pevents_rdy     = (OS_EVENT *)0;       /* ... & NULL terminate return event array 
 2506              		.loc 1 491 34 view .LVU751
 2507 017a 45F8047B 		str	r7, [r5], #4
 2508              	.LVL215:
 492:uCOSII/Source/os_core.c ****                   events_rdy_nbr =  1;
 2509              		.loc 1 492 17 is_stmt 1 view .LVU752
ARM GAS  /tmp/ccxgEmFy.s 			page 88


 492:uCOSII/Source/os_core.c ****                   events_rdy_nbr =  1;
 2510              		.loc 1 492 34 is_stmt 0 view .LVU753
 2511 017e 0023     		movs	r3, #0
 2512 0180 6360     		str	r3, [r4, #4]
 493:uCOSII/Source/os_core.c **** 
 2513              		.loc 1 493 19 is_stmt 1 view .LVU754
 2514              	.LVL216:
 493:uCOSII/Source/os_core.c **** 
 2515              		.loc 1 493 34 is_stmt 0 view .LVU755
 2516 0182 4FF00109 		mov	r9, #1
 2517              	.LVL217:
 2518              	.L166:
 507:uCOSII/Source/os_core.c ****         case OS_STAT_PEND_OK:
 2519              		.loc 1 507 5 is_stmt 1 view .LVU756
 507:uCOSII/Source/os_core.c ****         case OS_STAT_PEND_OK:
 2520              		.loc 1 507 21 is_stmt 0 view .LVU757
 2521 0186 294B     		ldr	r3, .L186+8
 2522 0188 1A68     		ldr	r2, [r3]
 2523 018a 92F83530 		ldrb	r3, [r2, #53]	@ zero_extendqisi2
 507:uCOSII/Source/os_core.c ****         case OS_STAT_PEND_OK:
 2524              		.loc 1 507 5 view .LVU758
 2525 018e E3B1     		cbz	r3, .L167
 507:uCOSII/Source/os_core.c ****         case OS_STAT_PEND_OK:
 2526              		.loc 1 507 5 view .LVU759
 2527 0190 022B     		cmp	r3, #2
 2528 0192 33D0     		beq	.L168
 542:uCOSII/Source/os_core.c ****             *perr        =  OS_ERR_TIMEOUT;             /* Indicate that events timed out          
 2529              		.loc 1 542 13 is_stmt 1 view .LVU760
 2530              	.LVL218:
 542:uCOSII/Source/os_core.c ****             *perr        =  OS_ERR_TIMEOUT;             /* Indicate that events timed out          
 2531              		.loc 1 542 26 is_stmt 0 view .LVU761
 2532 0194 0023     		movs	r3, #0
 2533 0196 3360     		str	r3, [r6]
 543:uCOSII/Source/os_core.c ****              break;
 2534              		.loc 1 543 13 is_stmt 1 view .LVU762
 543:uCOSII/Source/os_core.c ****              break;
 2535              		.loc 1 543 26 is_stmt 0 view .LVU763
 2536 0198 0A23     		movs	r3, #10
 2537 019a 0A9A     		ldr	r2, [sp, #40]
 2538 019c 1370     		strb	r3, [r2]
 544:uCOSII/Source/os_core.c ****     }
 2539              		.loc 1 544 14 is_stmt 1 view .LVU764
 2540 019e 32E0     		b	.L174
 2541              	.LVL219:
 2542              	.L184:
 469:uCOSII/Source/os_core.c ****         OS_EXIT_CRITICAL();
 2543              		.loc 1 469 8 view .LVU765
 469:uCOSII/Source/os_core.c ****         OS_EXIT_CRITICAL();
 2544              		.loc 1 469 21 is_stmt 0 view .LVU766
 2545 01a0 0025     		movs	r5, #0
 2546              	.LVL220:
 469:uCOSII/Source/os_core.c ****         OS_EXIT_CRITICAL();
 2547              		.loc 1 469 21 view .LVU767
 2548 01a2 2560     		str	r5, [r4]
 470:uCOSII/Source/os_core.c ****        *perr        =  OS_ERR_NONE;
 2549              		.loc 1 470 9 is_stmt 1 view .LVU768
 2550 01a4 5846     		mov	r0, fp
ARM GAS  /tmp/ccxgEmFy.s 			page 89


 2551              	.LVL221:
 470:uCOSII/Source/os_core.c ****        *perr        =  OS_ERR_NONE;
 2552              		.loc 1 470 9 is_stmt 0 view .LVU769
 2553 01a6 FFF7FEFF 		bl	OS_CPU_SR_Restore
 2554              	.LVL222:
 470:uCOSII/Source/os_core.c ****        *perr        =  OS_ERR_NONE;
 2555              		.loc 1 470 27 is_stmt 1 view .LVU770
 471:uCOSII/Source/os_core.c ****         return (events_rdy_nbr);
 2556              		.loc 1 471 8 view .LVU771
 471:uCOSII/Source/os_core.c ****         return (events_rdy_nbr);
 2557              		.loc 1 471 21 is_stmt 0 view .LVU772
 2558 01aa 0A9B     		ldr	r3, [sp, #40]
 2559 01ac 1D70     		strb	r5, [r3]
 472:uCOSII/Source/os_core.c ****     }
 2560              		.loc 1 472 9 is_stmt 1 view .LVU773
 472:uCOSII/Source/os_core.c ****     }
 2561              		.loc 1 472 16 is_stmt 0 view .LVU774
 2562 01ae 3FE7     		b	.L147
 2563              	.LVL223:
 2564              	.L165:
 496:uCOSII/Source/os_core.c ****                  OS_EventTaskRemoveMulti(OSTCBCur, pevents_pend);
 2565              		.loc 1 496 18 is_stmt 1 view .LVU775
 496:uCOSII/Source/os_core.c ****                  OS_EventTaskRemoveMulti(OSTCBCur, pevents_pend);
 2566              		.loc 1 496 42 is_stmt 0 view .LVU776
 2567 01b0 0123     		movs	r3, #1
 2568 01b2 80F83530 		strb	r3, [r0, #53]
 497:uCOSII/Source/os_core.c ****              }
 2569              		.loc 1 497 18 is_stmt 1 view .LVU777
 2570 01b6 2946     		mov	r1, r5
 2571 01b8 FFF7FEFF 		bl	OS_EventTaskRemoveMulti
 2572              	.LVL224:
 2573 01bc 2546     		mov	r5, r4
 2574              	.LVL225:
 497:uCOSII/Source/os_core.c ****              }
 2575              		.loc 1 497 18 is_stmt 0 view .LVU778
 2576 01be E2E7     		b	.L166
 2577              	.LVL226:
 2578              	.L164:
 503:uCOSII/Source/os_core.c ****              break;
 2579              		.loc 1 503 14 is_stmt 1 view .LVU779
 2580 01c0 2946     		mov	r1, r5
 2581 01c2 FFF7FEFF 		bl	OS_EventTaskRemoveMulti
 2582              	.LVL227:
 504:uCOSII/Source/os_core.c ****     }
 2583              		.loc 1 504 14 view .LVU780
 2584 01c6 2546     		mov	r5, r4
 2585              	.LVL228:
 504:uCOSII/Source/os_core.c ****     }
 2586              		.loc 1 504 14 is_stmt 0 view .LVU781
 2587 01c8 DDE7     		b	.L166
 2588              	.LVL229:
 2589              	.L167:
 509:uCOSII/Source/os_core.c **** #if (OS_SEM_EN > 0u)
 2590              		.loc 1 509 14 is_stmt 1 view .LVU782
 509:uCOSII/Source/os_core.c **** #if (OS_SEM_EN > 0u)
 2591              		.loc 1 509 28 is_stmt 0 view .LVU783
 2592 01ca 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
ARM GAS  /tmp/ccxgEmFy.s 			page 90


 2593 01cc 022B     		cmp	r3, #2
 2594 01ce 0AD8     		bhi	.L170
 2595 01d0 5BB2     		sxtb	r3, r3
 2596 01d2 83B9     		cbnz	r3, .L185
 2597              	.L172:
 527:uCOSII/Source/os_core.c ****                      *pevents_rdy = (OS_EVENT *)0;      /* NULL terminate return event array       
 2598              		.loc 1 527 23 is_stmt 1 view .LVU784
 2599 01d4 4046     		mov	r0, r8
 2600 01d6 FFF7FEFF 		bl	OS_CPU_SR_Restore
 2601              	.LVL230:
 527:uCOSII/Source/os_core.c ****                      *pevents_rdy = (OS_EVENT *)0;      /* NULL terminate return event array       
 2602              		.loc 1 527 41 view .LVU785
 528:uCOSII/Source/os_core.c ****                      *perr        =  OS_ERR_EVENT_TYPE;
 2603              		.loc 1 528 22 view .LVU786
 528:uCOSII/Source/os_core.c ****                      *perr        =  OS_ERR_EVENT_TYPE;
 2604              		.loc 1 528 35 is_stmt 0 view .LVU787
 2605 01da 0023     		movs	r3, #0
 2606 01dc 2B60     		str	r3, [r5]
 529:uCOSII/Source/os_core.c ****                       return (events_rdy_nbr);
 2607              		.loc 1 529 22 is_stmt 1 view .LVU788
 529:uCOSII/Source/os_core.c ****                       return (events_rdy_nbr);
 2608              		.loc 1 529 35 is_stmt 0 view .LVU789
 2609 01de 0123     		movs	r3, #1
 2610 01e0 0A9A     		ldr	r2, [sp, #40]
 2611 01e2 1370     		strb	r3, [r2]
 530:uCOSII/Source/os_core.c ****              }
 2612              		.loc 1 530 23 is_stmt 1 view .LVU790
 530:uCOSII/Source/os_core.c ****              }
 2613              		.loc 1 530 30 is_stmt 0 view .LVU791
 2614 01e4 24E7     		b	.L147
 2615              	.L170:
 530:uCOSII/Source/os_core.c ****              }
 2616              		.loc 1 530 30 view .LVU792
 2617 01e6 032B     		cmp	r3, #3
 2618 01e8 F4D1     		bne	.L172
 512:uCOSII/Source/os_core.c ****                       break;
 2619              		.loc 1 512 22 is_stmt 1 view .LVU793
 2620              	.LVL231:
 512:uCOSII/Source/os_core.c ****                       break;
 2621              		.loc 1 512 35 is_stmt 0 view .LVU794
 2622 01ea 0023     		movs	r3, #0
 2623 01ec 3360     		str	r3, [r6]
 513:uCOSII/Source/os_core.c **** #endif
 2624              		.loc 1 513 23 is_stmt 1 view .LVU795
 2625              	.LVL232:
 2626              	.L173:
 532:uCOSII/Source/os_core.c ****              break;
 2627              		.loc 1 532 13 view .LVU796
 532:uCOSII/Source/os_core.c ****              break;
 2628              		.loc 1 532 19 is_stmt 0 view .LVU797
 2629 01ee 0023     		movs	r3, #0
 2630 01f0 0A9A     		ldr	r2, [sp, #40]
 2631 01f2 1370     		strb	r3, [r2]
 533:uCOSII/Source/os_core.c **** 
 2632              		.loc 1 533 14 is_stmt 1 view .LVU798
 2633 01f4 07E0     		b	.L174
 2634              	.LVL233:
ARM GAS  /tmp/ccxgEmFy.s 			page 91


 2635              	.L185:
 520:uCOSII/Source/os_core.c ****                       break;
 2636              		.loc 1 520 22 view .LVU799
 520:uCOSII/Source/os_core.c ****                       break;
 2637              		.loc 1 520 37 is_stmt 0 view .LVU800
 2638 01f6 536A     		ldr	r3, [r2, #36]
 520:uCOSII/Source/os_core.c ****                       break;
 2639              		.loc 1 520 35 view .LVU801
 2640 01f8 3360     		str	r3, [r6]
 521:uCOSII/Source/os_core.c **** #endif
 2641              		.loc 1 521 23 is_stmt 1 view .LVU802
 2642 01fa F8E7     		b	.L173
 2643              	.LVL234:
 2644              	.L168:
 536:uCOSII/Source/os_core.c ****             *perr        =  OS_ERR_PEND_ABORT;          /* Indicate that event  aborted            
 2645              		.loc 1 536 13 view .LVU803
 536:uCOSII/Source/os_core.c ****             *perr        =  OS_ERR_PEND_ABORT;          /* Indicate that event  aborted            
 2646              		.loc 1 536 26 is_stmt 0 view .LVU804
 2647 01fc 0023     		movs	r3, #0
 2648 01fe 3360     		str	r3, [r6]
 537:uCOSII/Source/os_core.c ****              break;
 2649              		.loc 1 537 13 is_stmt 1 view .LVU805
 537:uCOSII/Source/os_core.c ****              break;
 2650              		.loc 1 537 26 is_stmt 0 view .LVU806
 2651 0200 0E23     		movs	r3, #14
 2652 0202 0A9A     		ldr	r2, [sp, #40]
 2653 0204 1370     		strb	r3, [r2]
 538:uCOSII/Source/os_core.c **** 
 2654              		.loc 1 538 14 is_stmt 1 view .LVU807
 2655              	.LVL235:
 2656              	.L174:
 547:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBStatPend      =  OS_STAT_PEND_OK;    /* Clear pend  status                      
 2657              		.loc 1 547 5 view .LVU808
 547:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBStatPend      =  OS_STAT_PEND_OK;    /* Clear pend  status                      
 2658              		.loc 1 547 13 is_stmt 0 view .LVU809
 2659 0206 094B     		ldr	r3, .L186+8
 2660 0208 1B68     		ldr	r3, [r3]
 547:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBStatPend      =  OS_STAT_PEND_OK;    /* Clear pend  status                      
 2661              		.loc 1 547 34 view .LVU810
 2662 020a 0022     		movs	r2, #0
 2663 020c 83F83420 		strb	r2, [r3, #52]
 548:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBEventPtr      = (OS_EVENT  *)0;      /* Clear event pointers                    
 2664              		.loc 1 548 5 is_stmt 1 view .LVU811
 548:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBEventPtr      = (OS_EVENT  *)0;      /* Clear event pointers                    
 2665              		.loc 1 548 34 is_stmt 0 view .LVU812
 2666 0210 83F83520 		strb	r2, [r3, #53]
 549:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)0;
 2667              		.loc 1 549 5 is_stmt 1 view .LVU813
 549:uCOSII/Source/os_core.c ****     OSTCBCur->OSTCBEventMultiPtr = (OS_EVENT **)0;
 2668              		.loc 1 549 34 is_stmt 0 view .LVU814
 2669 0214 DA61     		str	r2, [r3, #28]
 550:uCOSII/Source/os_core.c **** #if ((OS_MBOX_EN > 0u) ||                 \
 2670              		.loc 1 550 5 is_stmt 1 view .LVU815
 550:uCOSII/Source/os_core.c **** #if ((OS_MBOX_EN > 0u) ||                 \
 2671              		.loc 1 550 34 is_stmt 0 view .LVU816
 2672 0216 1A62     		str	r2, [r3, #32]
 553:uCOSII/Source/os_core.c **** #endif
ARM GAS  /tmp/ccxgEmFy.s 			page 92


 2673              		.loc 1 553 5 is_stmt 1 view .LVU817
 553:uCOSII/Source/os_core.c **** #endif
 2674              		.loc 1 553 34 is_stmt 0 view .LVU818
 2675 0218 5A62     		str	r2, [r3, #36]
 555:uCOSII/Source/os_core.c **** 
 2676              		.loc 1 555 5 is_stmt 1 view .LVU819
 2677 021a 4046     		mov	r0, r8
 2678 021c FFF7FEFF 		bl	OS_CPU_SR_Restore
 2679              	.LVL236:
 555:uCOSII/Source/os_core.c **** 
 2680              		.loc 1 555 23 view .LVU820
 557:uCOSII/Source/os_core.c **** }
 2681              		.loc 1 557 5 view .LVU821
 557:uCOSII/Source/os_core.c **** }
 2682              		.loc 1 557 12 is_stmt 0 view .LVU822
 2683 0220 06E7     		b	.L147
 2684              	.L187:
 2685 0222 00BF     		.align	2
 2686              	.L186:
 2687 0224 00000000 		.word	OSIntNesting
 2688 0228 00000000 		.word	OSLockNesting
 2689 022c 00000000 		.word	OSTCBCur
 2690              		.cfi_endproc
 2691              	.LFE2:
 2693              		.section	.text.OSSchedUnlock,"ax",%progbits
 2694              		.align	1
 2695              		.global	OSSchedUnlock
 2696              		.syntax unified
 2697              		.thumb
 2698              		.thumb_func
 2699              		.fpu fpv4-sp-d16
 2701              	OSSchedUnlock:
 2702              	.LFB7:
 801:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                               /* Allocate storage for CPU status regis
 2703              		.loc 1 801 1 is_stmt 1 view -0
 2704              		.cfi_startproc
 2705              		@ args = 0, pretend = 0, frame = 0
 2706              		@ frame_needed = 0, uses_anonymous_args = 0
 2707 0000 08B5     		push	{r3, lr}
 2708              	.LCFI27:
 2709              		.cfi_def_cfa_offset 8
 2710              		.cfi_offset 3, -8
 2711              		.cfi_offset 14, -4
 803:uCOSII/Source/os_core.c **** #endif
 2712              		.loc 1 803 5 view .LVU824
 2713              	.LVL237:
 808:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
 2714              		.loc 1 808 5 view .LVU825
 808:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
 2715              		.loc 1 808 19 is_stmt 0 view .LVU826
 2716 0002 104B     		ldr	r3, .L195
 2717 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 808:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
 2718              		.loc 1 808 8 view .LVU827
 2719 0006 012B     		cmp	r3, #1
 2720 0008 00D0     		beq	.L194
 2721              	.LVL238:
ARM GAS  /tmp/ccxgEmFy.s 			page 93


 2722              	.L188:
 826:uCOSII/Source/os_core.c **** #endif
 2723              		.loc 1 826 1 view .LVU828
 2724 000a 08BD     		pop	{r3, pc}
 2725              	.LVL239:
 2726              	.L194:
 809:uCOSII/Source/os_core.c ****         if (OSIntNesting == 0u) {                          /* Can't call from an ISR               
 2727              		.loc 1 809 9 is_stmt 1 view .LVU829
 2728 000c FFF7FEFF 		bl	OS_CPU_SR_Save
 2729              	.LVL240:
 809:uCOSII/Source/os_core.c ****         if (OSIntNesting == 0u) {                          /* Can't call from an ISR               
 2730              		.loc 1 809 28 view .LVU830
 810:uCOSII/Source/os_core.c ****             if (OSLockNesting > 0u) {                      /* Do not decrement if already 0        
 2731              		.loc 1 810 9 view .LVU831
 810:uCOSII/Source/os_core.c ****             if (OSLockNesting > 0u) {                      /* Do not decrement if already 0        
 2732              		.loc 1 810 26 is_stmt 0 view .LVU832
 2733 0010 0D4B     		ldr	r3, .L195+4
 2734 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 810:uCOSII/Source/os_core.c ****             if (OSLockNesting > 0u) {                      /* Do not decrement if already 0        
 2735              		.loc 1 810 12 view .LVU833
 2736 0014 93B9     		cbnz	r3, .L190
 811:uCOSII/Source/os_core.c ****                 OSLockNesting--;                           /* Decrement lock nesting level         
 2737              		.loc 1 811 13 is_stmt 1 view .LVU834
 811:uCOSII/Source/os_core.c ****                 OSLockNesting--;                           /* Decrement lock nesting level         
 2738              		.loc 1 811 31 is_stmt 0 view .LVU835
 2739 0016 0D4B     		ldr	r3, .L195+8
 2740 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 811:uCOSII/Source/os_core.c ****                 OSLockNesting--;                           /* Decrement lock nesting level         
 2741              		.loc 1 811 16 view .LVU836
 2742 001a 63B1     		cbz	r3, .L191
 812:uCOSII/Source/os_core.c ****                 if (OSLockNesting == 0u) {                 /* See if scheduler is enabled          
 2743              		.loc 1 812 17 is_stmt 1 view .LVU837
 812:uCOSII/Source/os_core.c ****                 if (OSLockNesting == 0u) {                 /* See if scheduler is enabled          
 2744              		.loc 1 812 30 is_stmt 0 view .LVU838
 2745 001c 013B     		subs	r3, r3, #1
 2746 001e DBB2     		uxtb	r3, r3
 2747 0020 0A4A     		ldr	r2, .L195+8
 2748 0022 1370     		strb	r3, [r2]
 813:uCOSII/Source/os_core.c ****                     OS_EXIT_CRITICAL();
 2749              		.loc 1 813 17 is_stmt 1 view .LVU839
 813:uCOSII/Source/os_core.c ****                     OS_EXIT_CRITICAL();
 2750              		.loc 1 813 20 is_stmt 0 view .LVU840
 2751 0024 23B9     		cbnz	r3, .L192
 814:uCOSII/Source/os_core.c ****                     OS_Sched();                            /* See if a HPT is ready                
 2752              		.loc 1 814 21 is_stmt 1 view .LVU841
 2753 0026 FFF7FEFF 		bl	OS_CPU_SR_Restore
 2754              	.LVL241:
 814:uCOSII/Source/os_core.c ****                     OS_Sched();                            /* See if a HPT is ready                
 2755              		.loc 1 814 39 view .LVU842
 815:uCOSII/Source/os_core.c ****                 } else {
 2756              		.loc 1 815 21 view .LVU843
 2757 002a FFF7FEFF 		bl	OS_Sched
 2758              	.LVL242:
 2759 002e ECE7     		b	.L188
 2760              	.LVL243:
 2761              	.L192:
 817:uCOSII/Source/os_core.c ****                 }
ARM GAS  /tmp/ccxgEmFy.s 			page 94


 2762              		.loc 1 817 21 view .LVU844
 2763 0030 FFF7FEFF 		bl	OS_CPU_SR_Restore
 2764              	.LVL244:
 817:uCOSII/Source/os_core.c ****                 }
 2765              		.loc 1 817 21 is_stmt 0 view .LVU845
 2766 0034 E9E7     		b	.L188
 2767              	.LVL245:
 2768              	.L191:
 820:uCOSII/Source/os_core.c ****             }
 2769              		.loc 1 820 17 is_stmt 1 discriminator 1 view .LVU846
 2770 0036 FFF7FEFF 		bl	OS_CPU_SR_Restore
 2771              	.LVL246:
 820:uCOSII/Source/os_core.c ****             }
 2772              		.loc 1 820 17 is_stmt 0 discriminator 1 view .LVU847
 2773 003a E6E7     		b	.L188
 2774              	.LVL247:
 2775              	.L190:
 823:uCOSII/Source/os_core.c ****         }
 2776              		.loc 1 823 13 is_stmt 1 view .LVU848
 2777 003c FFF7FEFF 		bl	OS_CPU_SR_Restore
 2778              	.LVL248:
 823:uCOSII/Source/os_core.c ****         }
 2779              		.loc 1 823 31 view .LVU849
 826:uCOSII/Source/os_core.c **** #endif
 2780              		.loc 1 826 1 is_stmt 0 view .LVU850
 2781 0040 E3E7     		b	.L188
 2782              	.L196:
 2783 0042 00BF     		.align	2
 2784              	.L195:
 2785 0044 00000000 		.word	OSRunning
 2786 0048 00000000 		.word	OSIntNesting
 2787 004c 00000000 		.word	OSLockNesting
 2788              		.cfi_endproc
 2789              	.LFE7:
 2791              		.section	.text.OS_StrLen,"ax",%progbits
 2792              		.align	1
 2793              		.global	OS_StrLen
 2794              		.syntax unified
 2795              		.thumb
 2796              		.thumb_func
 2797              		.fpu fpv4-sp-d16
 2799              	OS_StrLen:
 2800              	.LVL249:
 2801              	.LFB29:
1757:uCOSII/Source/os_core.c ****     INT8U  len;
 2802              		.loc 1 1757 1 is_stmt 1 view -0
 2803              		.cfi_startproc
 2804              		@ args = 0, pretend = 0, frame = 0
 2805              		@ frame_needed = 0, uses_anonymous_args = 0
 2806              		@ link register save eliminated.
1757:uCOSII/Source/os_core.c ****     INT8U  len;
 2807              		.loc 1 1757 1 is_stmt 0 view .LVU852
 2808 0000 0346     		mov	r3, r0
1758:uCOSII/Source/os_core.c **** 
 2809              		.loc 1 1758 5 is_stmt 1 view .LVU853
1767:uCOSII/Source/os_core.c ****     while (*psrc != OS_ASCII_NUL) {
 2810              		.loc 1 1767 5 view .LVU854
ARM GAS  /tmp/ccxgEmFy.s 			page 95


 2811              	.LVL250:
1768:uCOSII/Source/os_core.c ****         psrc++;
 2812              		.loc 1 1768 5 view .LVU855
1767:uCOSII/Source/os_core.c ****     while (*psrc != OS_ASCII_NUL) {
 2813              		.loc 1 1767 9 is_stmt 0 view .LVU856
 2814 0002 0020     		movs	r0, #0
 2815              	.LVL251:
 2816              	.L198:
1768:uCOSII/Source/os_core.c ****         psrc++;
 2817              		.loc 1 1768 11 is_stmt 1 view .LVU857
1768:uCOSII/Source/os_core.c ****         psrc++;
 2818              		.loc 1 1768 12 is_stmt 0 view .LVU858
 2819 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1768:uCOSII/Source/os_core.c ****         psrc++;
 2820              		.loc 1 1768 11 view .LVU859
 2821 0006 1AB1     		cbz	r2, .L200
1769:uCOSII/Source/os_core.c ****         len++;
 2822              		.loc 1 1769 9 is_stmt 1 view .LVU860
1769:uCOSII/Source/os_core.c ****         len++;
 2823              		.loc 1 1769 13 is_stmt 0 view .LVU861
 2824 0008 0133     		adds	r3, r3, #1
 2825              	.LVL252:
1770:uCOSII/Source/os_core.c ****     }
 2826              		.loc 1 1770 9 is_stmt 1 view .LVU862
1770:uCOSII/Source/os_core.c ****     }
 2827              		.loc 1 1770 12 is_stmt 0 view .LVU863
 2828 000a 0130     		adds	r0, r0, #1
 2829              	.LVL253:
1770:uCOSII/Source/os_core.c ****     }
 2830              		.loc 1 1770 12 view .LVU864
 2831 000c C0B2     		uxtb	r0, r0
 2832              	.LVL254:
1770:uCOSII/Source/os_core.c ****     }
 2833              		.loc 1 1770 12 view .LVU865
 2834 000e F9E7     		b	.L198
 2835              	.L200:
1773:uCOSII/Source/os_core.c **** #endif
 2836              		.loc 1 1773 1 view .LVU866
 2837 0010 7047     		bx	lr
 2838              		.cfi_endproc
 2839              	.LFE29:
 2841              		.section	.text.OSEventNameGet,"ax",%progbits
 2842              		.align	1
 2843              		.global	OSEventNameGet
 2844              		.syntax unified
 2845              		.thumb
 2846              		.thumb_func
 2847              		.fpu fpv4-sp-d16
 2849              	OSEventNameGet:
 2850              	.LVL255:
 2851              	.LFB0:
 113:uCOSII/Source/os_core.c ****     INT8U      len;
 2852              		.loc 1 113 1 is_stmt 1 view -0
 2853              		.cfi_startproc
 2854              		@ args = 0, pretend = 0, frame = 0
 2855              		@ frame_needed = 0, uses_anonymous_args = 0
 113:uCOSII/Source/os_core.c ****     INT8U      len;
ARM GAS  /tmp/ccxgEmFy.s 			page 96


 2856              		.loc 1 113 1 is_stmt 0 view .LVU868
 2857 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2858              	.LCFI28:
 2859              		.cfi_def_cfa_offset 24
 2860              		.cfi_offset 4, -24
 2861              		.cfi_offset 5, -20
 2862              		.cfi_offset 6, -16
 2863              		.cfi_offset 7, -12
 2864              		.cfi_offset 8, -8
 2865              		.cfi_offset 14, -4
 2866 0004 1546     		mov	r5, r2
 114:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 2867              		.loc 1 114 5 is_stmt 1 view .LVU869
 116:uCOSII/Source/os_core.c **** #endif
 2868              		.loc 1 116 5 view .LVU870
 2869              	.LVL256:
 138:uCOSII/Source/os_core.c ****         *perr  = OS_ERR_NAME_GET_ISR;
 2870              		.loc 1 138 5 view .LVU871
 138:uCOSII/Source/os_core.c ****         *perr  = OS_ERR_NAME_GET_ISR;
 2871              		.loc 1 138 22 is_stmt 0 view .LVU872
 2872 0006 104B     		ldr	r3, .L207
 2873 0008 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 138:uCOSII/Source/os_core.c ****         *perr  = OS_ERR_NAME_GET_ISR;
 2874              		.loc 1 138 8 view .LVU873
 2875 000a 54B9     		cbnz	r4, .L206
 2876 000c 0646     		mov	r6, r0
 2877 000e 0F46     		mov	r7, r1
 142:uCOSII/Source/os_core.c ****         case OS_EVENT_TYPE_SEM:
 2878              		.loc 1 142 5 is_stmt 1 view .LVU874
 142:uCOSII/Source/os_core.c ****         case OS_EVENT_TYPE_SEM:
 2879              		.loc 1 142 19 is_stmt 0 view .LVU875
 2880 0010 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 142:uCOSII/Source/os_core.c ****         case OS_EVENT_TYPE_SEM:
 2881              		.loc 1 142 5 view .LVU876
 2882 0012 013B     		subs	r3, r3, #1
 2883 0014 032B     		cmp	r3, #3
 2884 0016 08D9     		bls	.L204
 150:uCOSII/Source/os_core.c ****              return (0u);
 2885              		.loc 1 150 14 is_stmt 1 view .LVU877
 150:uCOSII/Source/os_core.c ****              return (0u);
 2886              		.loc 1 150 20 is_stmt 0 view .LVU878
 2887 0018 0123     		movs	r3, #1
 2888 001a 1370     		strb	r3, [r2]
 151:uCOSII/Source/os_core.c ****     }
 2889              		.loc 1 151 14 is_stmt 1 view .LVU879
 2890              	.LVL257:
 2891              	.L203:
 159:uCOSII/Source/os_core.c **** #endif
 2892              		.loc 1 159 1 is_stmt 0 view .LVU880
 2893 001c 2046     		mov	r0, r4
 2894 001e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2895              	.LVL258:
 2896              	.L206:
 139:uCOSII/Source/os_core.c ****         return (0u);
 2897              		.loc 1 139 9 is_stmt 1 view .LVU881
 139:uCOSII/Source/os_core.c ****         return (0u);
 2898              		.loc 1 139 16 is_stmt 0 view .LVU882
ARM GAS  /tmp/ccxgEmFy.s 			page 97


 2899 0022 1123     		movs	r3, #17
 2900 0024 1370     		strb	r3, [r2]
 140:uCOSII/Source/os_core.c ****     }
 2901              		.loc 1 140 9 is_stmt 1 view .LVU883
 140:uCOSII/Source/os_core.c ****     }
 2902              		.loc 1 140 16 is_stmt 0 view .LVU884
 2903 0026 0024     		movs	r4, #0
 2904 0028 F8E7     		b	.L203
 2905              	.L204:
 147:uCOSII/Source/os_core.c **** 
 2906              		.loc 1 147 14 is_stmt 1 view .LVU885
 153:uCOSII/Source/os_core.c ****     *pname = pevent->OSEventName;
 2907              		.loc 1 153 5 view .LVU886
 2908 002a FFF7FEFF 		bl	OS_CPU_SR_Save
 2909              	.LVL259:
 153:uCOSII/Source/os_core.c ****     *pname = pevent->OSEventName;
 2910              		.loc 1 153 5 is_stmt 0 view .LVU887
 2911 002e 8046     		mov	r8, r0
 2912              	.LVL260:
 153:uCOSII/Source/os_core.c ****     *pname = pevent->OSEventName;
 2913              		.loc 1 153 24 is_stmt 1 view .LVU888
 154:uCOSII/Source/os_core.c ****     len    = OS_StrLen(*pname);
 2914              		.loc 1 154 5 view .LVU889
 154:uCOSII/Source/os_core.c ****     len    = OS_StrLen(*pname);
 2915              		.loc 1 154 20 is_stmt 0 view .LVU890
 2916 0030 7069     		ldr	r0, [r6, #20]
 2917              	.LVL261:
 154:uCOSII/Source/os_core.c ****     len    = OS_StrLen(*pname);
 2918              		.loc 1 154 12 view .LVU891
 2919 0032 3860     		str	r0, [r7]
 155:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 2920              		.loc 1 155 5 is_stmt 1 view .LVU892
 155:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 2921              		.loc 1 155 14 is_stmt 0 view .LVU893
 2922 0034 FFF7FEFF 		bl	OS_StrLen
 2923              	.LVL262:
 2924 0038 0446     		mov	r4, r0
 2925              	.LVL263:
 156:uCOSII/Source/os_core.c ****     *perr  = OS_ERR_NONE;
 2926              		.loc 1 156 5 is_stmt 1 view .LVU894
 2927 003a 4046     		mov	r0, r8
 2928 003c FFF7FEFF 		bl	OS_CPU_SR_Restore
 2929              	.LVL264:
 156:uCOSII/Source/os_core.c ****     *perr  = OS_ERR_NONE;
 2930              		.loc 1 156 23 view .LVU895
 157:uCOSII/Source/os_core.c ****     return (len);
 2931              		.loc 1 157 5 view .LVU896
 157:uCOSII/Source/os_core.c ****     return (len);
 2932              		.loc 1 157 12 is_stmt 0 view .LVU897
 2933 0040 0023     		movs	r3, #0
 2934 0042 2B70     		strb	r3, [r5]
 158:uCOSII/Source/os_core.c **** }
 2935              		.loc 1 158 5 is_stmt 1 view .LVU898
 158:uCOSII/Source/os_core.c **** }
 2936              		.loc 1 158 12 is_stmt 0 view .LVU899
 2937 0044 EAE7     		b	.L203
 2938              	.L208:
ARM GAS  /tmp/ccxgEmFy.s 			page 98


 2939 0046 00BF     		.align	2
 2940              	.L207:
 2941 0048 00000000 		.word	OSIntNesting
 2942              		.cfi_endproc
 2943              	.LFE0:
 2945              		.section	.text.OS_TaskStatStkChk,"ax",%progbits
 2946              		.align	1
 2947              		.global	OS_TaskStatStkChk
 2948              		.syntax unified
 2949              		.thumb
 2950              		.thumb_func
 2951              		.fpu fpv4-sp-d16
 2953              	OS_TaskStatStkChk:
 2954              	.LFB32:
1811:uCOSII/Source/os_core.c ****     }
1812:uCOSII/Source/os_core.c **** }
1813:uCOSII/Source/os_core.c **** /*$PAGE*/
1814:uCOSII/Source/os_core.c **** /*
1815:uCOSII/Source/os_core.c **** ***************************************************************************************************
1816:uCOSII/Source/os_core.c **** *                                           STATISTICS TASK
1817:uCOSII/Source/os_core.c **** *
1818:uCOSII/Source/os_core.c **** * Description: This task is internal to uC/OS-II and is used to compute some statistics about the
1819:uCOSII/Source/os_core.c **** *              multitasking environment.  Specifically, OS_TaskStat() computes the CPU usage.
1820:uCOSII/Source/os_core.c **** *              CPU usage is determined by:
1821:uCOSII/Source/os_core.c **** *
1822:uCOSII/Source/os_core.c **** *                                          OSIdleCtr
1823:uCOSII/Source/os_core.c **** *                 OSCPUUsage = 100 * (1 - ------------)     (units are in %)
1824:uCOSII/Source/os_core.c **** *                                         OSIdleCtrMax
1825:uCOSII/Source/os_core.c **** *
1826:uCOSII/Source/os_core.c **** * Arguments  : parg     this pointer is not used at this time.
1827:uCOSII/Source/os_core.c **** *
1828:uCOSII/Source/os_core.c **** * Returns    : none
1829:uCOSII/Source/os_core.c **** *
1830:uCOSII/Source/os_core.c **** * Notes      : 1) This task runs at a priority level higher than the idle task.  In fact, it runs a
1831:uCOSII/Source/os_core.c **** *                 next higher priority, OS_TASK_IDLE_PRIO-1.
1832:uCOSII/Source/os_core.c **** *              2) You can disable this task by setting the configuration #define OS_TASK_STAT_EN to
1833:uCOSII/Source/os_core.c **** *              3) You MUST have at least a delay of 2/10 seconds to allow for the system to establi
1834:uCOSII/Source/os_core.c **** *                 maximum value for the idle counter.
1835:uCOSII/Source/os_core.c **** ***************************************************************************************************
1836:uCOSII/Source/os_core.c **** */
1837:uCOSII/Source/os_core.c **** 
1838:uCOSII/Source/os_core.c **** #if OS_TASK_STAT_EN > 0u
1839:uCOSII/Source/os_core.c **** void  OS_TaskStat (void *p_arg)
1840:uCOSII/Source/os_core.c **** {
1841:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
1842:uCOSII/Source/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
1843:uCOSII/Source/os_core.c **** #endif
1844:uCOSII/Source/os_core.c **** 
1845:uCOSII/Source/os_core.c **** 
1846:uCOSII/Source/os_core.c **** 
1847:uCOSII/Source/os_core.c ****     p_arg = p_arg;                               /* Prevent compiler warning for not using 'p_arg' 
1848:uCOSII/Source/os_core.c ****     while (OSStatRdy == OS_FALSE) {
1849:uCOSII/Source/os_core.c ****         OSTimeDly(2u * OS_TICKS_PER_SEC / 10u);  /* Wait until statistic task is ready             
1850:uCOSII/Source/os_core.c ****     }
1851:uCOSII/Source/os_core.c ****     OSIdleCtrMax /= 100uL;
1852:uCOSII/Source/os_core.c ****     if (OSIdleCtrMax == 0uL) {
1853:uCOSII/Source/os_core.c ****         OSCPUUsage = 0u;
ARM GAS  /tmp/ccxgEmFy.s 			page 99


1854:uCOSII/Source/os_core.c **** #if OS_TASK_SUSPEND_EN > 0u
1855:uCOSII/Source/os_core.c ****         (void)OSTaskSuspend(OS_PRIO_SELF);
1856:uCOSII/Source/os_core.c **** #else
1857:uCOSII/Source/os_core.c ****         for (;;) {
1858:uCOSII/Source/os_core.c ****             OSTimeDly(OS_TICKS_PER_SEC);
1859:uCOSII/Source/os_core.c ****         }
1860:uCOSII/Source/os_core.c **** #endif
1861:uCOSII/Source/os_core.c ****     }
1862:uCOSII/Source/os_core.c ****     OS_ENTER_CRITICAL();
1863:uCOSII/Source/os_core.c ****     OSIdleCtr = OSIdleCtrMax * 100uL;            /* Set initial CPU usage as 0%                    
1864:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
1865:uCOSII/Source/os_core.c ****     for (;;) {
1866:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
1867:uCOSII/Source/os_core.c ****         OSIdleCtrRun = OSIdleCtr;                /* Obtain the of the idle counter for the past sec
1868:uCOSII/Source/os_core.c ****         OSIdleCtr    = 0uL;                      /* Reset the idle counter for the next second     
1869:uCOSII/Source/os_core.c ****         OS_EXIT_CRITICAL();
1870:uCOSII/Source/os_core.c ****         OSCPUUsage   = (INT8U)(100uL - OSIdleCtrRun / OSIdleCtrMax);
1871:uCOSII/Source/os_core.c ****         OSTaskStatHook();                        /* Invoke user definable hook                     
1872:uCOSII/Source/os_core.c **** #if (OS_TASK_STAT_STK_CHK_EN > 0u) && (OS_TASK_CREATE_EXT_EN > 0u)
1873:uCOSII/Source/os_core.c ****         OS_TaskStatStkChk();                     /* Check the stacks for each task                 
1874:uCOSII/Source/os_core.c **** #endif
1875:uCOSII/Source/os_core.c ****         OSTimeDly(OS_TICKS_PER_SEC / 10u);       /* Accumulate OSIdleCtr for the next 1/10 second  
1876:uCOSII/Source/os_core.c ****     }
1877:uCOSII/Source/os_core.c **** }
1878:uCOSII/Source/os_core.c **** #endif
1879:uCOSII/Source/os_core.c **** /*$PAGE*/
1880:uCOSII/Source/os_core.c **** /*
1881:uCOSII/Source/os_core.c **** ***************************************************************************************************
1882:uCOSII/Source/os_core.c **** *                                        CHECK ALL TASK STACKS
1883:uCOSII/Source/os_core.c **** *
1884:uCOSII/Source/os_core.c **** * Description: This function is called by OS_TaskStat() to check the stacks of each active task.
1885:uCOSII/Source/os_core.c **** *
1886:uCOSII/Source/os_core.c **** * Arguments  : none
1887:uCOSII/Source/os_core.c **** *
1888:uCOSII/Source/os_core.c **** * Returns    : none
1889:uCOSII/Source/os_core.c **** ***************************************************************************************************
1890:uCOSII/Source/os_core.c **** */
1891:uCOSII/Source/os_core.c **** 
1892:uCOSII/Source/os_core.c **** #if (OS_TASK_STAT_STK_CHK_EN > 0u) && (OS_TASK_CREATE_EXT_EN > 0u)
1893:uCOSII/Source/os_core.c **** void  OS_TaskStatStkChk (void)
1894:uCOSII/Source/os_core.c **** {
 2955              		.loc 1 1894 1 is_stmt 1 view -0
 2956              		.cfi_startproc
 2957              		@ args = 0, pretend = 0, frame = 8
 2958              		@ frame_needed = 0, uses_anonymous_args = 0
 2959 0000 10B5     		push	{r4, lr}
 2960              	.LCFI29:
 2961              		.cfi_def_cfa_offset 8
 2962              		.cfi_offset 4, -8
 2963              		.cfi_offset 14, -4
 2964 0002 82B0     		sub	sp, sp, #8
 2965              	.LCFI30:
 2966              		.cfi_def_cfa_offset 16
1895:uCOSII/Source/os_core.c ****     OS_TCB      *ptcb;
 2967              		.loc 1 1895 5 view .LVU901
1896:uCOSII/Source/os_core.c ****     OS_STK_DATA  stk_data;
 2968              		.loc 1 1896 5 view .LVU902
ARM GAS  /tmp/ccxgEmFy.s 			page 100


1897:uCOSII/Source/os_core.c ****     INT8U        err;
 2969              		.loc 1 1897 5 view .LVU903
1898:uCOSII/Source/os_core.c ****     INT8U        prio;
 2970              		.loc 1 1898 5 view .LVU904
1899:uCOSII/Source/os_core.c **** 
1900:uCOSII/Source/os_core.c **** 
1901:uCOSII/Source/os_core.c ****     for (prio = 0u; prio <= OS_TASK_IDLE_PRIO; prio++) {
 2971              		.loc 1 1901 5 view .LVU905
 2972              	.LVL265:
 2973              		.loc 1 1901 15 is_stmt 0 view .LVU906
 2974 0004 0024     		movs	r4, #0
 2975              		.loc 1 1901 5 view .LVU907
 2976 0006 01E0     		b	.L210
 2977              	.LVL266:
 2978              	.L211:
 2979              		.loc 1 1901 48 is_stmt 1 discriminator 2 view .LVU908
 2980              		.loc 1 1901 52 is_stmt 0 discriminator 2 view .LVU909
 2981 0008 0134     		adds	r4, r4, #1
 2982              	.LVL267:
 2983              		.loc 1 1901 52 discriminator 2 view .LVU910
 2984 000a E4B2     		uxtb	r4, r4
 2985              	.LVL268:
 2986              	.L210:
 2987              		.loc 1 1901 21 is_stmt 1 discriminator 1 view .LVU911
 2988              		.loc 1 1901 5 is_stmt 0 discriminator 1 view .LVU912
 2989 000c 3F2C     		cmp	r4, #63
 2990 000e 14D8     		bhi	.L214
1902:uCOSII/Source/os_core.c ****         err = OSTaskStkChk(prio, &stk_data);
 2991              		.loc 1 1902 9 is_stmt 1 view .LVU913
 2992              		.loc 1 1902 15 is_stmt 0 view .LVU914
 2993 0010 6946     		mov	r1, sp
 2994 0012 2046     		mov	r0, r4
 2995 0014 FFF7FEFF 		bl	OSTaskStkChk
 2996              	.LVL269:
1903:uCOSII/Source/os_core.c ****         if (err == OS_ERR_NONE) {
 2997              		.loc 1 1903 9 is_stmt 1 view .LVU915
 2998              		.loc 1 1903 12 is_stmt 0 view .LVU916
 2999 0018 0028     		cmp	r0, #0
 3000 001a F5D1     		bne	.L211
1904:uCOSII/Source/os_core.c ****             ptcb = OSTCBPrioTbl[prio];
 3001              		.loc 1 1904 13 is_stmt 1 view .LVU917
 3002              		.loc 1 1904 18 is_stmt 0 view .LVU918
 3003 001c 084B     		ldr	r3, .L215
 3004 001e 53F82430 		ldr	r3, [r3, r4, lsl #2]
 3005              	.LVL270:
1905:uCOSII/Source/os_core.c ****             if (ptcb != (OS_TCB *)0) {                               /* Make sure task 'ptcb' is ..
 3006              		.loc 1 1905 13 is_stmt 1 view .LVU919
 3007              		.loc 1 1905 16 is_stmt 0 view .LVU920
 3008 0022 002B     		cmp	r3, #0
 3009 0024 F0D0     		beq	.L211
1906:uCOSII/Source/os_core.c ****                 if (ptcb != OS_TCB_RESERVED) {                       /* ... still valid.           
 3010              		.loc 1 1906 17 is_stmt 1 view .LVU921
 3011              		.loc 1 1906 20 is_stmt 0 view .LVU922
 3012 0026 012B     		cmp	r3, #1
 3013 0028 EED0     		beq	.L211
1907:uCOSII/Source/os_core.c **** #if OS_TASK_PROFILE_EN > 0u
1908:uCOSII/Source/os_core.c ****                     #if OS_STK_GROWTH == 1u
ARM GAS  /tmp/ccxgEmFy.s 			page 101


1909:uCOSII/Source/os_core.c ****                     ptcb->OSTCBStkBase = ptcb->OSTCBStkBottom + ptcb->OSTCBStkSize;
 3014              		.loc 1 1909 21 is_stmt 1 view .LVU923
 3015              		.loc 1 1909 46 is_stmt 0 view .LVU924
 3016 002a 9A68     		ldr	r2, [r3, #8]
 3017              		.loc 1 1909 69 view .LVU925
 3018 002c D968     		ldr	r1, [r3, #12]
 3019              		.loc 1 1909 63 view .LVU926
 3020 002e 02EB8102 		add	r2, r2, r1, lsl #2
 3021              		.loc 1 1909 40 view .LVU927
 3022 0032 9A64     		str	r2, [r3, #72]
1910:uCOSII/Source/os_core.c ****                     #else
1911:uCOSII/Source/os_core.c ****                     ptcb->OSTCBStkBase = ptcb->OSTCBStkBottom - ptcb->OSTCBStkSize;
1912:uCOSII/Source/os_core.c ****                     #endif
1913:uCOSII/Source/os_core.c ****                     ptcb->OSTCBStkUsed = stk_data.OSUsed;            /* Store number of entries use
 3023              		.loc 1 1913 21 is_stmt 1 view .LVU928
 3024              		.loc 1 1913 50 is_stmt 0 view .LVU929
 3025 0034 019A     		ldr	r2, [sp, #4]
 3026              		.loc 1 1913 40 view .LVU930
 3027 0036 DA64     		str	r2, [r3, #76]
 3028 0038 E6E7     		b	.L211
 3029              	.LVL271:
 3030              	.L214:
1914:uCOSII/Source/os_core.c **** #endif
1915:uCOSII/Source/os_core.c ****                 }
1916:uCOSII/Source/os_core.c ****             }
1917:uCOSII/Source/os_core.c ****         }
1918:uCOSII/Source/os_core.c ****     }
1919:uCOSII/Source/os_core.c **** }
 3031              		.loc 1 1919 1 view .LVU931
 3032 003a 02B0     		add	sp, sp, #8
 3033              	.LCFI31:
 3034              		.cfi_def_cfa_offset 8
 3035              		@ sp needed
 3036 003c 10BD     		pop	{r4, pc}
 3037              	.LVL272:
 3038              	.L216:
 3039              		.loc 1 1919 1 view .LVU932
 3040 003e 00BF     		.align	2
 3041              	.L215:
 3042 0040 00000000 		.word	OSTCBPrioTbl
 3043              		.cfi_endproc
 3044              	.LFE32:
 3046              		.section	.text.OS_TaskStat,"ax",%progbits
 3047              		.align	1
 3048              		.global	OS_TaskStat
 3049              		.syntax unified
 3050              		.thumb
 3051              		.thumb_func
 3052              		.fpu fpv4-sp-d16
 3054              	OS_TaskStat:
 3055              	.LVL273:
 3056              	.LFB31:
1840:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 3057              		.loc 1 1840 1 is_stmt 1 view -0
 3058              		.cfi_startproc
 3059              		@ args = 0, pretend = 0, frame = 0
 3060              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccxgEmFy.s 			page 102


1840:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 3061              		.loc 1 1840 1 is_stmt 0 view .LVU934
 3062 0000 10B5     		push	{r4, lr}
 3063              	.LCFI32:
 3064              		.cfi_def_cfa_offset 8
 3065              		.cfi_offset 4, -8
 3066              		.cfi_offset 14, -4
1842:uCOSII/Source/os_core.c **** #endif
 3067              		.loc 1 1842 5 is_stmt 1 view .LVU935
 3068              	.LVL274:
1847:uCOSII/Source/os_core.c ****     while (OSStatRdy == OS_FALSE) {
 3069              		.loc 1 1847 5 view .LVU936
1848:uCOSII/Source/os_core.c ****         OSTimeDly(2u * OS_TICKS_PER_SEC / 10u);  /* Wait until statistic task is ready             
 3070              		.loc 1 1848 5 view .LVU937
1848:uCOSII/Source/os_core.c ****         OSTimeDly(2u * OS_TICKS_PER_SEC / 10u);  /* Wait until statistic task is ready             
 3071              		.loc 1 1848 11 is_stmt 0 view .LVU938
 3072 0002 02E0     		b	.L218
 3073              	.LVL275:
 3074              	.L219:
1849:uCOSII/Source/os_core.c ****     }
 3075              		.loc 1 1849 9 is_stmt 1 view .LVU939
 3076 0004 1420     		movs	r0, #20
 3077 0006 FFF7FEFF 		bl	OSTimeDly
 3078              	.LVL276:
 3079              	.L218:
1848:uCOSII/Source/os_core.c ****         OSTimeDly(2u * OS_TICKS_PER_SEC / 10u);  /* Wait until statistic task is ready             
 3080              		.loc 1 1848 11 view .LVU940
1848:uCOSII/Source/os_core.c ****         OSTimeDly(2u * OS_TICKS_PER_SEC / 10u);  /* Wait until statistic task is ready             
 3081              		.loc 1 1848 22 is_stmt 0 view .LVU941
 3082 000a 1C4B     		ldr	r3, .L224
 3083 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1848:uCOSII/Source/os_core.c ****         OSTimeDly(2u * OS_TICKS_PER_SEC / 10u);  /* Wait until statistic task is ready             
 3084              		.loc 1 1848 11 view .LVU942
 3085 000e 002B     		cmp	r3, #0
 3086 0010 F8D0     		beq	.L219
1851:uCOSII/Source/os_core.c ****     if (OSIdleCtrMax == 0uL) {
 3087              		.loc 1 1851 5 is_stmt 1 view .LVU943
1851:uCOSII/Source/os_core.c ****     if (OSIdleCtrMax == 0uL) {
 3088              		.loc 1 1851 18 is_stmt 0 view .LVU944
 3089 0012 1B4A     		ldr	r2, .L224+4
 3090 0014 1368     		ldr	r3, [r2]
 3091 0016 1B49     		ldr	r1, .L224+8
 3092 0018 A1FB0313 		umull	r1, r3, r1, r3
 3093 001c 5B09     		lsrs	r3, r3, #5
 3094 001e 1360     		str	r3, [r2]
1852:uCOSII/Source/os_core.c ****         OSCPUUsage = 0u;
 3095              		.loc 1 1852 5 is_stmt 1 view .LVU945
1852:uCOSII/Source/os_core.c ****         OSCPUUsage = 0u;
 3096              		.loc 1 1852 8 is_stmt 0 view .LVU946
 3097 0020 2BB3     		cbz	r3, .L223
 3098              	.L220:
1862:uCOSII/Source/os_core.c ****     OSIdleCtr = OSIdleCtrMax * 100uL;            /* Set initial CPU usage as 0%                    
 3099              		.loc 1 1862 5 is_stmt 1 view .LVU947
 3100 0022 FFF7FEFF 		bl	OS_CPU_SR_Save
 3101              	.LVL277:
1862:uCOSII/Source/os_core.c ****     OSIdleCtr = OSIdleCtrMax * 100uL;            /* Set initial CPU usage as 0%                    
 3102              		.loc 1 1862 24 view .LVU948
ARM GAS  /tmp/ccxgEmFy.s 			page 103


1863:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 3103              		.loc 1 1863 5 view .LVU949
1863:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 3104              		.loc 1 1863 30 is_stmt 0 view .LVU950
 3105 0026 164B     		ldr	r3, .L224+4
 3106 0028 1A68     		ldr	r2, [r3]
 3107 002a 6423     		movs	r3, #100
 3108 002c 03FB02F3 		mul	r3, r3, r2
1863:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
 3109              		.loc 1 1863 15 view .LVU951
 3110 0030 154A     		ldr	r2, .L224+12
 3111 0032 1360     		str	r3, [r2]
1864:uCOSII/Source/os_core.c ****     for (;;) {
 3112              		.loc 1 1864 5 is_stmt 1 view .LVU952
 3113 0034 FFF7FEFF 		bl	OS_CPU_SR_Restore
 3114              	.LVL278:
 3115              	.L221:
1864:uCOSII/Source/os_core.c ****     for (;;) {
 3116              		.loc 1 1864 23 discriminator 1 view .LVU953
1865:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
 3117              		.loc 1 1865 5 discriminator 1 view .LVU954
1866:uCOSII/Source/os_core.c ****         OSIdleCtrRun = OSIdleCtr;                /* Obtain the of the idle counter for the past sec
 3118              		.loc 1 1866 9 discriminator 1 view .LVU955
 3119 0038 FFF7FEFF 		bl	OS_CPU_SR_Save
 3120              	.LVL279:
1866:uCOSII/Source/os_core.c ****         OSIdleCtrRun = OSIdleCtr;                /* Obtain the of the idle counter for the past sec
 3121              		.loc 1 1866 28 discriminator 1 view .LVU956
1867:uCOSII/Source/os_core.c ****         OSIdleCtr    = 0uL;                      /* Reset the idle counter for the next second     
 3122              		.loc 1 1867 9 discriminator 1 view .LVU957
1867:uCOSII/Source/os_core.c ****         OSIdleCtr    = 0uL;                      /* Reset the idle counter for the next second     
 3123              		.loc 1 1867 22 is_stmt 0 discriminator 1 view .LVU958
 3124 003c 124B     		ldr	r3, .L224+12
 3125 003e 1A68     		ldr	r2, [r3]
 3126 0040 124C     		ldr	r4, .L224+16
 3127 0042 2260     		str	r2, [r4]
1868:uCOSII/Source/os_core.c ****         OS_EXIT_CRITICAL();
 3128              		.loc 1 1868 9 is_stmt 1 discriminator 1 view .LVU959
1868:uCOSII/Source/os_core.c ****         OS_EXIT_CRITICAL();
 3129              		.loc 1 1868 22 is_stmt 0 discriminator 1 view .LVU960
 3130 0044 0022     		movs	r2, #0
 3131 0046 1A60     		str	r2, [r3]
1869:uCOSII/Source/os_core.c ****         OSCPUUsage   = (INT8U)(100uL - OSIdleCtrRun / OSIdleCtrMax);
 3132              		.loc 1 1869 9 is_stmt 1 discriminator 1 view .LVU961
 3133 0048 FFF7FEFF 		bl	OS_CPU_SR_Restore
 3134              	.LVL280:
1869:uCOSII/Source/os_core.c ****         OSCPUUsage   = (INT8U)(100uL - OSIdleCtrRun / OSIdleCtrMax);
 3135              		.loc 1 1869 27 discriminator 1 view .LVU962
1870:uCOSII/Source/os_core.c ****         OSTaskStatHook();                        /* Invoke user definable hook                     
 3136              		.loc 1 1870 9 discriminator 1 view .LVU963
1870:uCOSII/Source/os_core.c ****         OSTaskStatHook();                        /* Invoke user definable hook                     
 3137              		.loc 1 1870 53 is_stmt 0 discriminator 1 view .LVU964
 3138 004c 2368     		ldr	r3, [r4]
 3139 004e 0C4A     		ldr	r2, .L224+4
 3140 0050 1268     		ldr	r2, [r2]
 3141 0052 B3FBF2F3 		udiv	r3, r3, r2
1870:uCOSII/Source/os_core.c ****         OSTaskStatHook();                        /* Invoke user definable hook                     
 3142              		.loc 1 1870 24 discriminator 1 view .LVU965
ARM GAS  /tmp/ccxgEmFy.s 			page 104


 3143 0056 C3F16403 		rsb	r3, r3, #100
1870:uCOSII/Source/os_core.c ****         OSTaskStatHook();                        /* Invoke user definable hook                     
 3144              		.loc 1 1870 22 discriminator 1 view .LVU966
 3145 005a 0D4A     		ldr	r2, .L224+20
 3146 005c 1370     		strb	r3, [r2]
1871:uCOSII/Source/os_core.c **** #if (OS_TASK_STAT_STK_CHK_EN > 0u) && (OS_TASK_CREATE_EXT_EN > 0u)
 3147              		.loc 1 1871 9 is_stmt 1 discriminator 1 view .LVU967
 3148 005e FFF7FEFF 		bl	OSTaskStatHook
 3149              	.LVL281:
1873:uCOSII/Source/os_core.c **** #endif
 3150              		.loc 1 1873 9 discriminator 1 view .LVU968
 3151 0062 FFF7FEFF 		bl	OS_TaskStatStkChk
 3152              	.LVL282:
1875:uCOSII/Source/os_core.c ****     }
 3153              		.loc 1 1875 9 discriminator 1 view .LVU969
 3154 0066 0A20     		movs	r0, #10
 3155 0068 FFF7FEFF 		bl	OSTimeDly
 3156              	.LVL283:
1865:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
 3157              		.loc 1 1865 11 discriminator 1 view .LVU970
 3158 006c E4E7     		b	.L221
 3159              	.LVL284:
 3160              	.L223:
1853:uCOSII/Source/os_core.c **** #if OS_TASK_SUSPEND_EN > 0u
 3161              		.loc 1 1853 9 view .LVU971
1853:uCOSII/Source/os_core.c **** #if OS_TASK_SUSPEND_EN > 0u
 3162              		.loc 1 1853 20 is_stmt 0 view .LVU972
 3163 006e 084B     		ldr	r3, .L224+20
 3164 0070 0022     		movs	r2, #0
 3165 0072 1A70     		strb	r2, [r3]
1855:uCOSII/Source/os_core.c **** #else
 3166              		.loc 1 1855 9 is_stmt 1 view .LVU973
1855:uCOSII/Source/os_core.c **** #else
 3167              		.loc 1 1855 15 is_stmt 0 view .LVU974
 3168 0074 FF20     		movs	r0, #255
 3169 0076 FFF7FEFF 		bl	OSTaskSuspend
 3170              	.LVL285:
 3171 007a D2E7     		b	.L220
 3172              	.L225:
 3173              		.align	2
 3174              	.L224:
 3175 007c 00000000 		.word	OSStatRdy
 3176 0080 00000000 		.word	OSIdleCtrMax
 3177 0084 1F85EB51 		.word	1374389535
 3178 0088 00000000 		.word	OSIdleCtr
 3179 008c 00000000 		.word	OSIdleCtrRun
 3180 0090 00000000 		.word	OSCPUUsage
 3181              		.cfi_endproc
 3182              	.LFE31:
 3184              		.section	.text.OS_TCBInit,"ax",%progbits
 3185              		.align	1
 3186              		.global	OS_TCBInit
 3187              		.syntax unified
 3188              		.thumb
 3189              		.thumb_func
 3190              		.fpu fpv4-sp-d16
 3192              	OS_TCBInit:
ARM GAS  /tmp/ccxgEmFy.s 			page 105


 3193              	.LVL286:
 3194              	.LFB33:
1920:uCOSII/Source/os_core.c **** #endif
1921:uCOSII/Source/os_core.c **** /*$PAGE*/
1922:uCOSII/Source/os_core.c **** /*
1923:uCOSII/Source/os_core.c **** ***************************************************************************************************
1924:uCOSII/Source/os_core.c **** *                                           INITIALIZE TCB
1925:uCOSII/Source/os_core.c **** *
1926:uCOSII/Source/os_core.c **** * Description: This function is internal to uC/OS-II and is used to initialize a Task Control Block
1927:uCOSII/Source/os_core.c **** *              a task is created (see OSTaskCreate() and OSTaskCreateExt()).
1928:uCOSII/Source/os_core.c **** *
1929:uCOSII/Source/os_core.c **** * Arguments  : prio          is the priority of the task being created
1930:uCOSII/Source/os_core.c **** *
1931:uCOSII/Source/os_core.c **** *              ptos          is a pointer to the task's top-of-stack assuming that the CPU register
1932:uCOSII/Source/os_core.c **** *                            have been placed on the stack.  Note that the top-of-stack corresponds
1933:uCOSII/Source/os_core.c **** *                            'high' memory location is OS_STK_GROWTH is set to 1 and a 'low' memory
1934:uCOSII/Source/os_core.c **** *                            location if OS_STK_GROWTH is set to 0.  Note that stack growth is CPU
1935:uCOSII/Source/os_core.c **** *                            specific.
1936:uCOSII/Source/os_core.c **** *
1937:uCOSII/Source/os_core.c **** *              pbos          is a pointer to the bottom of stack.  A NULL pointer is passed if call
1938:uCOSII/Source/os_core.c **** *                            'OSTaskCreate()'.
1939:uCOSII/Source/os_core.c **** *
1940:uCOSII/Source/os_core.c **** *              id            is the task's ID (0..65535)
1941:uCOSII/Source/os_core.c **** *
1942:uCOSII/Source/os_core.c **** *              stk_size      is the size of the stack (in 'stack units').  If the stack units are I
1943:uCOSII/Source/os_core.c **** *                            then, 'stk_size' contains the number of bytes for the stack.  If the s
1944:uCOSII/Source/os_core.c **** *                            units are INT32Us then, the stack contains '4 * stk_size' bytes.  The 
1945:uCOSII/Source/os_core.c **** *                            units are established by the #define constant OS_STK which is CPU
1946:uCOSII/Source/os_core.c **** *                            specific.  'stk_size' is 0 if called by 'OSTaskCreate()'.
1947:uCOSII/Source/os_core.c **** *
1948:uCOSII/Source/os_core.c **** *              pext          is a pointer to a user supplied memory area that is used to extend the
1949:uCOSII/Source/os_core.c **** *                            control block.  This allows you to store the contents of floating-poin
1950:uCOSII/Source/os_core.c **** *                            registers, MMU registers or anything else you could find useful during
1951:uCOSII/Source/os_core.c **** *                            context switch.  You can even assign a name to each task and store thi
1952:uCOSII/Source/os_core.c **** *                            in this TCB extension.  A NULL pointer is passed if called by OSTaskCr
1953:uCOSII/Source/os_core.c **** *
1954:uCOSII/Source/os_core.c **** *              opt           options as passed to 'OSTaskCreateExt()' or,
1955:uCOSII/Source/os_core.c **** *                            0 if called from 'OSTaskCreate()'.
1956:uCOSII/Source/os_core.c **** *
1957:uCOSII/Source/os_core.c **** * Returns    : OS_ERR_NONE              if the call was successful
1958:uCOSII/Source/os_core.c **** *              OS_ERR_TASK_NO_MORE_TCB  if there are no more free TCBs to be allocated and thus, th
1959:uCOSII/Source/os_core.c **** *                                       cannot be created.
1960:uCOSII/Source/os_core.c **** *
1961:uCOSII/Source/os_core.c **** * Note       : This function is INTERNAL to uC/OS-II and your application should not call it.
1962:uCOSII/Source/os_core.c **** ***************************************************************************************************
1963:uCOSII/Source/os_core.c **** */
1964:uCOSII/Source/os_core.c **** 
1965:uCOSII/Source/os_core.c **** INT8U  OS_TCBInit (INT8U    prio,
1966:uCOSII/Source/os_core.c ****                    OS_STK  *ptos,
1967:uCOSII/Source/os_core.c ****                    OS_STK  *pbos,
1968:uCOSII/Source/os_core.c ****                    INT16U   id,
1969:uCOSII/Source/os_core.c ****                    INT32U   stk_size,
1970:uCOSII/Source/os_core.c ****                    void    *pext,
1971:uCOSII/Source/os_core.c ****                    INT16U   opt)
1972:uCOSII/Source/os_core.c **** {
 3195              		.loc 1 1972 1 is_stmt 1 view -0
 3196              		.cfi_startproc
ARM GAS  /tmp/ccxgEmFy.s 			page 106


 3197              		@ args = 12, pretend = 0, frame = 0
 3198              		@ frame_needed = 0, uses_anonymous_args = 0
 3199              		.loc 1 1972 1 is_stmt 0 view .LVU976
 3200 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3201              	.LCFI33:
 3202              		.cfi_def_cfa_offset 24
 3203              		.cfi_offset 4, -24
 3204              		.cfi_offset 5, -20
 3205              		.cfi_offset 6, -16
 3206              		.cfi_offset 7, -12
 3207              		.cfi_offset 8, -8
 3208              		.cfi_offset 14, -4
 3209 0004 0546     		mov	r5, r0
 3210 0006 8846     		mov	r8, r1
 3211 0008 1746     		mov	r7, r2
 3212 000a 1E46     		mov	r6, r3
1973:uCOSII/Source/os_core.c ****     OS_TCB    *ptcb;
 3213              		.loc 1 1973 5 is_stmt 1 view .LVU977
1974:uCOSII/Source/os_core.c **** #if OS_CRITICAL_METHOD == 3u                               /* Allocate storage for CPU status regis
1975:uCOSII/Source/os_core.c ****     OS_CPU_SR  cpu_sr = 0u;
 3214              		.loc 1 1975 5 view .LVU978
 3215              	.LVL287:
1976:uCOSII/Source/os_core.c **** #endif
1977:uCOSII/Source/os_core.c **** #if OS_TASK_REG_TBL_SIZE > 0u
1978:uCOSII/Source/os_core.c ****     INT8U      i;
 3216              		.loc 1 1978 5 view .LVU979
1979:uCOSII/Source/os_core.c **** #endif
1980:uCOSII/Source/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
1981:uCOSII/Source/os_core.c **** #if defined(OS_TLS_TBL_SIZE) && (OS_TLS_TBL_SIZE > 0u)
1982:uCOSII/Source/os_core.c ****     INT8U      j;
1983:uCOSII/Source/os_core.c **** #endif
1984:uCOSII/Source/os_core.c **** #endif
1985:uCOSII/Source/os_core.c **** 
1986:uCOSII/Source/os_core.c **** 
1987:uCOSII/Source/os_core.c ****     OS_ENTER_CRITICAL();
 3217              		.loc 1 1987 5 view .LVU980
 3218 000c FFF7FEFF 		bl	OS_CPU_SR_Save
 3219              	.LVL288:
 3220              		.loc 1 1987 24 view .LVU981
1988:uCOSII/Source/os_core.c ****     ptcb = OSTCBFreeList;                                  /* Get a free TCB from the free TCB list
 3221              		.loc 1 1988 5 view .LVU982
 3222              		.loc 1 1988 10 is_stmt 0 view .LVU983
 3223 0010 394B     		ldr	r3, .L233
 3224 0012 1C68     		ldr	r4, [r3]
 3225              	.LVL289:
1989:uCOSII/Source/os_core.c ****     if (ptcb != (OS_TCB *)0) {
 3226              		.loc 1 1989 5 is_stmt 1 view .LVU984
 3227              		.loc 1 1989 8 is_stmt 0 view .LVU985
 3228 0014 002C     		cmp	r4, #0
 3229 0016 6BD0     		beq	.L227
1990:uCOSII/Source/os_core.c ****         OSTCBFreeList            = ptcb->OSTCBNext;        /* Update pointer to free TCB list      
 3230              		.loc 1 1990 9 is_stmt 1 view .LVU986
 3231              		.loc 1 1990 40 is_stmt 0 view .LVU987
 3232 0018 6269     		ldr	r2, [r4, #20]
 3233              		.loc 1 1990 34 view .LVU988
 3234 001a 1A60     		str	r2, [r3]
1991:uCOSII/Source/os_core.c ****         OS_EXIT_CRITICAL();
ARM GAS  /tmp/ccxgEmFy.s 			page 107


 3235              		.loc 1 1991 9 is_stmt 1 view .LVU989
 3236 001c FFF7FEFF 		bl	OS_CPU_SR_Restore
 3237              	.LVL290:
 3238              		.loc 1 1991 27 view .LVU990
1992:uCOSII/Source/os_core.c ****         ptcb->OSTCBStkPtr        = ptos;                   /* Load Stack pointer in TCB            
 3239              		.loc 1 1992 9 view .LVU991
 3240              		.loc 1 1992 34 is_stmt 0 view .LVU992
 3241 0020 C4F80080 		str	r8, [r4]
1993:uCOSII/Source/os_core.c ****         ptcb->OSTCBPrio          = prio;                   /* Load task priority into TCB          
 3242              		.loc 1 1993 9 is_stmt 1 view .LVU993
 3243              		.loc 1 1993 34 is_stmt 0 view .LVU994
 3244 0024 84F83650 		strb	r5, [r4, #54]
1994:uCOSII/Source/os_core.c ****         ptcb->OSTCBStat          = OS_STAT_RDY;            /* Task is ready to run                 
 3245              		.loc 1 1994 9 is_stmt 1 view .LVU995
 3246              		.loc 1 1994 34 is_stmt 0 view .LVU996
 3247 0028 0021     		movs	r1, #0
 3248 002a 84F83410 		strb	r1, [r4, #52]
1995:uCOSII/Source/os_core.c ****         ptcb->OSTCBStatPend      = OS_STAT_PEND_OK;        /* Clear pend status                    
 3249              		.loc 1 1995 9 is_stmt 1 view .LVU997
 3250              		.loc 1 1995 34 is_stmt 0 view .LVU998
 3251 002e 84F83510 		strb	r1, [r4, #53]
1996:uCOSII/Source/os_core.c ****         ptcb->OSTCBDly           = 0u;                     /* Task is not delayed                  
 3252              		.loc 1 1996 9 is_stmt 1 view .LVU999
 3253              		.loc 1 1996 34 is_stmt 0 view .LVU1000
 3254 0032 2163     		str	r1, [r4, #48]
1997:uCOSII/Source/os_core.c **** 
1998:uCOSII/Source/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
1999:uCOSII/Source/os_core.c ****         ptcb->OSTCBExtPtr        = pext;                   /* Store pointer to TCB extension       
 3255              		.loc 1 1999 9 is_stmt 1 view .LVU1001
 3256              		.loc 1 1999 34 is_stmt 0 view .LVU1002
 3257 0034 079B     		ldr	r3, [sp, #28]
 3258 0036 6360     		str	r3, [r4, #4]
2000:uCOSII/Source/os_core.c ****         ptcb->OSTCBStkSize       = stk_size;               /* Store stack size                     
 3259              		.loc 1 2000 9 is_stmt 1 view .LVU1003
 3260              		.loc 1 2000 34 is_stmt 0 view .LVU1004
 3261 0038 069B     		ldr	r3, [sp, #24]
 3262 003a E360     		str	r3, [r4, #12]
2001:uCOSII/Source/os_core.c ****         ptcb->OSTCBStkBottom     = pbos;                   /* Store pointer to bottom of stack     
 3263              		.loc 1 2001 9 is_stmt 1 view .LVU1005
 3264              		.loc 1 2001 34 is_stmt 0 view .LVU1006
 3265 003c A760     		str	r7, [r4, #8]
2002:uCOSII/Source/os_core.c ****         ptcb->OSTCBOpt           = opt;                    /* Store task options                   
 3266              		.loc 1 2002 9 is_stmt 1 view .LVU1007
 3267              		.loc 1 2002 34 is_stmt 0 view .LVU1008
 3268 003e BDF82030 		ldrh	r3, [sp, #32]
 3269 0042 2382     		strh	r3, [r4, #16]	@ movhi
2003:uCOSII/Source/os_core.c ****         ptcb->OSTCBId            = id;                     /* Store task ID                        
 3270              		.loc 1 2003 9 is_stmt 1 view .LVU1009
 3271              		.loc 1 2003 34 is_stmt 0 view .LVU1010
 3272 0044 6682     		strh	r6, [r4, #18]	@ movhi
2004:uCOSII/Source/os_core.c **** #else
2005:uCOSII/Source/os_core.c ****         pext                     = pext;                   /* Prevent compiler warning if not used 
2006:uCOSII/Source/os_core.c ****         stk_size                 = stk_size;
2007:uCOSII/Source/os_core.c ****         pbos                     = pbos;
2008:uCOSII/Source/os_core.c ****         opt                      = opt;
2009:uCOSII/Source/os_core.c ****         id                       = id;
2010:uCOSII/Source/os_core.c **** #endif
ARM GAS  /tmp/ccxgEmFy.s 			page 108


2011:uCOSII/Source/os_core.c **** 
2012:uCOSII/Source/os_core.c **** #if OS_TASK_DEL_EN > 0u
2013:uCOSII/Source/os_core.c ****         ptcb->OSTCBDelReq        = OS_ERR_NONE;
 3273              		.loc 1 2013 9 is_stmt 1 view .LVU1011
 3274              		.loc 1 2013 34 is_stmt 0 view .LVU1012
 3275 0046 84F83B10 		strb	r1, [r4, #59]
2014:uCOSII/Source/os_core.c **** #endif
2015:uCOSII/Source/os_core.c **** 
2016:uCOSII/Source/os_core.c **** #if OS_LOWEST_PRIO <= 63u                                         /* Pre-compute X, Y              
2017:uCOSII/Source/os_core.c ****         ptcb->OSTCBY             = (INT8U)(prio >> 3u);
 3276              		.loc 1 2017 9 is_stmt 1 view .LVU1013
 3277              		.loc 1 2017 36 is_stmt 0 view .LVU1014
 3278 004a EA08     		lsrs	r2, r5, #3
 3279              		.loc 1 2017 34 view .LVU1015
 3280 004c 84F83820 		strb	r2, [r4, #56]
2018:uCOSII/Source/os_core.c ****         ptcb->OSTCBX             = (INT8U)(prio & 0x07u);
 3281              		.loc 1 2018 9 is_stmt 1 view .LVU1016
 3282              		.loc 1 2018 36 is_stmt 0 view .LVU1017
 3283 0050 05F00700 		and	r0, r5, #7
 3284              		.loc 1 2018 34 view .LVU1018
 3285 0054 84F83700 		strb	r0, [r4, #55]
2019:uCOSII/Source/os_core.c **** #else                                                             /* Pre-compute X, Y              
2020:uCOSII/Source/os_core.c ****         ptcb->OSTCBY             = (INT8U)((INT8U)(prio >> 4u) & 0xFFu);
2021:uCOSII/Source/os_core.c ****         ptcb->OSTCBX             = (INT8U) (prio & 0x0Fu);
2022:uCOSII/Source/os_core.c **** #endif
2023:uCOSII/Source/os_core.c ****                                                                   /* Pre-compute BitX and BitY     
2024:uCOSII/Source/os_core.c ****         ptcb->OSTCBBitY          = (OS_PRIO)(1uL << ptcb->OSTCBY);
 3286              		.loc 1 2024 9 is_stmt 1 view .LVU1019
 3287              		.loc 1 2024 50 is_stmt 0 view .LVU1020
 3288 0058 0123     		movs	r3, #1
 3289 005a 03FA02F2 		lsl	r2, r3, r2
 3290              		.loc 1 2024 34 view .LVU1021
 3291 005e 84F83A20 		strb	r2, [r4, #58]
2025:uCOSII/Source/os_core.c ****         ptcb->OSTCBBitX          = (OS_PRIO)(1uL << ptcb->OSTCBX);
 3292              		.loc 1 2025 9 is_stmt 1 view .LVU1022
 3293              		.loc 1 2025 50 is_stmt 0 view .LVU1023
 3294 0062 8340     		lsls	r3, r3, r0
 3295              		.loc 1 2025 34 view .LVU1024
 3296 0064 84F83930 		strb	r3, [r4, #57]
2026:uCOSII/Source/os_core.c **** 
2027:uCOSII/Source/os_core.c **** #if (OS_EVENT_EN)
2028:uCOSII/Source/os_core.c ****         ptcb->OSTCBEventPtr      = (OS_EVENT  *)0;         /* Task is not pending on an  event     
 3297              		.loc 1 2028 9 is_stmt 1 view .LVU1025
 3298              		.loc 1 2028 34 is_stmt 0 view .LVU1026
 3299 0068 E161     		str	r1, [r4, #28]
2029:uCOSII/Source/os_core.c **** #if (OS_EVENT_MULTI_EN > 0u)
2030:uCOSII/Source/os_core.c ****         ptcb->OSTCBEventMultiPtr = (OS_EVENT **)0;         /* Task is not pending on any events    
 3300              		.loc 1 2030 9 is_stmt 1 view .LVU1027
 3301              		.loc 1 2030 34 is_stmt 0 view .LVU1028
 3302 006a 2162     		str	r1, [r4, #32]
2031:uCOSII/Source/os_core.c **** #endif
2032:uCOSII/Source/os_core.c **** #endif
2033:uCOSII/Source/os_core.c **** 
2034:uCOSII/Source/os_core.c **** #if (OS_FLAG_EN > 0u) && (OS_MAX_FLAGS > 0u) && (OS_TASK_DEL_EN > 0u)
2035:uCOSII/Source/os_core.c ****         ptcb->OSTCBFlagNode      = (OS_FLAG_NODE *)0;      /* Task is not pending on an event flag 
 3303              		.loc 1 2035 9 is_stmt 1 view .LVU1029
 3304              		.loc 1 2035 34 is_stmt 0 view .LVU1030
ARM GAS  /tmp/ccxgEmFy.s 			page 109


 3305 006c A162     		str	r1, [r4, #40]
2036:uCOSII/Source/os_core.c **** #endif
2037:uCOSII/Source/os_core.c **** 
2038:uCOSII/Source/os_core.c **** #if (OS_MBOX_EN > 0u) || ((OS_Q_EN > 0u) && (OS_MAX_QS > 0u))
2039:uCOSII/Source/os_core.c ****         ptcb->OSTCBMsg           = (void *)0;              /* No message received                  
 3306              		.loc 1 2039 9 is_stmt 1 view .LVU1031
 3307              		.loc 1 2039 34 is_stmt 0 view .LVU1032
 3308 006e 6162     		str	r1, [r4, #36]
2040:uCOSII/Source/os_core.c **** #endif
2041:uCOSII/Source/os_core.c **** 
2042:uCOSII/Source/os_core.c **** #if OS_TASK_PROFILE_EN > 0u
2043:uCOSII/Source/os_core.c ****         ptcb->OSTCBCtxSwCtr      = 0uL;                    /* Initialize profiling variables       
 3309              		.loc 1 2043 9 is_stmt 1 view .LVU1033
 3310              		.loc 1 2043 34 is_stmt 0 view .LVU1034
 3311 0070 E163     		str	r1, [r4, #60]
2044:uCOSII/Source/os_core.c ****         ptcb->OSTCBCyclesStart   = 0uL;
 3312              		.loc 1 2044 9 is_stmt 1 view .LVU1035
 3313              		.loc 1 2044 34 is_stmt 0 view .LVU1036
 3314 0072 6164     		str	r1, [r4, #68]
2045:uCOSII/Source/os_core.c ****         ptcb->OSTCBCyclesTot     = 0uL;
 3315              		.loc 1 2045 9 is_stmt 1 view .LVU1037
 3316              		.loc 1 2045 34 is_stmt 0 view .LVU1038
 3317 0074 2164     		str	r1, [r4, #64]
2046:uCOSII/Source/os_core.c ****         ptcb->OSTCBStkBase       = (OS_STK *)0;
 3318              		.loc 1 2046 9 is_stmt 1 view .LVU1039
 3319              		.loc 1 2046 34 is_stmt 0 view .LVU1040
 3320 0076 A164     		str	r1, [r4, #72]
2047:uCOSII/Source/os_core.c ****         ptcb->OSTCBStkUsed       = 0uL;
 3321              		.loc 1 2047 9 is_stmt 1 view .LVU1041
 3322              		.loc 1 2047 34 is_stmt 0 view .LVU1042
 3323 0078 E164     		str	r1, [r4, #76]
2048:uCOSII/Source/os_core.c **** #endif
2049:uCOSII/Source/os_core.c **** 
2050:uCOSII/Source/os_core.c **** #if OS_TASK_NAME_EN > 0u
2051:uCOSII/Source/os_core.c ****         ptcb->OSTCBTaskName      = (INT8U *)(void *)"?";
 3324              		.loc 1 2051 9 is_stmt 1 view .LVU1043
 3325              		.loc 1 2051 34 is_stmt 0 view .LVU1044
 3326 007a 204B     		ldr	r3, .L233+4
 3327 007c 2365     		str	r3, [r4, #80]
2052:uCOSII/Source/os_core.c **** #endif
2053:uCOSII/Source/os_core.c **** 
2054:uCOSII/Source/os_core.c **** #if OS_TASK_REG_TBL_SIZE > 0u                              /* Initialize the task variables        
2055:uCOSII/Source/os_core.c ****         for (i = 0u; i < OS_TASK_REG_TBL_SIZE; i++) {
 3328              		.loc 1 2055 9 is_stmt 1 view .LVU1045
 3329              	.LVL291:
 3330              	.L228:
 3331              		.loc 1 2055 22 discriminator 1 view .LVU1046
 3332              		.loc 1 2055 9 is_stmt 0 discriminator 1 view .LVU1047
 3333 007e 71B3     		cbz	r1, .L229
2056:uCOSII/Source/os_core.c ****             ptcb->OSTCBRegTbl[i] = 0u;
2057:uCOSII/Source/os_core.c ****         }
2058:uCOSII/Source/os_core.c **** #endif
2059:uCOSII/Source/os_core.c **** 
2060:uCOSII/Source/os_core.c ****         OSTCBInitHook(ptcb);
 3334              		.loc 1 2060 9 is_stmt 1 view .LVU1048
 3335 0080 2046     		mov	r0, r4
 3336 0082 FFF7FEFF 		bl	OSTCBInitHook
ARM GAS  /tmp/ccxgEmFy.s 			page 110


 3337              	.LVL292:
2061:uCOSII/Source/os_core.c **** 
2062:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
 3338              		.loc 1 2062 9 view .LVU1049
 3339 0086 FFF7FEFF 		bl	OS_CPU_SR_Save
 3340              	.LVL293:
 3341              		.loc 1 2062 28 view .LVU1050
2063:uCOSII/Source/os_core.c ****         OSTCBPrioTbl[prio] = ptcb;
 3342              		.loc 1 2063 9 view .LVU1051
 3343              		.loc 1 2063 28 is_stmt 0 view .LVU1052
 3344 008a 1D4B     		ldr	r3, .L233+8
 3345 008c 43F82540 		str	r4, [r3, r5, lsl #2]
2064:uCOSII/Source/os_core.c ****         OS_EXIT_CRITICAL();
 3346              		.loc 1 2064 9 is_stmt 1 view .LVU1053
 3347 0090 FFF7FEFF 		bl	OS_CPU_SR_Restore
 3348              	.LVL294:
 3349              		.loc 1 2064 27 view .LVU1054
2065:uCOSII/Source/os_core.c **** 
2066:uCOSII/Source/os_core.c ****         OSTaskCreateHook(ptcb);                            /* Call user defined hook               
 3350              		.loc 1 2066 9 view .LVU1055
 3351 0094 2046     		mov	r0, r4
 3352 0096 FFF7FEFF 		bl	OSTaskCreateHook
 3353              	.LVL295:
2067:uCOSII/Source/os_core.c **** 
2068:uCOSII/Source/os_core.c **** #if OS_TASK_CREATE_EXT_EN > 0u
2069:uCOSII/Source/os_core.c **** #if defined(OS_TLS_TBL_SIZE) && (OS_TLS_TBL_SIZE > 0u)
2070:uCOSII/Source/os_core.c ****         for (j = 0u; j < OS_TLS_TBL_SIZE; j++) {
2071:uCOSII/Source/os_core.c ****             ptcb->OSTCBTLSTbl[j] = (OS_TLS)0;
2072:uCOSII/Source/os_core.c ****         }
2073:uCOSII/Source/os_core.c ****         OS_TLS_TaskCreate(ptcb);                           /* Call TLS hook                        
2074:uCOSII/Source/os_core.c **** #endif
2075:uCOSII/Source/os_core.c **** #endif
2076:uCOSII/Source/os_core.c **** 
2077:uCOSII/Source/os_core.c ****         OS_ENTER_CRITICAL();
 3354              		.loc 1 2077 9 view .LVU1056
 3355 009a FFF7FEFF 		bl	OS_CPU_SR_Save
 3356              	.LVL296:
 3357              		.loc 1 2077 28 view .LVU1057
2078:uCOSII/Source/os_core.c ****         ptcb->OSTCBNext = OSTCBList;                       /* Link into TCB chain                  
 3358              		.loc 1 2078 9 view .LVU1058
 3359              		.loc 1 2078 25 is_stmt 0 view .LVU1059
 3360 009e 194B     		ldr	r3, .L233+12
 3361 00a0 1B68     		ldr	r3, [r3]
 3362 00a2 6361     		str	r3, [r4, #20]
2079:uCOSII/Source/os_core.c ****         ptcb->OSTCBPrev = (OS_TCB *)0;         
 3363              		.loc 1 2079 9 is_stmt 1 view .LVU1060
 3364              		.loc 1 2079 25 is_stmt 0 view .LVU1061
 3365 00a4 0022     		movs	r2, #0
 3366 00a6 A261     		str	r2, [r4, #24]
2080:uCOSII/Source/os_core.c ****         if (OSTCBList != (OS_TCB *)0) {
 3367              		.loc 1 2080 9 is_stmt 1 view .LVU1062
 3368              		.loc 1 2080 12 is_stmt 0 view .LVU1063
 3369 00a8 03B1     		cbz	r3, .L230
2081:uCOSII/Source/os_core.c ****             OSTCBList->OSTCBPrev = ptcb;
 3370              		.loc 1 2081 13 is_stmt 1 view .LVU1064
 3371              		.loc 1 2081 34 is_stmt 0 view .LVU1065
 3372 00aa 9C61     		str	r4, [r3, #24]
ARM GAS  /tmp/ccxgEmFy.s 			page 111


 3373              	.L230:
2082:uCOSII/Source/os_core.c ****         }
2083:uCOSII/Source/os_core.c ****         OSTCBList               = ptcb;
 3374              		.loc 1 2083 9 is_stmt 1 view .LVU1066
 3375              		.loc 1 2083 33 is_stmt 0 view .LVU1067
 3376 00ac 154B     		ldr	r3, .L233+12
 3377 00ae 1C60     		str	r4, [r3]
2084:uCOSII/Source/os_core.c ****         OSRdyGrp               |= ptcb->OSTCBBitY;         /* Make task ready to run               
 3378              		.loc 1 2084 9 is_stmt 1 view .LVU1068
 3379              		.loc 1 2084 39 is_stmt 0 view .LVU1069
 3380 00b0 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 3381              		.loc 1 2084 32 view .LVU1070
 3382 00b4 144A     		ldr	r2, .L233+16
 3383 00b6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3384 00b8 0B43     		orrs	r3, r3, r1
 3385 00ba 1370     		strb	r3, [r2]
2085:uCOSII/Source/os_core.c ****         OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
 3386              		.loc 1 2085 9 is_stmt 1 view .LVU1071
 3387              		.loc 1 2085 22 is_stmt 0 view .LVU1072
 3388 00bc 94F83820 		ldrb	r2, [r4, #56]	@ zero_extendqisi2
 3389              		.loc 1 2085 39 view .LVU1073
 3390 00c0 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 3391              		.loc 1 2085 32 view .LVU1074
 3392 00c4 1149     		ldr	r1, .L233+20
 3393 00c6 8C5C     		ldrb	r4, [r1, r2]	@ zero_extendqisi2
 3394              	.LVL297:
 3395              		.loc 1 2085 32 view .LVU1075
 3396 00c8 2343     		orrs	r3, r3, r4
 3397 00ca 8B54     		strb	r3, [r1, r2]
2086:uCOSII/Source/os_core.c ****         OSTaskCtr++;                                       /* Increment the #tasks counter         
 3398              		.loc 1 2086 9 is_stmt 1 view .LVU1076
 3399              		.loc 1 2086 18 is_stmt 0 view .LVU1077
 3400 00cc 104A     		ldr	r2, .L233+24
 3401 00ce 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3402 00d0 0133     		adds	r3, r3, #1
 3403 00d2 1370     		strb	r3, [r2]
2087:uCOSII/Source/os_core.c ****         OS_EXIT_CRITICAL();
 3404              		.loc 1 2087 9 is_stmt 1 view .LVU1078
 3405 00d4 FFF7FEFF 		bl	OS_CPU_SR_Restore
 3406              	.LVL298:
 3407              		.loc 1 2087 27 view .LVU1079
2088:uCOSII/Source/os_core.c ****         return (OS_ERR_NONE);
 3408              		.loc 1 2088 9 view .LVU1080
 3409              		.loc 1 2088 16 is_stmt 0 view .LVU1081
 3410 00d8 0020     		movs	r0, #0
 3411              	.L231:
2089:uCOSII/Source/os_core.c ****     }
2090:uCOSII/Source/os_core.c ****     OS_EXIT_CRITICAL();
2091:uCOSII/Source/os_core.c ****     return (OS_ERR_TASK_NO_MORE_TCB);
2092:uCOSII/Source/os_core.c **** }
 3412              		.loc 1 2092 1 view .LVU1082
 3413 00da BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3414              	.LVL299:
 3415              	.L229:
2056:uCOSII/Source/os_core.c ****         }
 3416              		.loc 1 2056 13 is_stmt 1 discriminator 3 view .LVU1083
2056:uCOSII/Source/os_core.c ****         }
ARM GAS  /tmp/ccxgEmFy.s 			page 112


 3417              		.loc 1 2056 34 is_stmt 0 discriminator 3 view .LVU1084
 3418 00de 01F11403 		add	r3, r1, #20
 3419 00e2 04EB8303 		add	r3, r4, r3, lsl #2
 3420 00e6 0022     		movs	r2, #0
 3421 00e8 5A60     		str	r2, [r3, #4]
2055:uCOSII/Source/os_core.c ****             ptcb->OSTCBRegTbl[i] = 0u;
 3422              		.loc 1 2055 48 is_stmt 1 discriminator 3 view .LVU1085
2055:uCOSII/Source/os_core.c ****             ptcb->OSTCBRegTbl[i] = 0u;
 3423              		.loc 1 2055 49 is_stmt 0 discriminator 3 view .LVU1086
 3424 00ea 0131     		adds	r1, r1, #1
 3425              	.LVL300:
2055:uCOSII/Source/os_core.c ****             ptcb->OSTCBRegTbl[i] = 0u;
 3426              		.loc 1 2055 49 discriminator 3 view .LVU1087
 3427 00ec C9B2     		uxtb	r1, r1
 3428              	.LVL301:
2055:uCOSII/Source/os_core.c ****             ptcb->OSTCBRegTbl[i] = 0u;
 3429              		.loc 1 2055 49 discriminator 3 view .LVU1088
 3430 00ee C6E7     		b	.L228
 3431              	.LVL302:
 3432              	.L227:
2090:uCOSII/Source/os_core.c ****     return (OS_ERR_TASK_NO_MORE_TCB);
 3433              		.loc 1 2090 5 is_stmt 1 view .LVU1089
 3434 00f0 FFF7FEFF 		bl	OS_CPU_SR_Restore
 3435              	.LVL303:
2090:uCOSII/Source/os_core.c ****     return (OS_ERR_TASK_NO_MORE_TCB);
 3436              		.loc 1 2090 23 view .LVU1090
2091:uCOSII/Source/os_core.c **** }
 3437              		.loc 1 2091 5 view .LVU1091
2091:uCOSII/Source/os_core.c **** }
 3438              		.loc 1 2091 12 is_stmt 0 view .LVU1092
 3439 00f4 4220     		movs	r0, #66
 3440 00f6 F0E7     		b	.L231
 3441              	.L234:
 3442              		.align	2
 3443              	.L233:
 3444 00f8 00000000 		.word	OSTCBFreeList
 3445 00fc 00000000 		.word	.LC2
 3446 0100 00000000 		.word	OSTCBPrioTbl
 3447 0104 00000000 		.word	OSTCBList
 3448 0108 00000000 		.word	OSRdyGrp
 3449 010c 00000000 		.word	OSRdyTbl
 3450 0110 00000000 		.word	OSTaskCtr
 3451              		.cfi_endproc
 3452              	.LFE33:
 3454              		.global	OSUnMapTbl
 3455              		.comm	OSTime,4,4
 3456              		.comm	OSTaskRegNextAvailID,1,1
 3457              		.comm	OSQTbl,96,4
 3458              		.comm	OSQFreeList,4,4
 3459              		.comm	OSTickStepState,1,1
 3460              		.comm	OSTCBTbl,1936,4
 3461              		.comm	OSTCBPrioTbl,256,4
 3462              		.comm	OSTCBList,4,4
 3463              		.comm	OSTCBHighRdy,4,4
 3464              		.comm	OSTCBFreeList,4,4
 3465              		.comm	OSTCBCur,4,4
 3466              		.comm	OSTaskIdleStk,512,4
ARM GAS  /tmp/ccxgEmFy.s 			page 113


 3467              		.comm	OSIdleCtr,4,4
 3468              		.comm	OSTaskCtr,1,1
 3469              		.comm	OSRunning,1,1
 3470              		.comm	OSRdyTbl,8,4
 3471              		.comm	OSRdyGrp,1,1
 3472              		.comm	OSPrioHighRdy,1,1
 3473              		.comm	OSPrioCur,1,1
 3474              		.comm	OSLockNesting,1,1
 3475              		.comm	OSIntNesting,1,1
 3476              		.comm	OSTaskStatStk,512,4
 3477              		.comm	OSStatRdy,1,1
 3478              		.comm	OSIdleCtrRun,4,4
 3479              		.comm	OSIdleCtrMax,4,4
 3480              		.comm	OSCPUUsage,1,1
 3481              		.comm	OSFlagFreeList,4,4
 3482              		.comm	OSFlagTbl,80,4
 3483              		.comm	OSEventTbl,480,4
 3484              		.comm	OSEventFreeList,4,4
 3485              		.comm	OSCtxSwCtr,4,4
 3486              		.section	.rodata.OSUnMapTbl,"a"
 3487              		.align	2
 3488              		.set	.LANCHOR0,. + 0
 3491              	OSUnMapTbl:
 3492 0000 00000100 		.ascii	"\000\000\001\000\002\000\001\000\003\000\001\000\002"
 3492      02000100 
 3492      03000100 
 3492      02
 3493 000d 00010004 		.ascii	"\000\001\000\004\000\001\000\002\000\001\000\003\000"
 3493      00010002 
 3493      00010003 
 3493      00
 3494 001a 01000200 		.ascii	"\001\000\002\000\001\000\005\000\001\000\002\000\001"
 3494      01000500 
 3494      01000200 
 3494      01
 3495 0027 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000\004\000\001\000"
 3495      00020001 
 3495      00040001 
 3495      00
 3496 0034 02000100 		.ascii	"\002\000\001\000\003\000\001\000\002\000\001\000\006"
 3496      03000100 
 3496      02000100 
 3496      06
 3497 0041 00010002 		.ascii	"\000\001\000\002\000\001\000\003\000\001\000\002\000"
 3497      00010003 
 3497      00010002 
 3497      00
 3498 004e 01000400 		.ascii	"\001\000\004\000\001\000\002\000\001\000\003\000\001"
 3498      01000200 
 3498      01000300 
 3498      01
 3499 005b 00020001 		.ascii	"\000\002\000\001\000\005\000\001\000\002\000\001\000"
 3499      00050001 
 3499      00020001 
 3499      00
 3500 0068 03000100 		.ascii	"\003\000\001\000\002\000\001\000\004\000\001\000\002"
 3500      02000100 
ARM GAS  /tmp/ccxgEmFy.s 			page 114


 3500      04000100 
 3500      02
 3501 0075 00010003 		.ascii	"\000\001\000\003\000\001\000\002\000\001\000\007\000"
 3501      00010002 
 3501      00010007 
 3501      00
 3502 0082 01000200 		.ascii	"\001\000\002\000\001\000\003\000\001\000\002\000\001"
 3502      01000300 
 3502      01000200 
 3502      01
 3503 008f 00040001 		.ascii	"\000\004\000\001\000\002\000\001\000\003\000\001\000"
 3503      00020001 
 3503      00030001 
 3503      00
 3504 009c 02000100 		.ascii	"\002\000\001\000\005\000\001\000\002\000\001\000\003"
 3504      05000100 
 3504      02000100 
 3504      03
 3505 00a9 00010002 		.ascii	"\000\001\000\002\000\001\000\004\000\001\000\002\000"
 3505      00010004 
 3505      00010002 
 3505      00
 3506 00b6 01000300 		.ascii	"\001\000\003\000\001\000\002\000\001\000\006\000\001"
 3506      01000200 
 3506      01000600 
 3506      01
 3507 00c3 00020001 		.ascii	"\000\002\000\001\000\003\000\001\000\002\000\001\000"
 3507      00030001 
 3507      00020001 
 3507      00
 3508 00d0 04000100 		.ascii	"\004\000\001\000\002\000\001\000\003\000\001\000\002"
 3508      02000100 
 3508      03000100 
 3508      02
 3509 00dd 00010005 		.ascii	"\000\001\000\005\000\001\000\002\000\001\000\003\000"
 3509      00010002 
 3509      00010003 
 3509      00
 3510 00ea 01000200 		.ascii	"\001\000\002\000\001\000\004\000\001\000\002\000\001"
 3510      01000400 
 3510      01000200 
 3510      01
 3511 00f7 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000"
 3511      00020001 
 3511      00
 3512              		.text
 3513              	.Letext0:
 3514              		.file 2 "uCOSII/Ports/ARM-Cortex-M4/Generic/GNU/os_cpu.h"
 3515              		.file 3 "uCOSII/Include/ucos_ii.h"
ARM GAS  /tmp/ccxgEmFy.s 			page 115


DEFINED SYMBOLS
                            *ABS*:0000000000000000 os_core.c
     /tmp/ccxgEmFy.s:18     .text.OS_InitMisc:0000000000000000 $t
     /tmp/ccxgEmFy.s:25     .text.OS_InitMisc:0000000000000000 OS_InitMisc
     /tmp/ccxgEmFy.s:83     .text.OS_InitMisc:0000000000000030 $d
                            *COM*:0000000000000004 OSTime
                            *COM*:0000000000000001 OSIntNesting
                            *COM*:0000000000000001 OSLockNesting
                            *COM*:0000000000000001 OSTaskCtr
                            *COM*:0000000000000001 OSRunning
                            *COM*:0000000000000004 OSCtxSwCtr
                            *COM*:0000000000000004 OSIdleCtr
                            *COM*:0000000000000004 OSIdleCtrRun
                            *COM*:0000000000000004 OSIdleCtrMax
                            *COM*:0000000000000001 OSStatRdy
                            *COM*:0000000000000001 OSTaskRegNextAvailID
     /tmp/ccxgEmFy.s:98     .text.OS_InitRdyList:0000000000000000 $t
     /tmp/ccxgEmFy.s:104    .text.OS_InitRdyList:0000000000000000 OS_InitRdyList
     /tmp/ccxgEmFy.s:164    .text.OS_InitRdyList:000000000000002c $d
                            *COM*:0000000000000001 OSRdyGrp
                            *COM*:0000000000000008 OSRdyTbl
                            *COM*:0000000000000001 OSPrioCur
                            *COM*:0000000000000001 OSPrioHighRdy
                            *COM*:0000000000000004 OSTCBHighRdy
                            *COM*:0000000000000004 OSTCBCur
     /tmp/ccxgEmFy.s:174    .text.OS_SchedNew:0000000000000000 $t
     /tmp/ccxgEmFy.s:180    .text.OS_SchedNew:0000000000000000 OS_SchedNew
     /tmp/ccxgEmFy.s:217    .text.OS_SchedNew:000000000000001c $d
     /tmp/ccxgEmFy.s:225    .rodata.OS_InitTaskIdle.str1.4:0000000000000000 $d
     /tmp/ccxgEmFy.s:229    .text.OS_InitTaskIdle:0000000000000000 $t
     /tmp/ccxgEmFy.s:235    .text.OS_InitTaskIdle:0000000000000000 OS_InitTaskIdle
     /tmp/ccxgEmFy.s:281    .text.OS_InitTaskIdle:0000000000000038 $d
                            *COM*:0000000000000200 OSTaskIdleStk
     /tmp/ccxgEmFy.s:358    .text.OS_TaskIdle:0000000000000000 OS_TaskIdle
     /tmp/ccxgEmFy.s:288    .rodata.OS_InitTaskStat.str1.4:0000000000000000 $d
     /tmp/ccxgEmFy.s:292    .text.OS_InitTaskStat:0000000000000000 $t
     /tmp/ccxgEmFy.s:298    .text.OS_InitTaskStat:0000000000000000 OS_InitTaskStat
     /tmp/ccxgEmFy.s:344    .text.OS_InitTaskStat:0000000000000038 $d
                            *COM*:0000000000000200 OSTaskStatStk
     /tmp/ccxgEmFy.s:3054   .text.OS_TaskStat:0000000000000000 OS_TaskStat
     /tmp/ccxgEmFy.s:351    .text.OS_TaskIdle:0000000000000000 $t
     /tmp/ccxgEmFy.s:396    .text.OS_TaskIdle:0000000000000018 $d
     /tmp/ccxgEmFy.s:401    .text.OSEventNameSet:0000000000000000 $t
     /tmp/ccxgEmFy.s:408    .text.OSEventNameSet:0000000000000000 OSEventNameSet
     /tmp/ccxgEmFy.s:479    .text.OSEventNameSet:0000000000000034 $d
     /tmp/ccxgEmFy.s:484    .text.OSIntEnter:0000000000000000 $t
     /tmp/ccxgEmFy.s:491    .text.OSIntEnter:0000000000000000 OSIntEnter
     /tmp/ccxgEmFy.s:526    .text.OSIntEnter:000000000000001c $d
     /tmp/ccxgEmFy.s:532    .text.OSIntExit:0000000000000000 $t
     /tmp/ccxgEmFy.s:539    .text.OSIntExit:0000000000000000 OSIntExit
     /tmp/ccxgEmFy.s:641    .text.OSIntExit:0000000000000060 $d
                            *COM*:0000000000000100 OSTCBPrioTbl
     /tmp/ccxgEmFy.s:653    .text.OSSchedLock:0000000000000000 $t
     /tmp/ccxgEmFy.s:660    .text.OSSchedLock:0000000000000000 OSSchedLock
     /tmp/ccxgEmFy.s:718    .text.OSSchedLock:000000000000002c $d
     /tmp/ccxgEmFy.s:725    .text.OSStart:0000000000000000 $t
     /tmp/ccxgEmFy.s:732    .text.OSStart:0000000000000000 OSStart
ARM GAS  /tmp/ccxgEmFy.s 			page 116


     /tmp/ccxgEmFy.s:781    .text.OSStart:000000000000002c $d
     /tmp/ccxgEmFy.s:791    .text.OSStatInit:0000000000000000 $t
     /tmp/ccxgEmFy.s:798    .text.OSStatInit:0000000000000000 OSStatInit
     /tmp/ccxgEmFy.s:855    .text.OSStatInit:0000000000000034 $d
     /tmp/ccxgEmFy.s:862    .text.OSTimeTick:0000000000000000 $t
     /tmp/ccxgEmFy.s:869    .text.OSTimeTick:0000000000000000 OSTimeTick
     /tmp/ccxgEmFy.s:1036   .text.OSTimeTick:00000000000000ac $d
                            *COM*:0000000000000001 OSTickStepState
                            *COM*:0000000000000004 OSTCBList
     /tmp/ccxgEmFy.s:1046   .text.OSVersion:0000000000000000 $t
     /tmp/ccxgEmFy.s:1053   .text.OSVersion:0000000000000000 OSVersion
     /tmp/ccxgEmFy.s:1068   .text.OS_Dummy:0000000000000000 $t
     /tmp/ccxgEmFy.s:1075   .text.OS_Dummy:0000000000000000 OS_Dummy
     /tmp/ccxgEmFy.s:1088   .text.OS_EventTaskWait:0000000000000000 $t
     /tmp/ccxgEmFy.s:1095   .text.OS_EventTaskWait:0000000000000000 OS_EventTaskWait
     /tmp/ccxgEmFy.s:1170   .text.OS_EventTaskWait:000000000000004c $d
     /tmp/ccxgEmFy.s:1177   .text.OS_EventTaskWaitMulti:0000000000000000 $t
     /tmp/ccxgEmFy.s:1184   .text.OS_EventTaskWaitMulti:0000000000000000 OS_EventTaskWaitMulti
     /tmp/ccxgEmFy.s:1288   .text.OS_EventTaskWaitMulti:0000000000000058 $d
     /tmp/ccxgEmFy.s:1295   .text.OS_EventTaskRemove:0000000000000000 $t
     /tmp/ccxgEmFy.s:1302   .text.OS_EventTaskRemove:0000000000000000 OS_EventTaskRemove
     /tmp/ccxgEmFy.s:1356   .text.OS_EventTaskRemoveMulti:0000000000000000 $t
     /tmp/ccxgEmFy.s:1363   .text.OS_EventTaskRemoveMulti:0000000000000000 OS_EventTaskRemoveMulti
     /tmp/ccxgEmFy.s:1444   .text.OS_EventTaskRdy:0000000000000000 $t
     /tmp/ccxgEmFy.s:1451   .text.OS_EventTaskRdy:0000000000000000 OS_EventTaskRdy
     /tmp/ccxgEmFy.s:1571   .text.OS_EventTaskRdy:000000000000006c $d
     /tmp/ccxgEmFy.s:1579   .text.OS_EventWaitListInit:0000000000000000 $t
     /tmp/ccxgEmFy.s:1586   .text.OS_EventWaitListInit:0000000000000000 OS_EventWaitListInit
     /tmp/ccxgEmFy.s:1628   .text.OS_MemClr:0000000000000000 $t
     /tmp/ccxgEmFy.s:1635   .text.OS_MemClr:0000000000000000 OS_MemClr
     /tmp/ccxgEmFy.s:1669   .rodata.OS_InitTCBList.str1.4:0000000000000000 $d
     /tmp/ccxgEmFy.s:1673   .text.OS_InitTCBList:0000000000000000 $t
     /tmp/ccxgEmFy.s:1679   .text.OS_InitTCBList:0000000000000000 OS_InitTCBList
     /tmp/ccxgEmFy.s:1773   .text.OS_InitTCBList:0000000000000050 $d
                            *COM*:0000000000000790 OSTCBTbl
                            *COM*:0000000000000004 OSTCBFreeList
     /tmp/ccxgEmFy.s:1782   .text.OS_InitEventList:0000000000000000 $t
     /tmp/ccxgEmFy.s:1788   .text.OS_InitEventList:0000000000000000 OS_InitEventList
     /tmp/ccxgEmFy.s:1882   .text.OS_InitEventList:0000000000000050 $d
                            *COM*:00000000000001e0 OSEventTbl
                            *COM*:0000000000000004 OSEventFreeList
     /tmp/ccxgEmFy.s:1889   .text.OSInit:0000000000000000 $t
     /tmp/ccxgEmFy.s:1896   .text.OSInit:0000000000000000 OSInit
     /tmp/ccxgEmFy.s:1946   .text.OS_MemCopy:0000000000000000 $t
     /tmp/ccxgEmFy.s:1953   .text.OS_MemCopy:0000000000000000 OS_MemCopy
     /tmp/ccxgEmFy.s:1989   .text.OS_Sched:0000000000000000 $t
     /tmp/ccxgEmFy.s:1996   .text.OS_Sched:0000000000000000 OS_Sched
     /tmp/ccxgEmFy.s:2076   .text.OS_Sched:000000000000004c $d
     /tmp/ccxgEmFy.s:2087   .text.OSEventPendMulti:0000000000000000 $t
     /tmp/ccxgEmFy.s:2094   .text.OSEventPendMulti:0000000000000000 OSEventPendMulti
     /tmp/ccxgEmFy.s:2687   .text.OSEventPendMulti:0000000000000224 $d
     /tmp/ccxgEmFy.s:2694   .text.OSSchedUnlock:0000000000000000 $t
     /tmp/ccxgEmFy.s:2701   .text.OSSchedUnlock:0000000000000000 OSSchedUnlock
     /tmp/ccxgEmFy.s:2785   .text.OSSchedUnlock:0000000000000044 $d
     /tmp/ccxgEmFy.s:2792   .text.OS_StrLen:0000000000000000 $t
     /tmp/ccxgEmFy.s:2799   .text.OS_StrLen:0000000000000000 OS_StrLen
     /tmp/ccxgEmFy.s:2842   .text.OSEventNameGet:0000000000000000 $t
ARM GAS  /tmp/ccxgEmFy.s 			page 117


     /tmp/ccxgEmFy.s:2849   .text.OSEventNameGet:0000000000000000 OSEventNameGet
     /tmp/ccxgEmFy.s:2941   .text.OSEventNameGet:0000000000000048 $d
     /tmp/ccxgEmFy.s:2946   .text.OS_TaskStatStkChk:0000000000000000 $t
     /tmp/ccxgEmFy.s:2953   .text.OS_TaskStatStkChk:0000000000000000 OS_TaskStatStkChk
     /tmp/ccxgEmFy.s:3042   .text.OS_TaskStatStkChk:0000000000000040 $d
     /tmp/ccxgEmFy.s:3047   .text.OS_TaskStat:0000000000000000 $t
     /tmp/ccxgEmFy.s:3175   .text.OS_TaskStat:000000000000007c $d
                            *COM*:0000000000000001 OSCPUUsage
     /tmp/ccxgEmFy.s:3185   .text.OS_TCBInit:0000000000000000 $t
     /tmp/ccxgEmFy.s:3192   .text.OS_TCBInit:0000000000000000 OS_TCBInit
     /tmp/ccxgEmFy.s:3444   .text.OS_TCBInit:00000000000000f8 $d
     /tmp/ccxgEmFy.s:3491   .rodata.OSUnMapTbl:0000000000000000 OSUnMapTbl
                            *COM*:0000000000000060 OSQTbl
                            *COM*:0000000000000004 OSQFreeList
                            *COM*:0000000000000004 OSFlagFreeList
                            *COM*:0000000000000050 OSFlagTbl
     /tmp/ccxgEmFy.s:3487   .rodata.OSUnMapTbl:0000000000000000 $d

UNDEFINED SYMBOLS
OSTaskCreateExt
OSTaskNameSet
OS_CPU_SR_Save
OS_CPU_SR_Restore
OSTaskIdleHook
OSIntCtxSw
OSStartHighRdy
OSTimeDly
OSTimeTickHook
OSInitHookBegin
OS_FlagInit
OS_QInit
OSInitHookEnd
OSDebugInit
OSCtxSw
OSTaskStkChk
OSTaskStatHook
OSTaskSuspend
OSTCBInitHook
OSTaskCreateHook
