ARM GAS  /tmp/ccbL9Ycs.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"os_task.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.OSTaskChangePrio,"ax",%progbits
  18              		.align	1
  19              		.global	OSTaskChangePrio
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	OSTaskChangePrio:
  27              	.LVL0:
  28              	.LFB0:
  29              		.file 1 "uCOSII/Source/os_task.c"
   1:uCOSII/Source/os_task.c **** /*
   2:uCOSII/Source/os_task.c **** ***************************************************************************************************
   3:uCOSII/Source/os_task.c **** *                                                uC/OS-II
   4:uCOSII/Source/os_task.c **** *                                          The Real-Time Kernel
   5:uCOSII/Source/os_task.c **** *                                            TASK MANAGEMENT
   6:uCOSII/Source/os_task.c **** *
   7:uCOSII/Source/os_task.c **** *                              (c) Copyright 1992-2013, Micrium, Weston, FL
   8:uCOSII/Source/os_task.c **** *                                           All Rights Reserved
   9:uCOSII/Source/os_task.c **** *
  10:uCOSII/Source/os_task.c **** * File    : OS_TASK.C
  11:uCOSII/Source/os_task.c **** * By      : Jean J. Labrosse
  12:uCOSII/Source/os_task.c **** * Version : V2.92.11
  13:uCOSII/Source/os_task.c **** *
  14:uCOSII/Source/os_task.c **** * LICENSING TERMS:
  15:uCOSII/Source/os_task.c **** * ---------------
  16:uCOSII/Source/os_task.c **** *   uC/OS-II is provided in source form for FREE evaluation, for educational use or for peaceful re
  17:uCOSII/Source/os_task.c **** * If you plan on using  uC/OS-II  in a commercial product you need to contact Micrium to properly l
  18:uCOSII/Source/os_task.c **** * its use in your product. We provide ALL the source code for your convenience and to help you expe
  19:uCOSII/Source/os_task.c **** * uC/OS-II.   The fact that the  source is provided does  NOT  mean that you can use it without  pa
  20:uCOSII/Source/os_task.c **** * licensing fee.
  21:uCOSII/Source/os_task.c **** ***************************************************************************************************
  22:uCOSII/Source/os_task.c **** */
  23:uCOSII/Source/os_task.c **** 
  24:uCOSII/Source/os_task.c **** #define  MICRIUM_SOURCE
  25:uCOSII/Source/os_task.c **** 
  26:uCOSII/Source/os_task.c **** #ifndef  OS_MASTER_FILE
  27:uCOSII/Source/os_task.c **** #include <ucos_ii.h>
  28:uCOSII/Source/os_task.c **** #endif
  29:uCOSII/Source/os_task.c **** 
ARM GAS  /tmp/ccbL9Ycs.s 			page 2


  30:uCOSII/Source/os_task.c **** /*$PAGE*/
  31:uCOSII/Source/os_task.c **** /*
  32:uCOSII/Source/os_task.c **** ***************************************************************************************************
  33:uCOSII/Source/os_task.c **** *                                      CHANGE PRIORITY OF A TASK
  34:uCOSII/Source/os_task.c **** *
  35:uCOSII/Source/os_task.c **** * Description: This function allows you to change the priority of a task dynamically.  Note that th
  36:uCOSII/Source/os_task.c **** *              priority MUST be available.
  37:uCOSII/Source/os_task.c **** *
  38:uCOSII/Source/os_task.c **** * Arguments  : oldp     is the old priority
  39:uCOSII/Source/os_task.c **** *
  40:uCOSII/Source/os_task.c **** *              newp     is the new priority
  41:uCOSII/Source/os_task.c **** *
  42:uCOSII/Source/os_task.c **** * Returns    : OS_ERR_NONE            is the call was successful
  43:uCOSII/Source/os_task.c **** *              OS_ERR_PRIO_INVALID    if the priority you specify is higher that the maximum allowe
  44:uCOSII/Source/os_task.c **** *                                     (i.e. >= OS_LOWEST_PRIO)
  45:uCOSII/Source/os_task.c **** *              OS_ERR_PRIO_EXIST      if the new priority already exist.
  46:uCOSII/Source/os_task.c **** *              OS_ERR_PRIO            there is no task with the specified OLD priority (i.e. the OL
  47:uCOSII/Source/os_task.c **** *                                     not exist.
  48:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_NOT_EXIST  if the task is assigned to a Mutex PIP.
  49:uCOSII/Source/os_task.c **** ***************************************************************************************************
  50:uCOSII/Source/os_task.c **** */
  51:uCOSII/Source/os_task.c **** 
  52:uCOSII/Source/os_task.c **** #if OS_TASK_CHANGE_PRIO_EN > 0u
  53:uCOSII/Source/os_task.c **** INT8U  OSTaskChangePrio (INT8U  oldprio,
  54:uCOSII/Source/os_task.c ****                          INT8U  newprio)
  55:uCOSII/Source/os_task.c **** {
  30              		.loc 1 55 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 55 1 is_stmt 0 view .LVU1
  35 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 36
  38              		.cfi_offset 4, -36
  39              		.cfi_offset 5, -32
  40              		.cfi_offset 6, -28
  41              		.cfi_offset 7, -24
  42              		.cfi_offset 8, -20
  43              		.cfi_offset 9, -16
  44              		.cfi_offset 10, -12
  45              		.cfi_offset 11, -8
  46              		.cfi_offset 14, -4
  47 0004 83B0     		sub	sp, sp, #12
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 48
  50 0006 0446     		mov	r4, r0
  51 0008 8846     		mov	r8, r1
  56:uCOSII/Source/os_task.c **** #if (OS_EVENT_EN)
  57:uCOSII/Source/os_task.c ****     OS_EVENT  *pevent;
  52              		.loc 1 57 5 is_stmt 1 view .LVU2
  58:uCOSII/Source/os_task.c **** #if (OS_EVENT_MULTI_EN > 0u)
  59:uCOSII/Source/os_task.c ****     OS_EVENT **pevents;
  53              		.loc 1 59 5 view .LVU3
  60:uCOSII/Source/os_task.c **** #endif
  61:uCOSII/Source/os_task.c **** #endif
  62:uCOSII/Source/os_task.c ****     OS_TCB    *ptcb;
ARM GAS  /tmp/ccbL9Ycs.s 			page 3


  54              		.loc 1 62 5 view .LVU4
  63:uCOSII/Source/os_task.c ****     INT8U      y_new;
  55              		.loc 1 63 5 view .LVU5
  64:uCOSII/Source/os_task.c ****     INT8U      x_new;
  56              		.loc 1 64 5 view .LVU6
  65:uCOSII/Source/os_task.c ****     INT8U      y_old;
  57              		.loc 1 65 5 view .LVU7
  66:uCOSII/Source/os_task.c ****     OS_PRIO    bity_new;
  58              		.loc 1 66 5 view .LVU8
  67:uCOSII/Source/os_task.c ****     OS_PRIO    bitx_new;
  59              		.loc 1 67 5 view .LVU9
  68:uCOSII/Source/os_task.c ****     OS_PRIO    bity_old;
  60              		.loc 1 68 5 view .LVU10
  69:uCOSII/Source/os_task.c ****     OS_PRIO    bitx_old;
  61              		.loc 1 69 5 view .LVU11
  70:uCOSII/Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u
  71:uCOSII/Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;                                 /* Storage for CPU status register     
  62              		.loc 1 71 5 view .LVU12
  63              	.LVL1:
  72:uCOSII/Source/os_task.c **** #endif
  73:uCOSII/Source/os_task.c **** 
  74:uCOSII/Source/os_task.c **** 
  75:uCOSII/Source/os_task.c **** /*$PAGE*/
  76:uCOSII/Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
  77:uCOSII/Source/os_task.c ****     if (oldprio >= OS_LOWEST_PRIO) {
  78:uCOSII/Source/os_task.c ****         if (oldprio != OS_PRIO_SELF) {
  79:uCOSII/Source/os_task.c ****             return (OS_ERR_PRIO_INVALID);
  80:uCOSII/Source/os_task.c ****         }
  81:uCOSII/Source/os_task.c ****     }
  82:uCOSII/Source/os_task.c ****     if (newprio >= OS_LOWEST_PRIO) {
  83:uCOSII/Source/os_task.c ****         return (OS_ERR_PRIO_INVALID);
  84:uCOSII/Source/os_task.c ****     }
  85:uCOSII/Source/os_task.c **** #endif
  86:uCOSII/Source/os_task.c ****     OS_ENTER_CRITICAL();
  64              		.loc 1 86 5 view .LVU13
  65 000a FFF7FEFF 		bl	OS_CPU_SR_Save
  66              	.LVL2:
  67              		.loc 1 86 5 is_stmt 0 view .LVU14
  68 000e 0190     		str	r0, [sp, #4]
  69              	.LVL3:
  70              		.loc 1 86 24 is_stmt 1 view .LVU15
  87:uCOSII/Source/os_task.c ****     if (OSTCBPrioTbl[newprio] != (OS_TCB *)0) {             /* New priority must not already exist 
  71              		.loc 1 87 5 view .LVU16
  72              		.loc 1 87 21 is_stmt 0 view .LVU17
  73 0010 4C4B     		ldr	r3, .L22
  74 0012 53F82830 		ldr	r3, [r3, r8, lsl #2]
  75              		.loc 1 87 8 view .LVU18
  76 0016 002B     		cmp	r3, #0
  77 0018 51D1     		bne	.L17
  88:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
  89:uCOSII/Source/os_task.c ****         return (OS_ERR_PRIO_EXIST);
  90:uCOSII/Source/os_task.c ****     }
  91:uCOSII/Source/os_task.c ****     if (oldprio == OS_PRIO_SELF) {                          /* See if changing self                
  78              		.loc 1 91 5 is_stmt 1 view .LVU19
  79              		.loc 1 91 8 is_stmt 0 view .LVU20
  80 001a FF2C     		cmp	r4, #255
  81 001c 53D0     		beq	.L18
ARM GAS  /tmp/ccbL9Ycs.s 			page 4


  82              	.LVL4:
  83              	.L4:
  92:uCOSII/Source/os_task.c ****         oldprio = OSTCBCur->OSTCBPrio;                      /* Yes, get priority                   
  93:uCOSII/Source/os_task.c ****     }
  94:uCOSII/Source/os_task.c ****     ptcb = OSTCBPrioTbl[oldprio];
  84              		.loc 1 94 5 is_stmt 1 view .LVU21
  85              		.loc 1 94 24 is_stmt 0 view .LVU22
  86 001e 2246     		mov	r2, r4
  87              		.loc 1 94 10 view .LVU23
  88 0020 484B     		ldr	r3, .L22
  89 0022 53F82440 		ldr	r4, [r3, r4, lsl #2]
  90              	.LVL5:
  95:uCOSII/Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                              /* Does task to change exist?          
  91              		.loc 1 95 5 is_stmt 1 view .LVU24
  92              		.loc 1 95 8 is_stmt 0 view .LVU25
  93 0026 002C     		cmp	r4, #0
  94 0028 52D0     		beq	.L19
  96:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();                                 /* No, can't change its priority!      
  97:uCOSII/Source/os_task.c ****         return (OS_ERR_PRIO);
  98:uCOSII/Source/os_task.c ****     }
  99:uCOSII/Source/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                          /* Is task assigned to Mutex           
  95              		.loc 1 99 5 is_stmt 1 view .LVU26
  96              		.loc 1 99 8 is_stmt 0 view .LVU27
  97 002a 012C     		cmp	r4, #1
  98 002c 55D0     		beq	.L20
 100:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();                                 /* No, can't change its priority!      
 101:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 102:uCOSII/Source/os_task.c ****     }
 103:uCOSII/Source/os_task.c **** #if OS_LOWEST_PRIO <= 63u
 104:uCOSII/Source/os_task.c ****     y_new                 = (INT8U)(newprio >> 3u);         /* Yes, compute new TCB fields         
  99              		.loc 1 104 5 is_stmt 1 view .LVU28
 100              		.loc 1 104 27 is_stmt 0 view .LVU29
 101 002e 4FEAD809 		lsr	r9, r8, #3
 102              	.LVL6:
 105:uCOSII/Source/os_task.c ****     x_new                 = (INT8U)(newprio & 0x07u);
 103              		.loc 1 105 5 is_stmt 1 view .LVU30
 104              		.loc 1 105 27 is_stmt 0 view .LVU31
 105 0032 08F0070B 		and	fp, r8, #7
 106              	.LVL7:
 106:uCOSII/Source/os_task.c **** #else
 107:uCOSII/Source/os_task.c ****     y_new                 = (INT8U)((INT8U)(newprio >> 4u) & 0x0Fu);
 108:uCOSII/Source/os_task.c ****     x_new                 = (INT8U)(newprio & 0x0Fu);
 109:uCOSII/Source/os_task.c **** #endif
 110:uCOSII/Source/os_task.c ****     bity_new              = (OS_PRIO)(1uL << y_new);
 107              		.loc 1 110 5 is_stmt 1 view .LVU32
 108              		.loc 1 110 43 is_stmt 0 view .LVU33
 109 0036 CC46     		mov	ip, r9
 110 0038 0126     		movs	r6, #1
 111 003a 06FA09F7 		lsl	r7, r6, r9
 112              		.loc 1 110 27 view .LVU34
 113 003e FFB2     		uxtb	r7, r7
 114              	.LVL8:
 111:uCOSII/Source/os_task.c ****     bitx_new              = (OS_PRIO)(1uL << x_new);
 115              		.loc 1 111 5 is_stmt 1 view .LVU35
 116              		.loc 1 111 43 is_stmt 0 view .LVU36
 117 0040 06FA0BF6 		lsl	r6, r6, fp
 118              		.loc 1 111 27 view .LVU37
ARM GAS  /tmp/ccbL9Ycs.s 			page 5


 119 0044 F6B2     		uxtb	r6, r6
 120              	.LVL9:
 112:uCOSII/Source/os_task.c **** 
 113:uCOSII/Source/os_task.c ****     OSTCBPrioTbl[oldprio] = (OS_TCB *)0;                    /* Remove TCB from old priority        
 121              		.loc 1 113 5 is_stmt 1 view .LVU38
 122              		.loc 1 113 27 is_stmt 0 view .LVU39
 123 0046 3F4B     		ldr	r3, .L22
 124 0048 0021     		movs	r1, #0
 125 004a 43F82210 		str	r1, [r3, r2, lsl #2]
 114:uCOSII/Source/os_task.c ****     OSTCBPrioTbl[newprio] =  ptcb;                          /* Place pointer to TCB @ new priority 
 126              		.loc 1 114 5 is_stmt 1 view .LVU40
 127              		.loc 1 114 27 is_stmt 0 view .LVU41
 128 004e 43F82840 		str	r4, [r3, r8, lsl #2]
 115:uCOSII/Source/os_task.c ****     y_old                 =  ptcb->OSTCBY;
 129              		.loc 1 115 5 is_stmt 1 view .LVU42
 130              		.loc 1 115 27 is_stmt 0 view .LVU43
 131 0052 94F83820 		ldrb	r2, [r4, #56]	@ zero_extendqisi2
 132              	.LVL10:
 116:uCOSII/Source/os_task.c ****     bity_old              =  ptcb->OSTCBBitY;
 133              		.loc 1 116 5 is_stmt 1 view .LVU44
 134              		.loc 1 116 27 is_stmt 0 view .LVU45
 135 0056 94F83AA0 		ldrb	r10, [r4, #58]	@ zero_extendqisi2
 136              	.LVL11:
 117:uCOSII/Source/os_task.c ****     bitx_old              =  ptcb->OSTCBBitX;
 137              		.loc 1 117 5 is_stmt 1 view .LVU46
 138              		.loc 1 117 27 is_stmt 0 view .LVU47
 139 005a 94F83910 		ldrb	r1, [r4, #57]	@ zero_extendqisi2
 140              	.LVL12:
 118:uCOSII/Source/os_task.c ****     if ((OSRdyTbl[y_old] &   bitx_old) != 0u) {             /* If task is ready make it not        
 141              		.loc 1 118 5 is_stmt 1 view .LVU48
 142              		.loc 1 118 18 is_stmt 0 view .LVU49
 143 005e 9646     		mov	lr, r2
 144 0060 394B     		ldr	r3, .L22+4
 145 0062 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 146              		.loc 1 118 8 view .LVU50
 147 0064 0B42     		tst	r3, r1
 148 0066 13D0     		beq	.L7
 119:uCOSII/Source/os_task.c ****          OSRdyTbl[y_old] &= (OS_PRIO)~bitx_old;
 149              		.loc 1 119 10 is_stmt 1 view .LVU51
 150              		.loc 1 119 26 is_stmt 0 view .LVU52
 151 0068 23EA0103 		bic	r3, r3, r1
 152 006c 3648     		ldr	r0, .L22+4
 153              	.LVL13:
 154              		.loc 1 119 26 view .LVU53
 155 006e 8354     		strb	r3, [r0, r2]
 120:uCOSII/Source/os_task.c ****          if (OSRdyTbl[y_old] == 0u) {
 156              		.loc 1 120 10 is_stmt 1 view .LVU54
 157              		.loc 1 120 13 is_stmt 0 view .LVU55
 158 0070 23B9     		cbnz	r3, .L8
 121:uCOSII/Source/os_task.c ****              OSRdyGrp &= (OS_PRIO)~bity_old;
 159              		.loc 1 121 14 is_stmt 1 view .LVU56
 160              		.loc 1 121 23 is_stmt 0 view .LVU57
 161 0072 3648     		ldr	r0, .L22+8
 162 0074 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 163 0076 23EA0A03 		bic	r3, r3, r10
 164 007a 0370     		strb	r3, [r0]
 165              	.L8:
ARM GAS  /tmp/ccbL9Ycs.s 			page 6


 122:uCOSII/Source/os_task.c ****          }
 123:uCOSII/Source/os_task.c ****          OSRdyGrp        |= bity_new;                       /* Make new priority ready to run      
 166              		.loc 1 123 10 is_stmt 1 view .LVU58
 167              		.loc 1 123 26 is_stmt 0 view .LVU59
 168 007c 3348     		ldr	r0, .L22+8
 169 007e 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 170 0080 3B43     		orrs	r3, r3, r7
 171 0082 0370     		strb	r3, [r0]
 124:uCOSII/Source/os_task.c ****          OSRdyTbl[y_new] |= bitx_new;
 172              		.loc 1 124 10 is_stmt 1 view .LVU60
 173              		.loc 1 124 26 is_stmt 0 view .LVU61
 174 0084 3048     		ldr	r0, .L22+4
 175 0086 10F80930 		ldrb	r3, [r0, r9]	@ zero_extendqisi2
 176 008a 3343     		orrs	r3, r3, r6
 177 008c 00F80930 		strb	r3, [r0, r9]
 178              	.L7:
 125:uCOSII/Source/os_task.c ****     }
 126:uCOSII/Source/os_task.c **** 
 127:uCOSII/Source/os_task.c **** #if (OS_EVENT_EN)
 128:uCOSII/Source/os_task.c ****     pevent = ptcb->OSTCBEventPtr;
 179              		.loc 1 128 5 is_stmt 1 view .LVU62
 180              		.loc 1 128 12 is_stmt 0 view .LVU63
 181 0090 E369     		ldr	r3, [r4, #28]
 182              	.LVL14:
 129:uCOSII/Source/os_task.c ****     if (pevent != (OS_EVENT *)0) {
 183              		.loc 1 129 5 is_stmt 1 view .LVU64
 184              		.loc 1 129 8 is_stmt 0 view .LVU65
 185 0092 83B1     		cbz	r3, .L9
 130:uCOSII/Source/os_task.c ****         pevent->OSEventTbl[y_old] &= (OS_PRIO)~bitx_old;    /* Remove old task prio from wait list 
 186              		.loc 1 130 9 is_stmt 1 view .LVU66
 187              		.loc 1 130 35 is_stmt 0 view .LVU67
 188 0094 1A44     		add	r2, r2, r3
 189              	.LVL15:
 190              		.loc 1 130 35 view .LVU68
 191 0096 D07A     		ldrb	r0, [r2, #11]	@ zero_extendqisi2
 192 0098 20EA0100 		bic	r0, r0, r1
 193 009c D072     		strb	r0, [r2, #11]
 131:uCOSII/Source/os_task.c ****         if (pevent->OSEventTbl[y_old] == 0u) {
 194              		.loc 1 131 9 is_stmt 1 view .LVU69
 195              		.loc 1 131 12 is_stmt 0 view .LVU70
 196 009e 18B9     		cbnz	r0, .L10
 132:uCOSII/Source/os_task.c ****             pevent->OSEventGrp    &= (OS_PRIO)~bity_old;
 197              		.loc 1 132 13 is_stmt 1 view .LVU71
 198              		.loc 1 132 35 is_stmt 0 view .LVU72
 199 00a0 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 200 00a2 22EA0A02 		bic	r2, r2, r10
 201 00a6 9A72     		strb	r2, [r3, #10]
 202              	.L10:
 133:uCOSII/Source/os_task.c ****         }
 134:uCOSII/Source/os_task.c ****         pevent->OSEventGrp        |= bity_new;              /* Add    new task prio to   wait list 
 203              		.loc 1 134 9 is_stmt 1 view .LVU73
 204              		.loc 1 134 35 is_stmt 0 view .LVU74
 205 00a8 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 206 00aa 3A43     		orrs	r2, r2, r7
 207 00ac 9A72     		strb	r2, [r3, #10]
 135:uCOSII/Source/os_task.c ****         pevent->OSEventTbl[y_new] |= bitx_new;
 208              		.loc 1 135 9 is_stmt 1 view .LVU75
ARM GAS  /tmp/ccbL9Ycs.s 			page 7


 209              		.loc 1 135 35 is_stmt 0 view .LVU76
 210 00ae 4B44     		add	r3, r3, r9
 211              	.LVL16:
 212              		.loc 1 135 35 view .LVU77
 213 00b0 DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 214 00b2 3243     		orrs	r2, r2, r6
 215 00b4 DA72     		strb	r2, [r3, #11]
 216              	.L9:
 136:uCOSII/Source/os_task.c ****     }
 137:uCOSII/Source/os_task.c **** #if (OS_EVENT_MULTI_EN > 0u)
 138:uCOSII/Source/os_task.c ****     if (ptcb->OSTCBEventMultiPtr != (OS_EVENT **)0) {
 217              		.loc 1 138 5 is_stmt 1 view .LVU78
 218              		.loc 1 138 13 is_stmt 0 view .LVU79
 219 00b6 256A     		ldr	r5, [r4, #32]
 220              		.loc 1 138 8 view .LVU80
 221 00b8 5DB3     		cbz	r5, .L11
 139:uCOSII/Source/os_task.c ****         pevents =  ptcb->OSTCBEventMultiPtr;
 222              		.loc 1 139 9 is_stmt 1 view .LVU81
 223              	.LVL17:
 140:uCOSII/Source/os_task.c ****         pevent  = *pevents;
 224              		.loc 1 140 9 view .LVU82
 225              		.loc 1 140 17 is_stmt 0 view .LVU83
 226 00ba 2B68     		ldr	r3, [r5]
 227              	.LVL18:
 141:uCOSII/Source/os_task.c ****         while (pevent != (OS_EVENT *)0) {
 228              		.loc 1 141 9 is_stmt 1 view .LVU84
 229              		.loc 1 141 15 is_stmt 0 view .LVU85
 230 00bc 1BE0     		b	.L12
 231              	.LVL19:
 232              	.L17:
  88:uCOSII/Source/os_task.c ****         return (OS_ERR_PRIO_EXIST);
 233              		.loc 1 88 9 is_stmt 1 view .LVU86
 234 00be FFF7FEFF 		bl	OS_CPU_SR_Restore
 235              	.LVL20:
  88:uCOSII/Source/os_task.c ****         return (OS_ERR_PRIO_EXIST);
 236              		.loc 1 88 27 view .LVU87
  89:uCOSII/Source/os_task.c ****     }
 237              		.loc 1 89 9 view .LVU88
  89:uCOSII/Source/os_task.c ****     }
 238              		.loc 1 89 16 is_stmt 0 view .LVU89
 239 00c2 2820     		movs	r0, #40
 240 00c4 37E0     		b	.L3
 241              	.LVL21:
 242              	.L18:
  92:uCOSII/Source/os_task.c ****     }
 243              		.loc 1 92 9 is_stmt 1 view .LVU90
  92:uCOSII/Source/os_task.c ****     }
 244              		.loc 1 92 27 is_stmt 0 view .LVU91
 245 00c6 224B     		ldr	r3, .L22+12
 246 00c8 1B68     		ldr	r3, [r3]
  92:uCOSII/Source/os_task.c ****     }
 247              		.loc 1 92 17 view .LVU92
 248 00ca 93F83640 		ldrb	r4, [r3, #54]	@ zero_extendqisi2
 249              	.LVL22:
  92:uCOSII/Source/os_task.c ****     }
 250              		.loc 1 92 17 view .LVU93
 251 00ce A6E7     		b	.L4
ARM GAS  /tmp/ccbL9Ycs.s 			page 8


 252              	.LVL23:
 253              	.L19:
  96:uCOSII/Source/os_task.c ****         return (OS_ERR_PRIO);
 254              		.loc 1 96 9 is_stmt 1 view .LVU94
 255 00d0 0198     		ldr	r0, [sp, #4]
 256              	.LVL24:
  96:uCOSII/Source/os_task.c ****         return (OS_ERR_PRIO);
 257              		.loc 1 96 9 is_stmt 0 view .LVU95
 258 00d2 FFF7FEFF 		bl	OS_CPU_SR_Restore
 259              	.LVL25:
  96:uCOSII/Source/os_task.c ****         return (OS_ERR_PRIO);
 260              		.loc 1 96 27 is_stmt 1 view .LVU96
  97:uCOSII/Source/os_task.c ****     }
 261              		.loc 1 97 9 view .LVU97
  97:uCOSII/Source/os_task.c ****     }
 262              		.loc 1 97 16 is_stmt 0 view .LVU98
 263 00d6 2920     		movs	r0, #41
 264 00d8 2DE0     		b	.L3
 265              	.LVL26:
 266              	.L20:
 100:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 267              		.loc 1 100 9 is_stmt 1 view .LVU99
 268 00da 0198     		ldr	r0, [sp, #4]
 269              	.LVL27:
 100:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 270              		.loc 1 100 9 is_stmt 0 view .LVU100
 271 00dc FFF7FEFF 		bl	OS_CPU_SR_Restore
 272              	.LVL28:
 100:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 273              		.loc 1 100 27 is_stmt 1 view .LVU101
 101:uCOSII/Source/os_task.c ****     }
 274              		.loc 1 101 9 view .LVU102
 101:uCOSII/Source/os_task.c ****     }
 275              		.loc 1 101 16 is_stmt 0 view .LVU103
 276 00e0 4320     		movs	r0, #67
 277 00e2 28E0     		b	.L3
 278              	.LVL29:
 279              	.L13:
 142:uCOSII/Source/os_task.c ****             pevent->OSEventTbl[y_old] &= (OS_PRIO)~bitx_old;   /* Remove old task prio from wait li
 143:uCOSII/Source/os_task.c ****             if (pevent->OSEventTbl[y_old] == 0u) {
 144:uCOSII/Source/os_task.c ****                 pevent->OSEventGrp    &= (OS_PRIO)~bity_old;
 145:uCOSII/Source/os_task.c ****             }
 146:uCOSII/Source/os_task.c ****             pevent->OSEventGrp        |= bity_new;          /* Add    new task prio to   wait lists
 280              		.loc 1 146 13 is_stmt 1 view .LVU104
 281              		.loc 1 146 39 is_stmt 0 view .LVU105
 282 00e4 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 283 00e6 3A43     		orrs	r2, r2, r7
 284 00e8 9A72     		strb	r2, [r3, #10]
 147:uCOSII/Source/os_task.c ****             pevent->OSEventTbl[y_new] |= bitx_new;
 285              		.loc 1 147 13 is_stmt 1 view .LVU106
 286              		.loc 1 147 39 is_stmt 0 view .LVU107
 287 00ea 6344     		add	r3, r3, ip
 288              	.LVL30:
 289              		.loc 1 147 39 view .LVU108
 290 00ec DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 291 00ee 3243     		orrs	r2, r2, r6
 292 00f0 DA72     		strb	r2, [r3, #11]
ARM GAS  /tmp/ccbL9Ycs.s 			page 9


 148:uCOSII/Source/os_task.c ****             pevents++;
 293              		.loc 1 148 13 is_stmt 1 view .LVU109
 294              	.LVL31:
 149:uCOSII/Source/os_task.c ****             pevent                     = *pevents;
 295              		.loc 1 149 13 view .LVU110
 296              		.loc 1 149 40 is_stmt 0 view .LVU111
 297 00f2 55F8043F 		ldr	r3, [r5, #4]!
 298              	.LVL32:
 299              	.L12:
 141:uCOSII/Source/os_task.c ****             pevent->OSEventTbl[y_old] &= (OS_PRIO)~bitx_old;   /* Remove old task prio from wait li
 300              		.loc 1 141 15 is_stmt 1 view .LVU112
 301 00f6 63B1     		cbz	r3, .L11
 142:uCOSII/Source/os_task.c ****             if (pevent->OSEventTbl[y_old] == 0u) {
 302              		.loc 1 142 13 view .LVU113
 142:uCOSII/Source/os_task.c ****             if (pevent->OSEventTbl[y_old] == 0u) {
 303              		.loc 1 142 39 is_stmt 0 view .LVU114
 304 00f8 03EB0E00 		add	r0, r3, lr
 305 00fc C27A     		ldrb	r2, [r0, #11]	@ zero_extendqisi2
 306 00fe 22EA0102 		bic	r2, r2, r1
 307 0102 C272     		strb	r2, [r0, #11]
 143:uCOSII/Source/os_task.c ****                 pevent->OSEventGrp    &= (OS_PRIO)~bity_old;
 308              		.loc 1 143 13 is_stmt 1 view .LVU115
 143:uCOSII/Source/os_task.c ****                 pevent->OSEventGrp    &= (OS_PRIO)~bity_old;
 309              		.loc 1 143 16 is_stmt 0 view .LVU116
 310 0104 002A     		cmp	r2, #0
 311 0106 EDD1     		bne	.L13
 144:uCOSII/Source/os_task.c ****             }
 312              		.loc 1 144 17 is_stmt 1 view .LVU117
 144:uCOSII/Source/os_task.c ****             }
 313              		.loc 1 144 39 is_stmt 0 view .LVU118
 314 0108 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 315 010a 22EA0A02 		bic	r2, r2, r10
 316 010e 9A72     		strb	r2, [r3, #10]
 317 0110 E8E7     		b	.L13
 318              	.LVL33:
 319              	.L11:
 150:uCOSII/Source/os_task.c ****         }
 151:uCOSII/Source/os_task.c ****     }
 152:uCOSII/Source/os_task.c **** #endif
 153:uCOSII/Source/os_task.c **** #endif
 154:uCOSII/Source/os_task.c **** 
 155:uCOSII/Source/os_task.c ****     ptcb->OSTCBPrio = newprio;                              /* Set new task priority               
 320              		.loc 1 155 5 is_stmt 1 view .LVU119
 321              		.loc 1 155 21 is_stmt 0 view .LVU120
 322 0112 84F83680 		strb	r8, [r4, #54]
 156:uCOSII/Source/os_task.c ****     ptcb->OSTCBY    = y_new;
 323              		.loc 1 156 5 is_stmt 1 view .LVU121
 324              		.loc 1 156 21 is_stmt 0 view .LVU122
 325 0116 84F83890 		strb	r9, [r4, #56]
 157:uCOSII/Source/os_task.c ****     ptcb->OSTCBX    = x_new;
 326              		.loc 1 157 5 is_stmt 1 view .LVU123
 327              		.loc 1 157 21 is_stmt 0 view .LVU124
 328 011a 84F837B0 		strb	fp, [r4, #55]
 158:uCOSII/Source/os_task.c ****     ptcb->OSTCBBitY = bity_new;
 329              		.loc 1 158 5 is_stmt 1 view .LVU125
 330              		.loc 1 158 21 is_stmt 0 view .LVU126
 331 011e 84F83A70 		strb	r7, [r4, #58]
ARM GAS  /tmp/ccbL9Ycs.s 			page 10


 159:uCOSII/Source/os_task.c ****     ptcb->OSTCBBitX = bitx_new;
 332              		.loc 1 159 5 is_stmt 1 view .LVU127
 333              		.loc 1 159 21 is_stmt 0 view .LVU128
 334 0122 84F83960 		strb	r6, [r4, #57]
 160:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 335              		.loc 1 160 5 is_stmt 1 view .LVU129
 336 0126 0198     		ldr	r0, [sp, #4]
 337 0128 FFF7FEFF 		bl	OS_CPU_SR_Restore
 338              	.LVL34:
 339              		.loc 1 160 23 view .LVU130
 161:uCOSII/Source/os_task.c ****     if (OSRunning == OS_TRUE) {
 340              		.loc 1 161 5 view .LVU131
 341              		.loc 1 161 19 is_stmt 0 view .LVU132
 342 012c 094B     		ldr	r3, .L22+16
 343 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 344              		.loc 1 161 8 view .LVU133
 345 0130 012B     		cmp	r3, #1
 346 0132 03D0     		beq	.L21
 162:uCOSII/Source/os_task.c ****         OS_Sched();                                         /* Find new highest priority task      
 163:uCOSII/Source/os_task.c ****     }
 164:uCOSII/Source/os_task.c ****     return (OS_ERR_NONE);
 347              		.loc 1 164 12 view .LVU134
 348 0134 0020     		movs	r0, #0
 349              	.LVL35:
 350              	.L3:
 165:uCOSII/Source/os_task.c **** }
 351              		.loc 1 165 1 view .LVU135
 352 0136 03B0     		add	sp, sp, #12
 353              	.LCFI2:
 354              		.cfi_remember_state
 355              		.cfi_def_cfa_offset 36
 356              		@ sp needed
 357 0138 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 358              	.LVL36:
 359              	.L21:
 360              	.LCFI3:
 361              		.cfi_restore_state
 162:uCOSII/Source/os_task.c ****         OS_Sched();                                         /* Find new highest priority task      
 362              		.loc 1 162 9 is_stmt 1 view .LVU136
 363 013c FFF7FEFF 		bl	OS_Sched
 364              	.LVL37:
 164:uCOSII/Source/os_task.c **** }
 365              		.loc 1 164 12 is_stmt 0 view .LVU137
 366 0140 0020     		movs	r0, #0
 367 0142 F8E7     		b	.L3
 368              	.L23:
 369              		.align	2
 370              	.L22:
 371 0144 00000000 		.word	OSTCBPrioTbl
 372 0148 00000000 		.word	OSRdyTbl
 373 014c 00000000 		.word	OSRdyGrp
 374 0150 00000000 		.word	OSTCBCur
 375 0154 00000000 		.word	OSRunning
 376              		.cfi_endproc
 377              	.LFE0:
 379              		.section	.text.OSTaskCreate,"ax",%progbits
 380              		.align	1
ARM GAS  /tmp/ccbL9Ycs.s 			page 11


 381              		.global	OSTaskCreate
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu fpv4-sp-d16
 387              	OSTaskCreate:
 388              	.LVL38:
 389              	.LFB1:
 166:uCOSII/Source/os_task.c **** #endif
 167:uCOSII/Source/os_task.c **** /*$PAGE*/
 168:uCOSII/Source/os_task.c **** /*
 169:uCOSII/Source/os_task.c **** ***************************************************************************************************
 170:uCOSII/Source/os_task.c **** *                                            CREATE A TASK
 171:uCOSII/Source/os_task.c **** *
 172:uCOSII/Source/os_task.c **** * Description: This function is used to have uC/OS-II manage the execution of a task.  Tasks can ei
 173:uCOSII/Source/os_task.c **** *              be created prior to the start of multitasking or by a running task.  A task cannot b
 174:uCOSII/Source/os_task.c **** *              created by an ISR.
 175:uCOSII/Source/os_task.c **** *
 176:uCOSII/Source/os_task.c **** * Arguments  : task     is a pointer to the task's code
 177:uCOSII/Source/os_task.c **** *
 178:uCOSII/Source/os_task.c **** *              p_arg    is a pointer to an optional data area which can be used to pass parameters 
 179:uCOSII/Source/os_task.c **** *                       the task when the task first executes.  Where the task is concerned it thin
 180:uCOSII/Source/os_task.c **** *                       it was invoked and passed the argument 'p_arg' as follows:
 181:uCOSII/Source/os_task.c **** *
 182:uCOSII/Source/os_task.c **** *                           void Task (void *p_arg)
 183:uCOSII/Source/os_task.c **** *                           {
 184:uCOSII/Source/os_task.c **** *                               for (;;) {
 185:uCOSII/Source/os_task.c **** *                                   Task code;
 186:uCOSII/Source/os_task.c **** *                               }
 187:uCOSII/Source/os_task.c **** *                           }
 188:uCOSII/Source/os_task.c **** *
 189:uCOSII/Source/os_task.c **** *              ptos     is a pointer to the task's top of stack.  If the configuration constant
 190:uCOSII/Source/os_task.c **** *                       OS_STK_GROWTH is set to 1, the stack is assumed to grow downward (i.e. from
 191:uCOSII/Source/os_task.c **** *                       memory to low memory).  'pstk' will thus point to the highest (valid) memor
 192:uCOSII/Source/os_task.c **** *                       location of the stack.  If OS_STK_GROWTH is set to 0, 'pstk' will point to 
 193:uCOSII/Source/os_task.c **** *                       lowest memory location of the stack and the stack will grow with increasing
 194:uCOSII/Source/os_task.c **** *                       memory locations.
 195:uCOSII/Source/os_task.c **** *
 196:uCOSII/Source/os_task.c **** *              prio     is the task's priority.  A unique priority MUST be assigned to each task an
 197:uCOSII/Source/os_task.c **** *                       lower the number, the higher the priority.
 198:uCOSII/Source/os_task.c **** *
 199:uCOSII/Source/os_task.c **** * Returns    : OS_ERR_NONE                      if the function was successful.
 200:uCOSII/Source/os_task.c **** *              OS_ERR_PRIO_EXIST                if the task priority already exist
 201:uCOSII/Source/os_task.c **** *                                               (each task MUST have a unique priority).
 202:uCOSII/Source/os_task.c **** *              OS_ERR_PRIO_INVALID              if the priority you specify is higher that the maxi
 203:uCOSII/Source/os_task.c **** *                                               allowed (i.e. >= OS_LOWEST_PRIO)
 204:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_CREATE_ISR           if you tried to create a task from an ISR.
 205:uCOSII/Source/os_task.c **** *              OS_ERR_ILLEGAL_CREATE_RUN_TIME   if you tried to create a task after safety critical
 206:uCOSII/Source/os_task.c **** *                                               operation started.
 207:uCOSII/Source/os_task.c **** ***************************************************************************************************
 208:uCOSII/Source/os_task.c **** */
 209:uCOSII/Source/os_task.c **** 
 210:uCOSII/Source/os_task.c **** #if OS_TASK_CREATE_EN > 0u
 211:uCOSII/Source/os_task.c **** INT8U  OSTaskCreate (void   (*task)(void *p_arg),
 212:uCOSII/Source/os_task.c ****                      void    *p_arg,
 213:uCOSII/Source/os_task.c ****                      OS_STK  *ptos,
 214:uCOSII/Source/os_task.c ****                      INT8U    prio)
ARM GAS  /tmp/ccbL9Ycs.s 			page 12


 215:uCOSII/Source/os_task.c **** {
 390              		.loc 1 215 1 is_stmt 1 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394              		.loc 1 215 1 is_stmt 0 view .LVU139
 395 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 396              	.LCFI4:
 397              		.cfi_def_cfa_offset 20
 398              		.cfi_offset 4, -20
 399              		.cfi_offset 5, -16
 400              		.cfi_offset 6, -12
 401              		.cfi_offset 7, -8
 402              		.cfi_offset 14, -4
 403 0002 85B0     		sub	sp, sp, #20
 404              	.LCFI5:
 405              		.cfi_def_cfa_offset 40
 406 0004 0546     		mov	r5, r0
 407 0006 0E46     		mov	r6, r1
 408 0008 1746     		mov	r7, r2
 409 000a 1C46     		mov	r4, r3
 216:uCOSII/Source/os_task.c ****     OS_STK     *psp;
 410              		.loc 1 216 5 is_stmt 1 view .LVU140
 217:uCOSII/Source/os_task.c ****     INT8U       err;
 411              		.loc 1 217 5 view .LVU141
 218:uCOSII/Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                 /* Allocate storage for CPU status register           
 219:uCOSII/Source/os_task.c ****     OS_CPU_SR   cpu_sr = 0u;
 412              		.loc 1 219 5 view .LVU142
 413              	.LVL39:
 220:uCOSII/Source/os_task.c **** #endif
 221:uCOSII/Source/os_task.c **** 
 222:uCOSII/Source/os_task.c **** 
 223:uCOSII/Source/os_task.c **** 
 224:uCOSII/Source/os_task.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
 225:uCOSII/Source/os_task.c ****     if (OSSafetyCriticalStartFlag == OS_TRUE) {
 226:uCOSII/Source/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 227:uCOSII/Source/os_task.c ****         return (OS_ERR_ILLEGAL_CREATE_RUN_TIME);
 228:uCOSII/Source/os_task.c ****     }
 229:uCOSII/Source/os_task.c **** #endif
 230:uCOSII/Source/os_task.c **** 
 231:uCOSII/Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
 232:uCOSII/Source/os_task.c ****     if (prio > OS_LOWEST_PRIO) {             /* Make sure priority is within allowable range       
 233:uCOSII/Source/os_task.c ****         return (OS_ERR_PRIO_INVALID);
 234:uCOSII/Source/os_task.c ****     }
 235:uCOSII/Source/os_task.c **** #endif
 236:uCOSII/Source/os_task.c ****     OS_ENTER_CRITICAL();
 414              		.loc 1 236 5 view .LVU143
 415 000c FFF7FEFF 		bl	OS_CPU_SR_Save
 416              	.LVL40:
 417              		.loc 1 236 24 view .LVU144
 237:uCOSII/Source/os_task.c ****     if (OSIntNesting > 0u) {                 /* Make sure we don't create the task from within an I
 418              		.loc 1 237 5 view .LVU145
 419              		.loc 1 237 22 is_stmt 0 view .LVU146
 420 0010 1B4B     		ldr	r3, .L33
 421 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 422              		.loc 1 237 8 view .LVU147
 423 0014 4BB9     		cbnz	r3, .L31
ARM GAS  /tmp/ccbL9Ycs.s 			page 13


 238:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 239:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_CREATE_ISR);
 240:uCOSII/Source/os_task.c ****     }
 241:uCOSII/Source/os_task.c ****     if (OSTCBPrioTbl[prio] == (OS_TCB *)0) { /* Make sure task doesn't already exist at this priori
 424              		.loc 1 241 5 is_stmt 1 view .LVU148
 425              		.loc 1 241 21 is_stmt 0 view .LVU149
 426 0016 1B4B     		ldr	r3, .L33+4
 427 0018 53F82430 		ldr	r3, [r3, r4, lsl #2]
 428              		.loc 1 241 8 view .LVU150
 429 001c 4BB1     		cbz	r3, .L32
 242:uCOSII/Source/os_task.c ****         OSTCBPrioTbl[prio] = OS_TCB_RESERVED;/* Reserve the priority to prevent others from doing .
 243:uCOSII/Source/os_task.c ****                                              /* ... the same thing until task is created.          
 244:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 245:uCOSII/Source/os_task.c ****         psp = OSTaskStkInit(task, p_arg, ptos, 0u);             /* Initialize the task's stack     
 246:uCOSII/Source/os_task.c ****         err = OS_TCBInit(prio, psp, (OS_STK *)0, 0u, 0u, (void *)0, 0u);
 247:uCOSII/Source/os_task.c ****         if (err == OS_ERR_NONE) {
 248:uCOSII/Source/os_task.c ****             if (OSRunning == OS_TRUE) {      /* Find highest priority task if multitasking has star
 249:uCOSII/Source/os_task.c ****                 OS_Sched();
 250:uCOSII/Source/os_task.c ****             }
 251:uCOSII/Source/os_task.c ****         } else {
 252:uCOSII/Source/os_task.c ****             OS_ENTER_CRITICAL();
 253:uCOSII/Source/os_task.c ****             OSTCBPrioTbl[prio] = (OS_TCB *)0;/* Make this priority available to others             
 254:uCOSII/Source/os_task.c ****             OS_EXIT_CRITICAL();
 255:uCOSII/Source/os_task.c ****         }
 256:uCOSII/Source/os_task.c ****         return (err);
 257:uCOSII/Source/os_task.c ****     }
 258:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 430              		.loc 1 258 5 is_stmt 1 view .LVU151
 431 001e FFF7FEFF 		bl	OS_CPU_SR_Restore
 432              	.LVL41:
 433              		.loc 1 258 23 view .LVU152
 259:uCOSII/Source/os_task.c ****     return (OS_ERR_PRIO_EXIST);
 434              		.loc 1 259 5 view .LVU153
 435              		.loc 1 259 12 is_stmt 0 view .LVU154
 436 0022 2825     		movs	r5, #40
 437              	.LVL42:
 438              	.L26:
 260:uCOSII/Source/os_task.c **** }
 439              		.loc 1 260 1 view .LVU155
 440 0024 2846     		mov	r0, r5
 441 0026 05B0     		add	sp, sp, #20
 442              	.LCFI6:
 443              		.cfi_remember_state
 444              		.cfi_def_cfa_offset 20
 445              		@ sp needed
 446 0028 F0BD     		pop	{r4, r5, r6, r7, pc}
 447              	.LVL43:
 448              	.L31:
 449              	.LCFI7:
 450              		.cfi_restore_state
 238:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_CREATE_ISR);
 451              		.loc 1 238 9 is_stmt 1 view .LVU156
 452 002a FFF7FEFF 		bl	OS_CPU_SR_Restore
 453              	.LVL44:
 238:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_CREATE_ISR);
 454              		.loc 1 238 27 view .LVU157
 239:uCOSII/Source/os_task.c ****     }
ARM GAS  /tmp/ccbL9Ycs.s 			page 14


 455              		.loc 1 239 9 view .LVU158
 239:uCOSII/Source/os_task.c ****     }
 456              		.loc 1 239 16 is_stmt 0 view .LVU159
 457 002e 3C25     		movs	r5, #60
 458              	.LVL45:
 239:uCOSII/Source/os_task.c ****     }
 459              		.loc 1 239 16 view .LVU160
 460 0030 F8E7     		b	.L26
 461              	.LVL46:
 462              	.L32:
 242:uCOSII/Source/os_task.c ****                                              /* ... the same thing until task is created.          
 463              		.loc 1 242 9 is_stmt 1 view .LVU161
 242:uCOSII/Source/os_task.c ****                                              /* ... the same thing until task is created.          
 464              		.loc 1 242 28 is_stmt 0 view .LVU162
 465 0032 144B     		ldr	r3, .L33+4
 466 0034 0122     		movs	r2, #1
 467 0036 43F82420 		str	r2, [r3, r4, lsl #2]
 244:uCOSII/Source/os_task.c ****         psp = OSTaskStkInit(task, p_arg, ptos, 0u);             /* Initialize the task's stack     
 468              		.loc 1 244 9 is_stmt 1 view .LVU163
 469 003a FFF7FEFF 		bl	OS_CPU_SR_Restore
 470              	.LVL47:
 244:uCOSII/Source/os_task.c ****         psp = OSTaskStkInit(task, p_arg, ptos, 0u);             /* Initialize the task's stack     
 471              		.loc 1 244 27 view .LVU164
 245:uCOSII/Source/os_task.c ****         err = OS_TCBInit(prio, psp, (OS_STK *)0, 0u, 0u, (void *)0, 0u);
 472              		.loc 1 245 9 view .LVU165
 245:uCOSII/Source/os_task.c ****         err = OS_TCBInit(prio, psp, (OS_STK *)0, 0u, 0u, (void *)0, 0u);
 473              		.loc 1 245 15 is_stmt 0 view .LVU166
 474 003e 0023     		movs	r3, #0
 475 0040 3A46     		mov	r2, r7
 476 0042 3146     		mov	r1, r6
 477 0044 2846     		mov	r0, r5
 478 0046 FFF7FEFF 		bl	OSTaskStkInit
 479              	.LVL48:
 480 004a 0146     		mov	r1, r0
 481              	.LVL49:
 246:uCOSII/Source/os_task.c ****         if (err == OS_ERR_NONE) {
 482              		.loc 1 246 9 is_stmt 1 view .LVU167
 246:uCOSII/Source/os_task.c ****         if (err == OS_ERR_NONE) {
 483              		.loc 1 246 15 is_stmt 0 view .LVU168
 484 004c 0022     		movs	r2, #0
 485 004e 0292     		str	r2, [sp, #8]
 486 0050 0192     		str	r2, [sp, #4]
 487 0052 0092     		str	r2, [sp]
 488 0054 1346     		mov	r3, r2
 489 0056 2046     		mov	r0, r4
 490              	.LVL50:
 246:uCOSII/Source/os_task.c ****         if (err == OS_ERR_NONE) {
 491              		.loc 1 246 15 view .LVU169
 492 0058 FFF7FEFF 		bl	OS_TCBInit
 493              	.LVL51:
 247:uCOSII/Source/os_task.c ****             if (OSRunning == OS_TRUE) {      /* Find highest priority task if multitasking has star
 494              		.loc 1 247 9 is_stmt 1 view .LVU170
 247:uCOSII/Source/os_task.c ****             if (OSRunning == OS_TRUE) {      /* Find highest priority task if multitasking has star
 495              		.loc 1 247 12 is_stmt 0 view .LVU171
 496 005c 0546     		mov	r5, r0
 497              	.LVL52:
 247:uCOSII/Source/os_task.c ****             if (OSRunning == OS_TRUE) {      /* Find highest priority task if multitasking has star
ARM GAS  /tmp/ccbL9Ycs.s 			page 15


 498              		.loc 1 247 12 view .LVU172
 499 005e 30B9     		cbnz	r0, .L28
 248:uCOSII/Source/os_task.c ****                 OS_Sched();
 500              		.loc 1 248 13 is_stmt 1 view .LVU173
 248:uCOSII/Source/os_task.c ****                 OS_Sched();
 501              		.loc 1 248 27 is_stmt 0 view .LVU174
 502 0060 094B     		ldr	r3, .L33+8
 503 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 248:uCOSII/Source/os_task.c ****                 OS_Sched();
 504              		.loc 1 248 16 view .LVU175
 505 0064 012B     		cmp	r3, #1
 506 0066 DDD1     		bne	.L26
 249:uCOSII/Source/os_task.c ****             }
 507              		.loc 1 249 17 is_stmt 1 view .LVU176
 508 0068 FFF7FEFF 		bl	OS_Sched
 509              	.LVL53:
 249:uCOSII/Source/os_task.c ****             }
 510              		.loc 1 249 17 is_stmt 0 view .LVU177
 511 006c DAE7     		b	.L26
 512              	.LVL54:
 513              	.L28:
 252:uCOSII/Source/os_task.c ****             OSTCBPrioTbl[prio] = (OS_TCB *)0;/* Make this priority available to others             
 514              		.loc 1 252 13 is_stmt 1 view .LVU178
 515 006e FFF7FEFF 		bl	OS_CPU_SR_Save
 516              	.LVL55:
 252:uCOSII/Source/os_task.c ****             OSTCBPrioTbl[prio] = (OS_TCB *)0;/* Make this priority available to others             
 517              		.loc 1 252 32 view .LVU179
 253:uCOSII/Source/os_task.c ****             OS_EXIT_CRITICAL();
 518              		.loc 1 253 13 view .LVU180
 253:uCOSII/Source/os_task.c ****             OS_EXIT_CRITICAL();
 519              		.loc 1 253 32 is_stmt 0 view .LVU181
 520 0072 044B     		ldr	r3, .L33+4
 521 0074 0022     		movs	r2, #0
 522 0076 43F82420 		str	r2, [r3, r4, lsl #2]
 254:uCOSII/Source/os_task.c ****         }
 523              		.loc 1 254 13 is_stmt 1 view .LVU182
 524 007a FFF7FEFF 		bl	OS_CPU_SR_Restore
 525              	.LVL56:
 254:uCOSII/Source/os_task.c ****         }
 526              		.loc 1 254 31 view .LVU183
 256:uCOSII/Source/os_task.c ****     }
 527              		.loc 1 256 9 view .LVU184
 256:uCOSII/Source/os_task.c ****     }
 528              		.loc 1 256 16 is_stmt 0 view .LVU185
 529 007e D1E7     		b	.L26
 530              	.L34:
 531              		.align	2
 532              	.L33:
 533 0080 00000000 		.word	OSIntNesting
 534 0084 00000000 		.word	OSTCBPrioTbl
 535 0088 00000000 		.word	OSRunning
 536              		.cfi_endproc
 537              	.LFE1:
 539              		.section	.rodata.OSTaskDel.str1.4,"aMS",%progbits,1
 540              		.align	2
 541              	.LC0:
 542 0000 3F00     		.ascii	"?\000"
ARM GAS  /tmp/ccbL9Ycs.s 			page 16


 543              		.section	.text.OSTaskDel,"ax",%progbits
 544              		.align	1
 545              		.global	OSTaskDel
 546              		.syntax unified
 547              		.thumb
 548              		.thumb_func
 549              		.fpu fpv4-sp-d16
 551              	OSTaskDel:
 552              	.LVL57:
 553              	.LFB3:
 261:uCOSII/Source/os_task.c **** #endif
 262:uCOSII/Source/os_task.c **** /*$PAGE*/
 263:uCOSII/Source/os_task.c **** /*
 264:uCOSII/Source/os_task.c **** ***************************************************************************************************
 265:uCOSII/Source/os_task.c **** *                                  CREATE A TASK (Extended Version)
 266:uCOSII/Source/os_task.c **** *
 267:uCOSII/Source/os_task.c **** * Description: This function is used to have uC/OS-II manage the execution of a task.  Tasks can ei
 268:uCOSII/Source/os_task.c **** *              be created prior to the start of multitasking or by a running task.  A task cannot b
 269:uCOSII/Source/os_task.c **** *              created by an ISR.  This function is similar to OSTaskCreate() except that it allows
 270:uCOSII/Source/os_task.c **** *              additional information about a task to be specified.
 271:uCOSII/Source/os_task.c **** *
 272:uCOSII/Source/os_task.c **** * Arguments  : task      is a pointer to the task's code
 273:uCOSII/Source/os_task.c **** *
 274:uCOSII/Source/os_task.c **** *              p_arg     is a pointer to an optional data area which can be used to pass parameters
 275:uCOSII/Source/os_task.c **** *                        the task when the task first executes.  Where the task is concerned it thi
 276:uCOSII/Source/os_task.c **** *                        it was invoked and passed the argument 'p_arg' as follows:
 277:uCOSII/Source/os_task.c **** *
 278:uCOSII/Source/os_task.c **** *                            void Task (void *p_arg)
 279:uCOSII/Source/os_task.c **** *                            {
 280:uCOSII/Source/os_task.c **** *                                for (;;) {
 281:uCOSII/Source/os_task.c **** *                                    Task code;
 282:uCOSII/Source/os_task.c **** *                                }
 283:uCOSII/Source/os_task.c **** *                            }
 284:uCOSII/Source/os_task.c **** *
 285:uCOSII/Source/os_task.c **** *              ptos      is a pointer to the task's top of stack.  If the configuration constant
 286:uCOSII/Source/os_task.c **** *                        OS_STK_GROWTH is set to 1, the stack is assumed to grow downward (i.e. fro
 287:uCOSII/Source/os_task.c **** *                        memory to low memory).  'ptos' will thus point to the highest (valid) memo
 288:uCOSII/Source/os_task.c **** *                        location of the stack.  If OS_STK_GROWTH is set to 0, 'ptos' will point to
 289:uCOSII/Source/os_task.c **** *                        lowest memory location of the stack and the stack will grow with increasin
 290:uCOSII/Source/os_task.c **** *                        memory locations.  'ptos' MUST point to a valid 'free' data item.
 291:uCOSII/Source/os_task.c **** *
 292:uCOSII/Source/os_task.c **** *              prio      is the task's priority.  A unique priority MUST be assigned to each task a
 293:uCOSII/Source/os_task.c **** *                        lower the number, the higher the priority.
 294:uCOSII/Source/os_task.c **** *
 295:uCOSII/Source/os_task.c **** *              id        is the task's ID (0..65535)
 296:uCOSII/Source/os_task.c **** *
 297:uCOSII/Source/os_task.c **** *              pbos      is a pointer to the task's bottom of stack.  If the configuration constant
 298:uCOSII/Source/os_task.c **** *                        OS_STK_GROWTH is set to 1, the stack is assumed to grow downward (i.e. fro
 299:uCOSII/Source/os_task.c **** *                        memory to low memory).  'pbos' will thus point to the LOWEST (valid) memor
 300:uCOSII/Source/os_task.c **** *                        location of the stack.  If OS_STK_GROWTH is set to 0, 'pbos' will point to
 301:uCOSII/Source/os_task.c **** *                        HIGHEST memory location of the stack and the stack will grow with increasi
 302:uCOSII/Source/os_task.c **** *                        memory locations.  'pbos' MUST point to a valid 'free' data item.
 303:uCOSII/Source/os_task.c **** *
 304:uCOSII/Source/os_task.c **** *              stk_size  is the size of the stack in number of elements.  If OS_STK is set to INT8U
 305:uCOSII/Source/os_task.c **** *                        'stk_size' corresponds to the number of bytes available.  If OS_STK is set
 306:uCOSII/Source/os_task.c **** *                        INT16U, 'stk_size' contains the number of 16-bit entries available.  Final
 307:uCOSII/Source/os_task.c **** *                        OS_STK is set to INT32U, 'stk_size' contains the number of 32-bit entries
ARM GAS  /tmp/ccbL9Ycs.s 			page 17


 308:uCOSII/Source/os_task.c **** *                        available on the stack.
 309:uCOSII/Source/os_task.c **** *
 310:uCOSII/Source/os_task.c **** *              pext      is a pointer to a user supplied memory location which is used as a TCB ext
 311:uCOSII/Source/os_task.c **** *                        For example, this user memory can hold the contents of floating-point regi
 312:uCOSII/Source/os_task.c **** *                        during a context switch, the time each task takes to execute, the number o
 313:uCOSII/Source/os_task.c **** *                        the task has been switched-in, etc.
 314:uCOSII/Source/os_task.c **** *
 315:uCOSII/Source/os_task.c **** *              opt       contains additional information (or options) about the behavior of the tas
 316:uCOSII/Source/os_task.c **** *                        LOWER 8-bits are reserved by uC/OS-II while the upper 8 bits can be applic
 317:uCOSII/Source/os_task.c **** *                        specific.  See OS_TASK_OPT_??? in uCOS-II.H.  Current choices are:
 318:uCOSII/Source/os_task.c **** *
 319:uCOSII/Source/os_task.c **** *                        OS_TASK_OPT_STK_CHK      Stack checking to be allowed for the task
 320:uCOSII/Source/os_task.c **** *                        OS_TASK_OPT_STK_CLR      Clear the stack when the task is created
 321:uCOSII/Source/os_task.c **** *                        OS_TASK_OPT_SAVE_FP      If the CPU has floating-point registers, save the
 322:uCOSII/Source/os_task.c **** *                                                 during a context switch.
 323:uCOSII/Source/os_task.c **** *
 324:uCOSII/Source/os_task.c **** * Returns    : OS_ERR_NONE                      if the function was successful.
 325:uCOSII/Source/os_task.c **** *              OS_ERR_PRIO_EXIST                if the task priority already exist
 326:uCOSII/Source/os_task.c **** *                                               (each task MUST have a unique priority).
 327:uCOSII/Source/os_task.c **** *              OS_ERR_PRIO_INVALID              if the priority you specify is higher that the maxi
 328:uCOSII/Source/os_task.c **** *                                               allowed (i.e. > OS_LOWEST_PRIO)
 329:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_CREATE_ISR           if you tried to create a task from an ISR.
 330:uCOSII/Source/os_task.c **** *              OS_ERR_ILLEGAL_CREATE_RUN_TIME   if you tried to create a task after safety critical
 331:uCOSII/Source/os_task.c **** *                                               operation started.
 332:uCOSII/Source/os_task.c **** ***************************************************************************************************
 333:uCOSII/Source/os_task.c **** */
 334:uCOSII/Source/os_task.c **** /*$PAGE*/
 335:uCOSII/Source/os_task.c **** #if OS_TASK_CREATE_EXT_EN > 0u
 336:uCOSII/Source/os_task.c **** INT8U  OSTaskCreateExt (void   (*task)(void *p_arg),
 337:uCOSII/Source/os_task.c ****                         void    *p_arg,
 338:uCOSII/Source/os_task.c ****                         OS_STK  *ptos,
 339:uCOSII/Source/os_task.c ****                         INT8U    prio,
 340:uCOSII/Source/os_task.c ****                         INT16U   id,
 341:uCOSII/Source/os_task.c ****                         OS_STK  *pbos,
 342:uCOSII/Source/os_task.c ****                         INT32U   stk_size,
 343:uCOSII/Source/os_task.c ****                         void    *pext,
 344:uCOSII/Source/os_task.c ****                         INT16U   opt)
 345:uCOSII/Source/os_task.c **** {
 346:uCOSII/Source/os_task.c ****     OS_STK     *psp;
 347:uCOSII/Source/os_task.c ****     INT8U       err;
 348:uCOSII/Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                 /* Allocate storage for CPU status register           
 349:uCOSII/Source/os_task.c ****     OS_CPU_SR   cpu_sr = 0u;
 350:uCOSII/Source/os_task.c **** #endif
 351:uCOSII/Source/os_task.c **** 
 352:uCOSII/Source/os_task.c **** 
 353:uCOSII/Source/os_task.c **** 
 354:uCOSII/Source/os_task.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
 355:uCOSII/Source/os_task.c ****     if (OSSafetyCriticalStartFlag == OS_TRUE) {
 356:uCOSII/Source/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 357:uCOSII/Source/os_task.c ****         return (OS_ERR_ILLEGAL_CREATE_RUN_TIME);
 358:uCOSII/Source/os_task.c ****     }
 359:uCOSII/Source/os_task.c **** #endif
 360:uCOSII/Source/os_task.c **** 
 361:uCOSII/Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
 362:uCOSII/Source/os_task.c ****     if (prio > OS_LOWEST_PRIO) {             /* Make sure priority is within allowable range       
 363:uCOSII/Source/os_task.c ****         return (OS_ERR_PRIO_INVALID);
 364:uCOSII/Source/os_task.c ****     }
ARM GAS  /tmp/ccbL9Ycs.s 			page 18


 365:uCOSII/Source/os_task.c **** #endif
 366:uCOSII/Source/os_task.c ****     OS_ENTER_CRITICAL();
 367:uCOSII/Source/os_task.c ****     if (OSIntNesting > 0u) {                 /* Make sure we don't create the task from within an I
 368:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 369:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_CREATE_ISR);
 370:uCOSII/Source/os_task.c ****     }
 371:uCOSII/Source/os_task.c ****     if (OSTCBPrioTbl[prio] == (OS_TCB *)0) { /* Make sure task doesn't already exist at this priori
 372:uCOSII/Source/os_task.c ****         OSTCBPrioTbl[prio] = OS_TCB_RESERVED;/* Reserve the priority to prevent others from doing .
 373:uCOSII/Source/os_task.c ****                                              /* ... the same thing until task is created.          
 374:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 375:uCOSII/Source/os_task.c **** 
 376:uCOSII/Source/os_task.c **** #if (OS_TASK_STAT_STK_CHK_EN > 0u)
 377:uCOSII/Source/os_task.c ****         OS_TaskStkClr(pbos, stk_size, opt);                    /* Clear the task stack (if needed) 
 378:uCOSII/Source/os_task.c **** #endif
 379:uCOSII/Source/os_task.c **** 
 380:uCOSII/Source/os_task.c ****         psp = OSTaskStkInit(task, p_arg, ptos, opt);           /* Initialize the task's stack      
 381:uCOSII/Source/os_task.c ****         err = OS_TCBInit(prio, psp, pbos, id, stk_size, pext, opt);
 382:uCOSII/Source/os_task.c ****         if (err == OS_ERR_NONE) {
 383:uCOSII/Source/os_task.c ****             if (OSRunning == OS_TRUE) {                        /* Find HPT if multitasking has star
 384:uCOSII/Source/os_task.c ****                 OS_Sched();
 385:uCOSII/Source/os_task.c ****             }
 386:uCOSII/Source/os_task.c ****         } else {
 387:uCOSII/Source/os_task.c ****             OS_ENTER_CRITICAL();
 388:uCOSII/Source/os_task.c ****             OSTCBPrioTbl[prio] = (OS_TCB *)0;                  /* Make this priority avail. to othe
 389:uCOSII/Source/os_task.c ****             OS_EXIT_CRITICAL();
 390:uCOSII/Source/os_task.c ****         }
 391:uCOSII/Source/os_task.c ****         return (err);
 392:uCOSII/Source/os_task.c ****     }
 393:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 394:uCOSII/Source/os_task.c ****     return (OS_ERR_PRIO_EXIST);
 395:uCOSII/Source/os_task.c **** }
 396:uCOSII/Source/os_task.c **** #endif
 397:uCOSII/Source/os_task.c **** /*$PAGE*/
 398:uCOSII/Source/os_task.c **** /*
 399:uCOSII/Source/os_task.c **** ***************************************************************************************************
 400:uCOSII/Source/os_task.c **** *                                            DELETE A TASK
 401:uCOSII/Source/os_task.c **** *
 402:uCOSII/Source/os_task.c **** * Description: This function allows you to delete a task.  The calling task can delete itself by
 403:uCOSII/Source/os_task.c **** *              its own priority number.  The deleted task is returned to the dormant state and can 
 404:uCOSII/Source/os_task.c **** *              re-activated by creating the deleted task again.
 405:uCOSII/Source/os_task.c **** *
 406:uCOSII/Source/os_task.c **** * Arguments  : prio    is the priority of the task to delete.  Note that you can explicitly delete
 407:uCOSII/Source/os_task.c **** *                      the current task without knowing its priority level by setting 'prio' to
 408:uCOSII/Source/os_task.c **** *                      OS_PRIO_SELF.
 409:uCOSII/Source/os_task.c **** *
 410:uCOSII/Source/os_task.c **** * Returns    : OS_ERR_NONE             if the call is successful
 411:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_DEL_IDLE    if you attempted to delete uC/OS-II's idle task
 412:uCOSII/Source/os_task.c **** *              OS_ERR_PRIO_INVALID     if the priority you specify is higher that the maximum allow
 413:uCOSII/Source/os_task.c **** *                                      (i.e. >= OS_LOWEST_PRIO) or, you have not specified OS_PRIO_
 414:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_DEL         if the task is assigned to a Mutex PIP.
 415:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_NOT_EXIST   if the task you want to delete does not exist.
 416:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_DEL_ISR     if you tried to delete a task from an ISR
 417:uCOSII/Source/os_task.c **** *
 418:uCOSII/Source/os_task.c **** * Notes      : 1) To reduce interrupt latency, OSTaskDel() 'disables' the task:
 419:uCOSII/Source/os_task.c **** *                    a) by making it not ready
 420:uCOSII/Source/os_task.c **** *                    b) by removing it from any wait lists
 421:uCOSII/Source/os_task.c **** *                    c) by preventing OSTimeTick() from making the task ready to run.
ARM GAS  /tmp/ccbL9Ycs.s 			page 19


 422:uCOSII/Source/os_task.c **** *                 The task can then be 'unlinked' from the miscellaneous structures in uC/OS-II.
 423:uCOSII/Source/os_task.c **** *              2) The function OS_Dummy() is called after OS_EXIT_CRITICAL() because, on most proce
 424:uCOSII/Source/os_task.c **** *                 the next instruction following the enable interrupt instruction is ignored.
 425:uCOSII/Source/os_task.c **** *              3) An ISR cannot delete a task.
 426:uCOSII/Source/os_task.c **** *              4) The lock nesting counter is incremented because, for a brief instant, if the curr
 427:uCOSII/Source/os_task.c **** *                 task is being deleted, the current task would not be able to be rescheduled becau
 428:uCOSII/Source/os_task.c **** *                 is removed from the ready list.  Incrementing the nesting counter prevents anothe
 429:uCOSII/Source/os_task.c **** *                 from being schedule.  This means that an ISR would return to the current task whi
 430:uCOSII/Source/os_task.c **** *                 being deleted.  The rest of the deletion would thus be able to be completed.
 431:uCOSII/Source/os_task.c **** ***************************************************************************************************
 432:uCOSII/Source/os_task.c **** */
 433:uCOSII/Source/os_task.c **** 
 434:uCOSII/Source/os_task.c **** #if OS_TASK_DEL_EN > 0u
 435:uCOSII/Source/os_task.c **** INT8U  OSTaskDel (INT8U prio)
 436:uCOSII/Source/os_task.c **** {
 554              		.loc 1 436 1 is_stmt 1 view -0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 0
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558              		.loc 1 436 1 is_stmt 0 view .LVU187
 559 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 560              	.LCFI8:
 561              		.cfi_def_cfa_offset 24
 562              		.cfi_offset 3, -24
 563              		.cfi_offset 4, -20
 564              		.cfi_offset 5, -16
 565              		.cfi_offset 6, -12
 566              		.cfi_offset 7, -8
 567              		.cfi_offset 14, -4
 437:uCOSII/Source/os_task.c **** #if (OS_FLAG_EN > 0u) && (OS_MAX_FLAGS > 0u)
 438:uCOSII/Source/os_task.c ****     OS_FLAG_NODE *pnode;
 568              		.loc 1 438 5 is_stmt 1 view .LVU188
 439:uCOSII/Source/os_task.c **** #endif
 440:uCOSII/Source/os_task.c ****     OS_TCB       *ptcb;
 569              		.loc 1 440 5 view .LVU189
 441:uCOSII/Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                            /* Allocate storage for CPU status register
 442:uCOSII/Source/os_task.c ****     OS_CPU_SR     cpu_sr = 0u;
 570              		.loc 1 442 5 view .LVU190
 571              	.LVL58:
 443:uCOSII/Source/os_task.c **** #endif
 444:uCOSII/Source/os_task.c **** 
 445:uCOSII/Source/os_task.c **** 
 446:uCOSII/Source/os_task.c **** 
 447:uCOSII/Source/os_task.c ****     if (OSIntNesting > 0u) {                            /* See if trying to delete from ISR        
 572              		.loc 1 447 5 view .LVU191
 573              		.loc 1 447 22 is_stmt 0 view .LVU192
 574 0002 464B     		ldr	r3, .L56
 575 0004 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 576              		.loc 1 447 8 view .LVU193
 577 0006 002D     		cmp	r5, #0
 578 0008 40F08380 		bne	.L48
 579 000c 0446     		mov	r4, r0
 448:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_DEL_ISR);
 449:uCOSII/Source/os_task.c ****     }
 450:uCOSII/Source/os_task.c ****     if (prio == OS_TASK_IDLE_PRIO) {                    /* Not allowed to delete idle task         
 580              		.loc 1 450 5 is_stmt 1 view .LVU194
 581              		.loc 1 450 8 is_stmt 0 view .LVU195
ARM GAS  /tmp/ccbL9Ycs.s 			page 20


 582 000e 3F28     		cmp	r0, #63
 583 0010 00F08180 		beq	.L49
 451:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_DEL_IDLE);
 452:uCOSII/Source/os_task.c ****     }
 453:uCOSII/Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
 454:uCOSII/Source/os_task.c ****     if (prio >= OS_LOWEST_PRIO) {                       /* Task priority valid ?                   
 455:uCOSII/Source/os_task.c ****         if (prio != OS_PRIO_SELF) {
 456:uCOSII/Source/os_task.c ****             return (OS_ERR_PRIO_INVALID);
 457:uCOSII/Source/os_task.c ****         }
 458:uCOSII/Source/os_task.c ****     }
 459:uCOSII/Source/os_task.c **** #endif
 460:uCOSII/Source/os_task.c **** 
 461:uCOSII/Source/os_task.c **** /*$PAGE*/
 462:uCOSII/Source/os_task.c ****     OS_ENTER_CRITICAL();
 584              		.loc 1 462 5 is_stmt 1 view .LVU196
 585 0014 FFF7FEFF 		bl	OS_CPU_SR_Save
 586              	.LVL59:
 587              		.loc 1 462 5 is_stmt 0 view .LVU197
 588 0018 0646     		mov	r6, r0
 589              	.LVL60:
 590              		.loc 1 462 24 is_stmt 1 view .LVU198
 463:uCOSII/Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                         /* See if requesting to delete self        
 591              		.loc 1 463 5 view .LVU199
 592              		.loc 1 463 8 is_stmt 0 view .LVU200
 593 001a FF2C     		cmp	r4, #255
 594 001c 61D0     		beq	.L51
 595              	.LVL61:
 596              	.L37:
 464:uCOSII/Source/os_task.c ****         prio = OSTCBCur->OSTCBPrio;                     /* Set priority to delete to current       
 465:uCOSII/Source/os_task.c ****     }
 466:uCOSII/Source/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 597              		.loc 1 466 5 is_stmt 1 view .LVU201
 598              		.loc 1 466 24 is_stmt 0 view .LVU202
 599 001e 2746     		mov	r7, r4
 600              		.loc 1 466 10 view .LVU203
 601 0020 3F4B     		ldr	r3, .L56+4
 602 0022 53F82440 		ldr	r4, [r3, r4, lsl #2]
 603              	.LVL62:
 467:uCOSII/Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                          /* Task to delete must exist               
 604              		.loc 1 467 5 is_stmt 1 view .LVU204
 605              		.loc 1 467 8 is_stmt 0 view .LVU205
 606 0026 002C     		cmp	r4, #0
 607 0028 60D0     		beq	.L52
 468:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 469:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 470:uCOSII/Source/os_task.c ****     }
 471:uCOSII/Source/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                      /* Must not be assigned to Mutex           
 608              		.loc 1 471 5 is_stmt 1 view .LVU206
 609              		.loc 1 471 8 is_stmt 0 view .LVU207
 610 002a 012C     		cmp	r4, #1
 611 002c 63D0     		beq	.L53
 472:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 473:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_DEL);
 474:uCOSII/Source/os_task.c ****     }
 475:uCOSII/Source/os_task.c **** 
 476:uCOSII/Source/os_task.c ****     OSRdyTbl[ptcb->OSTCBY] &= (OS_PRIO)~ptcb->OSTCBBitX;
 612              		.loc 1 476 5 is_stmt 1 view .LVU208
ARM GAS  /tmp/ccbL9Ycs.s 			page 21


 613              		.loc 1 476 18 is_stmt 0 view .LVU209
 614 002e 94F83820 		ldrb	r2, [r4, #56]	@ zero_extendqisi2
 615              		.loc 1 476 45 view .LVU210
 616 0032 94F83900 		ldrb	r0, [r4, #57]	@ zero_extendqisi2
 617              	.LVL63:
 618              		.loc 1 476 28 view .LVU211
 619 0036 3B49     		ldr	r1, .L56+8
 620 0038 8B5C     		ldrb	r3, [r1, r2]	@ zero_extendqisi2
 621 003a 23EA0003 		bic	r3, r3, r0
 622 003e 8B54     		strb	r3, [r1, r2]
 477:uCOSII/Source/os_task.c ****     if (OSRdyTbl[ptcb->OSTCBY] == 0u) {                 /* Make task not ready                     
 623              		.loc 1 477 5 is_stmt 1 view .LVU212
 624              		.loc 1 477 8 is_stmt 0 view .LVU213
 625 0040 33B9     		cbnz	r3, .L40
 478:uCOSII/Source/os_task.c ****         OSRdyGrp           &= (OS_PRIO)~ptcb->OSTCBBitY;
 626              		.loc 1 478 9 is_stmt 1 view .LVU214
 627              		.loc 1 478 45 is_stmt 0 view .LVU215
 628 0042 94F83A10 		ldrb	r1, [r4, #58]	@ zero_extendqisi2
 629              		.loc 1 478 28 view .LVU216
 630 0046 384A     		ldr	r2, .L56+12
 631 0048 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 632 004a 23EA0103 		bic	r3, r3, r1
 633 004e 1370     		strb	r3, [r2]
 634              	.L40:
 479:uCOSII/Source/os_task.c ****     }
 480:uCOSII/Source/os_task.c **** 
 481:uCOSII/Source/os_task.c **** #if (OS_EVENT_EN)
 482:uCOSII/Source/os_task.c ****     if (ptcb->OSTCBEventPtr != (OS_EVENT *)0) {
 635              		.loc 1 482 5 is_stmt 1 view .LVU217
 636              		.loc 1 482 13 is_stmt 0 view .LVU218
 637 0050 E169     		ldr	r1, [r4, #28]
 638              		.loc 1 482 8 view .LVU219
 639 0052 11B1     		cbz	r1, .L41
 483:uCOSII/Source/os_task.c ****         OS_EventTaskRemove(ptcb, ptcb->OSTCBEventPtr);  /* Remove this task from any event   wait l
 640              		.loc 1 483 9 is_stmt 1 view .LVU220
 641 0054 2046     		mov	r0, r4
 642 0056 FFF7FEFF 		bl	OS_EventTaskRemove
 643              	.LVL64:
 644              	.L41:
 484:uCOSII/Source/os_task.c ****     }
 485:uCOSII/Source/os_task.c **** #if (OS_EVENT_MULTI_EN > 0u)
 486:uCOSII/Source/os_task.c ****     if (ptcb->OSTCBEventMultiPtr != (OS_EVENT **)0) {   /* Remove this task from any events' wait l
 645              		.loc 1 486 5 view .LVU221
 646              		.loc 1 486 13 is_stmt 0 view .LVU222
 647 005a 216A     		ldr	r1, [r4, #32]
 648              		.loc 1 486 8 view .LVU223
 649 005c 11B1     		cbz	r1, .L42
 487:uCOSII/Source/os_task.c ****         OS_EventTaskRemoveMulti(ptcb, ptcb->OSTCBEventMultiPtr);
 650              		.loc 1 487 9 is_stmt 1 view .LVU224
 651 005e 2046     		mov	r0, r4
 652 0060 FFF7FEFF 		bl	OS_EventTaskRemoveMulti
 653              	.LVL65:
 654              	.L42:
 488:uCOSII/Source/os_task.c ****     }
 489:uCOSII/Source/os_task.c **** #endif
 490:uCOSII/Source/os_task.c **** #endif
 491:uCOSII/Source/os_task.c **** 
ARM GAS  /tmp/ccbL9Ycs.s 			page 22


 492:uCOSII/Source/os_task.c **** #if (OS_FLAG_EN > 0u) && (OS_MAX_FLAGS > 0u)
 493:uCOSII/Source/os_task.c ****     pnode = ptcb->OSTCBFlagNode;
 655              		.loc 1 493 5 view .LVU225
 656              		.loc 1 493 11 is_stmt 0 view .LVU226
 657 0064 A06A     		ldr	r0, [r4, #40]
 658              	.LVL66:
 494:uCOSII/Source/os_task.c ****     if (pnode != (OS_FLAG_NODE *)0) {                   /* If task is waiting on event flag        
 659              		.loc 1 494 5 is_stmt 1 view .LVU227
 660              		.loc 1 494 8 is_stmt 0 view .LVU228
 661 0066 08B1     		cbz	r0, .L43
 495:uCOSII/Source/os_task.c ****         OS_FlagUnlink(pnode);                           /* Remove from wait list                   
 662              		.loc 1 495 9 is_stmt 1 view .LVU229
 663 0068 FFF7FEFF 		bl	OS_FlagUnlink
 664              	.LVL67:
 665              	.L43:
 496:uCOSII/Source/os_task.c ****     }
 497:uCOSII/Source/os_task.c **** #endif
 498:uCOSII/Source/os_task.c **** 
 499:uCOSII/Source/os_task.c ****     ptcb->OSTCBDly      = 0u;                           /* Prevent OSTimeTick() from updating      
 666              		.loc 1 499 5 view .LVU230
 667              		.loc 1 499 25 is_stmt 0 view .LVU231
 668 006c 0023     		movs	r3, #0
 669 006e 2363     		str	r3, [r4, #48]
 500:uCOSII/Source/os_task.c ****     ptcb->OSTCBStat     = OS_STAT_RDY;                  /* Prevent task from being resumed         
 670              		.loc 1 500 5 is_stmt 1 view .LVU232
 671              		.loc 1 500 25 is_stmt 0 view .LVU233
 672 0070 84F83430 		strb	r3, [r4, #52]
 501:uCOSII/Source/os_task.c ****     ptcb->OSTCBStatPend = OS_STAT_PEND_OK;
 673              		.loc 1 501 5 is_stmt 1 view .LVU234
 674              		.loc 1 501 25 is_stmt 0 view .LVU235
 675 0074 84F83530 		strb	r3, [r4, #53]
 502:uCOSII/Source/os_task.c ****     if (OSLockNesting < 255u) {                         /* Make sure we don't context switch       
 676              		.loc 1 502 5 is_stmt 1 view .LVU236
 677              		.loc 1 502 23 is_stmt 0 view .LVU237
 678 0078 2C4B     		ldr	r3, .L56+16
 679 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 680              		.loc 1 502 8 view .LVU238
 681 007c FF2B     		cmp	r3, #255
 682 007e 02D0     		beq	.L44
 503:uCOSII/Source/os_task.c ****         OSLockNesting++;
 683              		.loc 1 503 9 is_stmt 1 view .LVU239
 684              		.loc 1 503 22 is_stmt 0 view .LVU240
 685 0080 0133     		adds	r3, r3, #1
 686 0082 2A4A     		ldr	r2, .L56+16
 687 0084 1370     		strb	r3, [r2]
 688              	.L44:
 504:uCOSII/Source/os_task.c ****     }
 505:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();                                 /* Enabling INT. ignores next instruc.     
 689              		.loc 1 505 5 is_stmt 1 view .LVU241
 690 0086 3046     		mov	r0, r6
 691 0088 FFF7FEFF 		bl	OS_CPU_SR_Restore
 692              	.LVL68:
 693              		.loc 1 505 23 view .LVU242
 506:uCOSII/Source/os_task.c ****     OS_Dummy();                                         /* ... Dummy ensures that INTs will be     
 694              		.loc 1 506 5 view .LVU243
 695 008c FFF7FEFF 		bl	OS_Dummy
 696              	.LVL69:
ARM GAS  /tmp/ccbL9Ycs.s 			page 23


 507:uCOSII/Source/os_task.c ****     OS_ENTER_CRITICAL();                                /* ... disabled HERE!                      
 697              		.loc 1 507 5 view .LVU244
 698 0090 FFF7FEFF 		bl	OS_CPU_SR_Save
 699              	.LVL70:
 700 0094 0646     		mov	r6, r0
 701              	.LVL71:
 702              		.loc 1 507 24 view .LVU245
 508:uCOSII/Source/os_task.c ****     if (OSLockNesting > 0u) {                           /* Remove context switch lock              
 703              		.loc 1 508 5 view .LVU246
 704              		.loc 1 508 23 is_stmt 0 view .LVU247
 705 0096 254B     		ldr	r3, .L56+16
 706 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 707              		.loc 1 508 8 view .LVU248
 708 009a 13B1     		cbz	r3, .L45
 509:uCOSII/Source/os_task.c ****         OSLockNesting--;
 709              		.loc 1 509 9 is_stmt 1 view .LVU249
 710              		.loc 1 509 22 is_stmt 0 view .LVU250
 711 009c 013B     		subs	r3, r3, #1
 712 009e 234A     		ldr	r2, .L56+16
 713 00a0 1370     		strb	r3, [r2]
 714              	.L45:
 510:uCOSII/Source/os_task.c ****     }
 511:uCOSII/Source/os_task.c ****     OSTaskDelHook(ptcb);                                /* Call user defined hook                  
 715              		.loc 1 511 5 is_stmt 1 view .LVU251
 716 00a2 2046     		mov	r0, r4
 717              	.LVL72:
 718              		.loc 1 511 5 is_stmt 0 view .LVU252
 719 00a4 FFF7FEFF 		bl	OSTaskDelHook
 720              	.LVL73:
 512:uCOSII/Source/os_task.c **** 
 513:uCOSII/Source/os_task.c **** #if OS_TASK_CREATE_EXT_EN > 0u
 514:uCOSII/Source/os_task.c **** #if defined(OS_TLS_TBL_SIZE) && (OS_TLS_TBL_SIZE > 0u)
 515:uCOSII/Source/os_task.c ****     OS_TLS_TaskDel(ptcb);                               /* Call TLS hook                           
 516:uCOSII/Source/os_task.c **** #endif
 517:uCOSII/Source/os_task.c **** #endif
 518:uCOSII/Source/os_task.c **** 
 519:uCOSII/Source/os_task.c ****     OSTaskCtr--;                                        /* One less task being managed             
 721              		.loc 1 519 5 is_stmt 1 view .LVU253
 722              		.loc 1 519 14 is_stmt 0 view .LVU254
 723 00a8 214A     		ldr	r2, .L56+20
 724 00aa 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 725 00ac 013B     		subs	r3, r3, #1
 726 00ae 1370     		strb	r3, [r2]
 520:uCOSII/Source/os_task.c ****     OSTCBPrioTbl[prio] = (OS_TCB *)0;                   /* Clear old priority entry                
 727              		.loc 1 520 5 is_stmt 1 view .LVU255
 728              		.loc 1 520 24 is_stmt 0 view .LVU256
 729 00b0 1B4B     		ldr	r3, .L56+4
 730 00b2 0022     		movs	r2, #0
 731 00b4 43F82720 		str	r2, [r3, r7, lsl #2]
 521:uCOSII/Source/os_task.c ****     if (ptcb->OSTCBPrev == (OS_TCB *)0) {               /* Remove from TCB chain                   
 732              		.loc 1 521 5 is_stmt 1 view .LVU257
 733              		.loc 1 521 13 is_stmt 0 view .LVU258
 734 00b8 A369     		ldr	r3, [r4, #24]
 735              		.loc 1 521 8 view .LVU259
 736 00ba 0BB3     		cbz	r3, .L54
 522:uCOSII/Source/os_task.c ****         ptcb->OSTCBNext->OSTCBPrev = (OS_TCB *)0;
 523:uCOSII/Source/os_task.c ****         OSTCBList                  = ptcb->OSTCBNext;
ARM GAS  /tmp/ccbL9Ycs.s 			page 24


 524:uCOSII/Source/os_task.c ****     } else {
 525:uCOSII/Source/os_task.c ****         ptcb->OSTCBPrev->OSTCBNext = ptcb->OSTCBNext;
 737              		.loc 1 525 9 is_stmt 1 view .LVU260
 738              		.loc 1 525 42 is_stmt 0 view .LVU261
 739 00bc 6269     		ldr	r2, [r4, #20]
 740              		.loc 1 525 36 view .LVU262
 741 00be 5A61     		str	r2, [r3, #20]
 526:uCOSII/Source/os_task.c ****         ptcb->OSTCBNext->OSTCBPrev = ptcb->OSTCBPrev;
 742              		.loc 1 526 9 is_stmt 1 view .LVU263
 743              		.loc 1 526 42 is_stmt 0 view .LVU264
 744 00c0 A369     		ldr	r3, [r4, #24]
 745              		.loc 1 526 36 view .LVU265
 746 00c2 9361     		str	r3, [r2, #24]
 747              	.L47:
 527:uCOSII/Source/os_task.c ****     }
 528:uCOSII/Source/os_task.c ****     ptcb->OSTCBNext     = OSTCBFreeList;                /* Return TCB to free TCB list             
 748              		.loc 1 528 5 is_stmt 1 view .LVU266
 749              		.loc 1 528 25 is_stmt 0 view .LVU267
 750 00c4 1B4B     		ldr	r3, .L56+24
 751 00c6 1A68     		ldr	r2, [r3]
 752 00c8 6261     		str	r2, [r4, #20]
 529:uCOSII/Source/os_task.c ****     OSTCBFreeList       = ptcb;
 753              		.loc 1 529 5 is_stmt 1 view .LVU268
 754              		.loc 1 529 25 is_stmt 0 view .LVU269
 755 00ca 1C60     		str	r4, [r3]
 530:uCOSII/Source/os_task.c **** #if OS_TASK_NAME_EN > 0u
 531:uCOSII/Source/os_task.c ****     ptcb->OSTCBTaskName = (INT8U *)(void *)"?";
 756              		.loc 1 531 5 is_stmt 1 view .LVU270
 757              		.loc 1 531 25 is_stmt 0 view .LVU271
 758 00cc 1A4B     		ldr	r3, .L56+28
 759 00ce 2365     		str	r3, [r4, #80]
 532:uCOSII/Source/os_task.c **** #endif
 533:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 760              		.loc 1 533 5 is_stmt 1 view .LVU272
 761 00d0 3046     		mov	r0, r6
 762 00d2 FFF7FEFF 		bl	OS_CPU_SR_Restore
 763              	.LVL74:
 764              		.loc 1 533 23 view .LVU273
 534:uCOSII/Source/os_task.c ****     if (OSRunning == OS_TRUE) {
 765              		.loc 1 534 5 view .LVU274
 766              		.loc 1 534 19 is_stmt 0 view .LVU275
 767 00d6 194B     		ldr	r3, .L56+32
 768 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 769              		.loc 1 534 8 view .LVU276
 770 00da 012B     		cmp	r3, #1
 771 00dc 16D0     		beq	.L55
 772              	.LVL75:
 773              	.L36:
 535:uCOSII/Source/os_task.c ****         OS_Sched();                                     /* Find new highest priority task          
 536:uCOSII/Source/os_task.c ****     }
 537:uCOSII/Source/os_task.c ****     return (OS_ERR_NONE);
 538:uCOSII/Source/os_task.c **** }
 774              		.loc 1 538 1 view .LVU277
 775 00de 2846     		mov	r0, r5
 776 00e0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 777              	.LVL76:
 778              	.L51:
ARM GAS  /tmp/ccbL9Ycs.s 			page 25


 464:uCOSII/Source/os_task.c ****     }
 779              		.loc 1 464 9 is_stmt 1 view .LVU278
 464:uCOSII/Source/os_task.c ****     }
 780              		.loc 1 464 24 is_stmt 0 view .LVU279
 781 00e2 174B     		ldr	r3, .L56+36
 782 00e4 1B68     		ldr	r3, [r3]
 464:uCOSII/Source/os_task.c ****     }
 783              		.loc 1 464 14 view .LVU280
 784 00e6 93F83640 		ldrb	r4, [r3, #54]	@ zero_extendqisi2
 785              	.LVL77:
 464:uCOSII/Source/os_task.c ****     }
 786              		.loc 1 464 14 view .LVU281
 787 00ea 98E7     		b	.L37
 788              	.LVL78:
 789              	.L52:
 468:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 790              		.loc 1 468 9 is_stmt 1 view .LVU282
 791 00ec 3046     		mov	r0, r6
 792              	.LVL79:
 468:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 793              		.loc 1 468 9 is_stmt 0 view .LVU283
 794 00ee FFF7FEFF 		bl	OS_CPU_SR_Restore
 795              	.LVL80:
 468:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 796              		.loc 1 468 27 is_stmt 1 view .LVU284
 469:uCOSII/Source/os_task.c ****     }
 797              		.loc 1 469 9 view .LVU285
 469:uCOSII/Source/os_task.c ****     }
 798              		.loc 1 469 16 is_stmt 0 view .LVU286
 799 00f2 4325     		movs	r5, #67
 800 00f4 F3E7     		b	.L36
 801              	.LVL81:
 802              	.L53:
 472:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_DEL);
 803              		.loc 1 472 9 is_stmt 1 view .LVU287
 804 00f6 3046     		mov	r0, r6
 805              	.LVL82:
 472:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_DEL);
 806              		.loc 1 472 9 is_stmt 0 view .LVU288
 807 00f8 FFF7FEFF 		bl	OS_CPU_SR_Restore
 808              	.LVL83:
 472:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_DEL);
 809              		.loc 1 472 27 is_stmt 1 view .LVU289
 473:uCOSII/Source/os_task.c ****     }
 810              		.loc 1 473 9 view .LVU290
 473:uCOSII/Source/os_task.c ****     }
 811              		.loc 1 473 16 is_stmt 0 view .LVU291
 812 00fc 3D25     		movs	r5, #61
 813 00fe EEE7     		b	.L36
 814              	.L54:
 522:uCOSII/Source/os_task.c ****         OSTCBList                  = ptcb->OSTCBNext;
 815              		.loc 1 522 9 is_stmt 1 view .LVU292
 522:uCOSII/Source/os_task.c ****         OSTCBList                  = ptcb->OSTCBNext;
 816              		.loc 1 522 13 is_stmt 0 view .LVU293
 817 0100 6369     		ldr	r3, [r4, #20]
 522:uCOSII/Source/os_task.c ****         OSTCBList                  = ptcb->OSTCBNext;
 818              		.loc 1 522 36 view .LVU294
ARM GAS  /tmp/ccbL9Ycs.s 			page 26


 819 0102 9A61     		str	r2, [r3, #24]
 523:uCOSII/Source/os_task.c ****     } else {
 820              		.loc 1 523 9 is_stmt 1 view .LVU295
 523:uCOSII/Source/os_task.c ****     } else {
 821              		.loc 1 523 42 is_stmt 0 view .LVU296
 822 0104 6269     		ldr	r2, [r4, #20]
 523:uCOSII/Source/os_task.c ****     } else {
 823              		.loc 1 523 36 view .LVU297
 824 0106 0F4B     		ldr	r3, .L56+40
 825 0108 1A60     		str	r2, [r3]
 826 010a DBE7     		b	.L47
 827              	.L55:
 535:uCOSII/Source/os_task.c ****     }
 828              		.loc 1 535 9 is_stmt 1 view .LVU298
 829 010c FFF7FEFF 		bl	OS_Sched
 830              	.LVL84:
 831 0110 E5E7     		b	.L36
 832              	.LVL85:
 833              	.L48:
 448:uCOSII/Source/os_task.c ****     }
 834              		.loc 1 448 16 is_stmt 0 view .LVU299
 835 0112 4025     		movs	r5, #64
 836 0114 E3E7     		b	.L36
 837              	.L49:
 451:uCOSII/Source/os_task.c ****     }
 838              		.loc 1 451 16 view .LVU300
 839 0116 3E25     		movs	r5, #62
 840 0118 E1E7     		b	.L36
 841              	.L57:
 842 011a 00BF     		.align	2
 843              	.L56:
 844 011c 00000000 		.word	OSIntNesting
 845 0120 00000000 		.word	OSTCBPrioTbl
 846 0124 00000000 		.word	OSRdyTbl
 847 0128 00000000 		.word	OSRdyGrp
 848 012c 00000000 		.word	OSLockNesting
 849 0130 00000000 		.word	OSTaskCtr
 850 0134 00000000 		.word	OSTCBFreeList
 851 0138 00000000 		.word	.LC0
 852 013c 00000000 		.word	OSRunning
 853 0140 00000000 		.word	OSTCBCur
 854 0144 00000000 		.word	OSTCBList
 855              		.cfi_endproc
 856              	.LFE3:
 858              		.section	.text.OSTaskDelReq,"ax",%progbits
 859              		.align	1
 860              		.global	OSTaskDelReq
 861              		.syntax unified
 862              		.thumb
 863              		.thumb_func
 864              		.fpu fpv4-sp-d16
 866              	OSTaskDelReq:
 867              	.LVL86:
 868              	.LFB4:
 539:uCOSII/Source/os_task.c **** #endif
 540:uCOSII/Source/os_task.c **** /*$PAGE*/
 541:uCOSII/Source/os_task.c **** /*
ARM GAS  /tmp/ccbL9Ycs.s 			page 27


 542:uCOSII/Source/os_task.c **** ***************************************************************************************************
 543:uCOSII/Source/os_task.c **** *                                  REQUEST THAT A TASK DELETE ITSELF
 544:uCOSII/Source/os_task.c **** *
 545:uCOSII/Source/os_task.c **** * Description: This function is used to:
 546:uCOSII/Source/os_task.c **** *                   a) notify a task to delete itself.
 547:uCOSII/Source/os_task.c **** *                   b) to see if a task requested that the current task delete itself.
 548:uCOSII/Source/os_task.c **** *              This function is a little tricky to understand.  Basically, you have a task that nee
 549:uCOSII/Source/os_task.c **** *              to be deleted however, this task has resources that it has allocated (memory buffers
 550:uCOSII/Source/os_task.c **** *              semaphores, mailboxes, queues etc.).  The task cannot be deleted otherwise these
 551:uCOSII/Source/os_task.c **** *              resources would not be freed.  The requesting task calls OSTaskDelReq() to indicate 
 552:uCOSII/Source/os_task.c **** *              the task needs to be deleted.  Deleting of the task is however, deferred to the task
 553:uCOSII/Source/os_task.c **** *              be deleted.  For example, suppose that task #10 needs to be deleted.  The requesting
 554:uCOSII/Source/os_task.c **** *              example, task #5, would call OSTaskDelReq(10).  When task #10 gets to execute, it ca
 555:uCOSII/Source/os_task.c **** *              this function by specifying OS_PRIO_SELF and monitors the returned value.  If the re
 556:uCOSII/Source/os_task.c **** *              value is OS_ERR_TASK_DEL_REQ, another task requested a task delete.  Task #10 would 
 557:uCOSII/Source/os_task.c **** *              this:
 558:uCOSII/Source/os_task.c **** *
 559:uCOSII/Source/os_task.c **** *                   void Task(void *p_arg)
 560:uCOSII/Source/os_task.c **** *                   {
 561:uCOSII/Source/os_task.c **** *                       .
 562:uCOSII/Source/os_task.c **** *                       .
 563:uCOSII/Source/os_task.c **** *                       while (1) {
 564:uCOSII/Source/os_task.c **** *                           OSTimeDly(1);
 565:uCOSII/Source/os_task.c **** *                           if (OSTaskDelReq(OS_PRIO_SELF) == OS_ERR_TASK_DEL_REQ) {
 566:uCOSII/Source/os_task.c **** *                               Release any owned resources;
 567:uCOSII/Source/os_task.c **** *                               De-allocate any dynamic memory;
 568:uCOSII/Source/os_task.c **** *                               OSTaskDel(OS_PRIO_SELF);
 569:uCOSII/Source/os_task.c **** *                           }
 570:uCOSII/Source/os_task.c **** *                       }
 571:uCOSII/Source/os_task.c **** *                   }
 572:uCOSII/Source/os_task.c **** *
 573:uCOSII/Source/os_task.c **** * Arguments  : prio    is the priority of the task to request the delete from
 574:uCOSII/Source/os_task.c **** *
 575:uCOSII/Source/os_task.c **** * Returns    : OS_ERR_NONE            if the task exist and the request has been registered
 576:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_NOT_EXIST  if the task has been deleted.  This allows the caller to know
 577:uCOSII/Source/os_task.c **** *                                     the request has been executed.
 578:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_DEL        if the task is assigned to a Mutex.
 579:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_DEL_IDLE   if you requested to delete uC/OS-II's idle task
 580:uCOSII/Source/os_task.c **** *              OS_ERR_PRIO_INVALID    if the priority you specify is higher that the maximum allowe
 581:uCOSII/Source/os_task.c **** *                                     (i.e. >= OS_LOWEST_PRIO) or, you have not specified OS_PRIO_S
 582:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_DEL_REQ    if a task (possibly another task) requested that the running 
 583:uCOSII/Source/os_task.c **** *                                     deleted.
 584:uCOSII/Source/os_task.c **** ***************************************************************************************************
 585:uCOSII/Source/os_task.c **** */
 586:uCOSII/Source/os_task.c **** /*$PAGE*/
 587:uCOSII/Source/os_task.c **** #if OS_TASK_DEL_EN > 0u
 588:uCOSII/Source/os_task.c **** INT8U  OSTaskDelReq (INT8U prio)
 589:uCOSII/Source/os_task.c **** {
 869              		.loc 1 589 1 is_stmt 1 view -0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873              		.loc 1 589 1 is_stmt 0 view .LVU302
 874 0000 10B5     		push	{r4, lr}
 875              	.LCFI9:
 876              		.cfi_def_cfa_offset 8
 877              		.cfi_offset 4, -8
ARM GAS  /tmp/ccbL9Ycs.s 			page 28


 878              		.cfi_offset 14, -4
 590:uCOSII/Source/os_task.c ****     INT8U      stat;
 879              		.loc 1 590 5 is_stmt 1 view .LVU303
 591:uCOSII/Source/os_task.c ****     OS_TCB    *ptcb;
 880              		.loc 1 591 5 view .LVU304
 592:uCOSII/Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 593:uCOSII/Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 881              		.loc 1 593 5 view .LVU305
 882              	.LVL87:
 594:uCOSII/Source/os_task.c **** #endif
 595:uCOSII/Source/os_task.c **** 
 596:uCOSII/Source/os_task.c **** 
 597:uCOSII/Source/os_task.c **** 
 598:uCOSII/Source/os_task.c ****     if (prio == OS_TASK_IDLE_PRIO) {                            /* Not allowed to delete idle task 
 883              		.loc 1 598 5 view .LVU306
 884              		.loc 1 598 8 is_stmt 0 view .LVU307
 885 0002 3F28     		cmp	r0, #63
 886 0004 23D0     		beq	.L63
 887 0006 0446     		mov	r4, r0
 599:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_DEL_IDLE);
 600:uCOSII/Source/os_task.c ****     }
 601:uCOSII/Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
 602:uCOSII/Source/os_task.c ****     if (prio >= OS_LOWEST_PRIO) {                               /* Task priority valid ?           
 603:uCOSII/Source/os_task.c ****         if (prio != OS_PRIO_SELF) {
 604:uCOSII/Source/os_task.c ****             return (OS_ERR_PRIO_INVALID);
 605:uCOSII/Source/os_task.c ****         }
 606:uCOSII/Source/os_task.c ****     }
 607:uCOSII/Source/os_task.c **** #endif
 608:uCOSII/Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                                 /* See if a task is requesting to .
 888              		.loc 1 608 5 is_stmt 1 view .LVU308
 889              		.loc 1 608 8 is_stmt 0 view .LVU309
 890 0008 FF28     		cmp	r0, #255
 891 000a 0FD0     		beq	.L65
 609:uCOSII/Source/os_task.c ****         OS_ENTER_CRITICAL();                                    /* ... this task to delete itself  
 610:uCOSII/Source/os_task.c ****         stat = OSTCBCur->OSTCBDelReq;                           /* Return request status to caller 
 611:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 612:uCOSII/Source/os_task.c ****         return (stat);
 613:uCOSII/Source/os_task.c ****     }
 614:uCOSII/Source/os_task.c ****     OS_ENTER_CRITICAL();
 892              		.loc 1 614 5 is_stmt 1 view .LVU310
 893 000c FFF7FEFF 		bl	OS_CPU_SR_Save
 894              	.LVL88:
 895              		.loc 1 614 24 view .LVU311
 615:uCOSII/Source/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 896              		.loc 1 615 5 view .LVU312
 897              		.loc 1 615 10 is_stmt 0 view .LVU313
 898 0010 104B     		ldr	r3, .L68
 899 0012 53F82430 		ldr	r3, [r3, r4, lsl #2]
 900              	.LVL89:
 616:uCOSII/Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                                  /* Task to delete must exist       
 901              		.loc 1 616 5 is_stmt 1 view .LVU314
 902              		.loc 1 616 8 is_stmt 0 view .LVU315
 903 0016 93B1     		cbz	r3, .L66
 617:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 618:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);                         /* Task must already be deleted    
 619:uCOSII/Source/os_task.c ****     }
 620:uCOSII/Source/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                              /* Must NOT be assigned to a Mutex 
ARM GAS  /tmp/ccbL9Ycs.s 			page 29


 904              		.loc 1 620 5 is_stmt 1 view .LVU316
 905              		.loc 1 620 8 is_stmt 0 view .LVU317
 906 0018 012B     		cmp	r3, #1
 907 001a 14D0     		beq	.L67
 621:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 622:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_DEL);
 623:uCOSII/Source/os_task.c ****     }
 624:uCOSII/Source/os_task.c ****     ptcb->OSTCBDelReq = OS_ERR_TASK_DEL_REQ;                    /* Set flag indicating task to be D
 908              		.loc 1 624 5 is_stmt 1 view .LVU318
 909              		.loc 1 624 23 is_stmt 0 view .LVU319
 910 001c 3F22     		movs	r2, #63
 911 001e 83F83B20 		strb	r2, [r3, #59]
 625:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 912              		.loc 1 625 5 is_stmt 1 view .LVU320
 913 0022 FFF7FEFF 		bl	OS_CPU_SR_Restore
 914              	.LVL90:
 915              		.loc 1 625 23 view .LVU321
 626:uCOSII/Source/os_task.c ****     return (OS_ERR_NONE);
 916              		.loc 1 626 5 view .LVU322
 917              		.loc 1 626 12 is_stmt 0 view .LVU323
 918 0026 0024     		movs	r4, #0
 919              	.L59:
 627:uCOSII/Source/os_task.c **** }
 920              		.loc 1 627 1 view .LVU324
 921 0028 2046     		mov	r0, r4
 922 002a 10BD     		pop	{r4, pc}
 923              	.LVL91:
 924              	.L65:
 609:uCOSII/Source/os_task.c ****         stat = OSTCBCur->OSTCBDelReq;                           /* Return request status to caller 
 925              		.loc 1 609 9 is_stmt 1 view .LVU325
 926 002c FFF7FEFF 		bl	OS_CPU_SR_Save
 927              	.LVL92:
 609:uCOSII/Source/os_task.c ****         stat = OSTCBCur->OSTCBDelReq;                           /* Return request status to caller 
 928              		.loc 1 609 28 view .LVU326
 610:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 929              		.loc 1 610 9 view .LVU327
 610:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 930              		.loc 1 610 24 is_stmt 0 view .LVU328
 931 0030 094B     		ldr	r3, .L68+4
 932 0032 1B68     		ldr	r3, [r3]
 610:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 933              		.loc 1 610 14 view .LVU329
 934 0034 93F83B40 		ldrb	r4, [r3, #59]	@ zero_extendqisi2
 935              	.LVL93:
 611:uCOSII/Source/os_task.c ****         return (stat);
 936              		.loc 1 611 9 is_stmt 1 view .LVU330
 937 0038 FFF7FEFF 		bl	OS_CPU_SR_Restore
 938              	.LVL94:
 611:uCOSII/Source/os_task.c ****         return (stat);
 939              		.loc 1 611 27 view .LVU331
 612:uCOSII/Source/os_task.c ****     }
 940              		.loc 1 612 9 view .LVU332
 612:uCOSII/Source/os_task.c ****     }
 941              		.loc 1 612 16 is_stmt 0 view .LVU333
 942 003c F4E7     		b	.L59
 943              	.LVL95:
 944              	.L66:
ARM GAS  /tmp/ccbL9Ycs.s 			page 30


 617:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);                         /* Task must already be deleted    
 945              		.loc 1 617 9 is_stmt 1 view .LVU334
 946 003e FFF7FEFF 		bl	OS_CPU_SR_Restore
 947              	.LVL96:
 617:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);                         /* Task must already be deleted    
 948              		.loc 1 617 27 view .LVU335
 618:uCOSII/Source/os_task.c ****     }
 949              		.loc 1 618 9 view .LVU336
 618:uCOSII/Source/os_task.c ****     }
 950              		.loc 1 618 16 is_stmt 0 view .LVU337
 951 0042 4324     		movs	r4, #67
 952 0044 F0E7     		b	.L59
 953              	.LVL97:
 954              	.L67:
 621:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_DEL);
 955              		.loc 1 621 9 is_stmt 1 view .LVU338
 956 0046 FFF7FEFF 		bl	OS_CPU_SR_Restore
 957              	.LVL98:
 621:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_DEL);
 958              		.loc 1 621 27 view .LVU339
 622:uCOSII/Source/os_task.c ****     }
 959              		.loc 1 622 9 view .LVU340
 622:uCOSII/Source/os_task.c ****     }
 960              		.loc 1 622 16 is_stmt 0 view .LVU341
 961 004a 3D24     		movs	r4, #61
 962 004c ECE7     		b	.L59
 963              	.LVL99:
 964              	.L63:
 599:uCOSII/Source/os_task.c ****     }
 965              		.loc 1 599 16 view .LVU342
 966 004e 3E24     		movs	r4, #62
 967 0050 EAE7     		b	.L59
 968              	.L69:
 969 0052 00BF     		.align	2
 970              	.L68:
 971 0054 00000000 		.word	OSTCBPrioTbl
 972 0058 00000000 		.word	OSTCBCur
 973              		.cfi_endproc
 974              	.LFE4:
 976              		.section	.text.OSTaskNameGet,"ax",%progbits
 977              		.align	1
 978              		.global	OSTaskNameGet
 979              		.syntax unified
 980              		.thumb
 981              		.thumb_func
 982              		.fpu fpv4-sp-d16
 984              	OSTaskNameGet:
 985              	.LVL100:
 986              	.LFB5:
 628:uCOSII/Source/os_task.c **** #endif
 629:uCOSII/Source/os_task.c **** /*$PAGE*/
 630:uCOSII/Source/os_task.c **** /*
 631:uCOSII/Source/os_task.c **** ***************************************************************************************************
 632:uCOSII/Source/os_task.c **** *                                       GET THE NAME OF A TASK
 633:uCOSII/Source/os_task.c **** *
 634:uCOSII/Source/os_task.c **** * Description: This function is called to obtain the name of a task.
 635:uCOSII/Source/os_task.c **** *
ARM GAS  /tmp/ccbL9Ycs.s 			page 31


 636:uCOSII/Source/os_task.c **** * Arguments  : prio      is the priority of the task that you want to obtain the name from.
 637:uCOSII/Source/os_task.c **** *
 638:uCOSII/Source/os_task.c **** *              pname     is a pointer to a pointer to an ASCII string that will receive the name of
 639:uCOSII/Source/os_task.c **** *
 640:uCOSII/Source/os_task.c **** *              perr      is a pointer to an error code that can contain one of the following values
 641:uCOSII/Source/os_task.c **** *
 642:uCOSII/Source/os_task.c **** *                        OS_ERR_NONE                if the requested task is resumed
 643:uCOSII/Source/os_task.c **** *                        OS_ERR_TASK_NOT_EXIST      if the task has not been created or is assigned
 644:uCOSII/Source/os_task.c **** *                        OS_ERR_PRIO_INVALID        if you specified an invalid priority:
 645:uCOSII/Source/os_task.c **** *                                                   A higher value than the idle task or not OS_PRI
 646:uCOSII/Source/os_task.c **** *                        OS_ERR_PNAME_NULL          You passed a NULL pointer for 'pname'
 647:uCOSII/Source/os_task.c **** *                        OS_ERR_NAME_GET_ISR        You called this function from an ISR
 648:uCOSII/Source/os_task.c **** *
 649:uCOSII/Source/os_task.c **** *
 650:uCOSII/Source/os_task.c **** * Returns    : The length of the string or 0 if the task does not exist.
 651:uCOSII/Source/os_task.c **** ***************************************************************************************************
 652:uCOSII/Source/os_task.c **** */
 653:uCOSII/Source/os_task.c **** 
 654:uCOSII/Source/os_task.c **** #if OS_TASK_NAME_EN > 0u
 655:uCOSII/Source/os_task.c **** INT8U  OSTaskNameGet (INT8U    prio,
 656:uCOSII/Source/os_task.c ****                       INT8U  **pname,
 657:uCOSII/Source/os_task.c ****                       INT8U   *perr)
 658:uCOSII/Source/os_task.c **** {
 987              		.loc 1 658 1 is_stmt 1 view -0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 0, uses_anonymous_args = 0
 991              		.loc 1 658 1 is_stmt 0 view .LVU344
 992 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 993              	.LCFI10:
 994              		.cfi_def_cfa_offset 24
 995              		.cfi_offset 4, -24
 996              		.cfi_offset 5, -20
 997              		.cfi_offset 6, -16
 998              		.cfi_offset 7, -12
 999              		.cfi_offset 8, -8
 1000              		.cfi_offset 14, -4
 1001 0004 1646     		mov	r6, r2
 659:uCOSII/Source/os_task.c ****     OS_TCB    *ptcb;
 1002              		.loc 1 659 5 is_stmt 1 view .LVU345
 660:uCOSII/Source/os_task.c ****     INT8U      len;
 1003              		.loc 1 660 5 view .LVU346
 661:uCOSII/Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                             /* Allocate storage for CPU status registe
 662:uCOSII/Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 1004              		.loc 1 662 5 view .LVU347
 1005              	.LVL101:
 663:uCOSII/Source/os_task.c **** #endif
 664:uCOSII/Source/os_task.c **** 
 665:uCOSII/Source/os_task.c **** 
 666:uCOSII/Source/os_task.c **** 
 667:uCOSII/Source/os_task.c **** #ifdef OS_SAFETY_CRITICAL
 668:uCOSII/Source/os_task.c ****     if (perr == (INT8U *)0) {
 669:uCOSII/Source/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 670:uCOSII/Source/os_task.c ****         return (0u);
 671:uCOSII/Source/os_task.c ****     }
 672:uCOSII/Source/os_task.c **** #endif
 673:uCOSII/Source/os_task.c **** 
ARM GAS  /tmp/ccbL9Ycs.s 			page 32


 674:uCOSII/Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
 675:uCOSII/Source/os_task.c ****     if (prio > OS_LOWEST_PRIO) {                         /* Task priority valid ?                  
 676:uCOSII/Source/os_task.c ****         if (prio != OS_PRIO_SELF) {
 677:uCOSII/Source/os_task.c ****             *perr = OS_ERR_PRIO_INVALID;                 /* No                                     
 678:uCOSII/Source/os_task.c ****             return (0u);
 679:uCOSII/Source/os_task.c ****         }
 680:uCOSII/Source/os_task.c ****     }
 681:uCOSII/Source/os_task.c ****     if (pname == (INT8U **)0) {                          /* Is 'pname' a NULL pointer?             
 682:uCOSII/Source/os_task.c ****         *perr = OS_ERR_PNAME_NULL;                       /* Yes                                    
 683:uCOSII/Source/os_task.c ****         return (0u);
 684:uCOSII/Source/os_task.c ****     }
 685:uCOSII/Source/os_task.c **** #endif
 686:uCOSII/Source/os_task.c ****     if (OSIntNesting > 0u) {                              /* See if trying to call from an ISR     
 1006              		.loc 1 686 5 view .LVU348
 1007              		.loc 1 686 22 is_stmt 0 view .LVU349
 1008 0006 194B     		ldr	r3, .L80
 1009 0008 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1010              		.loc 1 686 8 view .LVU350
 1011 000a 2CB1     		cbz	r4, .L71
 687:uCOSII/Source/os_task.c ****         *perr = OS_ERR_NAME_GET_ISR;
 1012              		.loc 1 687 9 is_stmt 1 view .LVU351
 1013              		.loc 1 687 15 is_stmt 0 view .LVU352
 1014 000c 1123     		movs	r3, #17
 1015 000e 1370     		strb	r3, [r2]
 688:uCOSII/Source/os_task.c ****         return (0u);
 1016              		.loc 1 688 9 is_stmt 1 view .LVU353
 1017              		.loc 1 688 16 is_stmt 0 view .LVU354
 1018 0010 0024     		movs	r4, #0
 1019              	.LVL102:
 1020              	.L72:
 689:uCOSII/Source/os_task.c ****     }
 690:uCOSII/Source/os_task.c ****     OS_ENTER_CRITICAL();
 691:uCOSII/Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                          /* See if caller desires it's own name    
 692:uCOSII/Source/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
 693:uCOSII/Source/os_task.c ****     }
 694:uCOSII/Source/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 695:uCOSII/Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                           /* Does task exist?                       
 696:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();                              /* No                                     
 697:uCOSII/Source/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 698:uCOSII/Source/os_task.c ****         return (0u);
 699:uCOSII/Source/os_task.c ****     }
 700:uCOSII/Source/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                       /* Task assigned to a Mutex?              
 701:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();                              /* Yes                                    
 702:uCOSII/Source/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 703:uCOSII/Source/os_task.c ****         return (0u);
 704:uCOSII/Source/os_task.c ****     }
 705:uCOSII/Source/os_task.c ****     *pname = ptcb->OSTCBTaskName;
 706:uCOSII/Source/os_task.c ****     len    = OS_StrLen(*pname);
 707:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 708:uCOSII/Source/os_task.c ****     *perr  = OS_ERR_NONE;
 709:uCOSII/Source/os_task.c ****     return (len);
 710:uCOSII/Source/os_task.c **** }
 1021              		.loc 1 710 1 view .LVU355
 1022 0012 2046     		mov	r0, r4
 1023 0014 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1024              	.LVL103:
 1025              	.L71:
ARM GAS  /tmp/ccbL9Ycs.s 			page 33


 1026              		.loc 1 710 1 view .LVU356
 1027 0018 0546     		mov	r5, r0
 1028 001a 0F46     		mov	r7, r1
 690:uCOSII/Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                          /* See if caller desires it's own name    
 1029              		.loc 1 690 5 is_stmt 1 view .LVU357
 1030 001c FFF7FEFF 		bl	OS_CPU_SR_Save
 1031              	.LVL104:
 690:uCOSII/Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                          /* See if caller desires it's own name    
 1032              		.loc 1 690 5 is_stmt 0 view .LVU358
 1033 0020 8046     		mov	r8, r0
 1034              	.LVL105:
 690:uCOSII/Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                          /* See if caller desires it's own name    
 1035              		.loc 1 690 24 is_stmt 1 view .LVU359
 691:uCOSII/Source/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
 1036              		.loc 1 691 5 view .LVU360
 691:uCOSII/Source/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
 1037              		.loc 1 691 8 is_stmt 0 view .LVU361
 1038 0022 FF2D     		cmp	r5, #255
 1039 0024 10D0     		beq	.L77
 1040              	.LVL106:
 1041              	.L73:
 694:uCOSII/Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                           /* Does task exist?                       
 1042              		.loc 1 694 5 is_stmt 1 view .LVU362
 694:uCOSII/Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                           /* Does task exist?                       
 1043              		.loc 1 694 10 is_stmt 0 view .LVU363
 1044 0026 124B     		ldr	r3, .L80+4
 1045 0028 53F82530 		ldr	r3, [r3, r5, lsl #2]
 1046              	.LVL107:
 695:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();                              /* No                                     
 1047              		.loc 1 695 5 is_stmt 1 view .LVU364
 695:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();                              /* No                                     
 1048              		.loc 1 695 8 is_stmt 0 view .LVU365
 1049 002c 8BB1     		cbz	r3, .L78
 700:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();                              /* Yes                                    
 1050              		.loc 1 700 5 is_stmt 1 view .LVU366
 700:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();                              /* Yes                                    
 1051              		.loc 1 700 8 is_stmt 0 view .LVU367
 1052 002e 012B     		cmp	r3, #1
 1053 0030 15D0     		beq	.L79
 705:uCOSII/Source/os_task.c ****     len    = OS_StrLen(*pname);
 1054              		.loc 1 705 5 is_stmt 1 view .LVU368
 705:uCOSII/Source/os_task.c ****     len    = OS_StrLen(*pname);
 1055              		.loc 1 705 18 is_stmt 0 view .LVU369
 1056 0032 186D     		ldr	r0, [r3, #80]
 1057              	.LVL108:
 705:uCOSII/Source/os_task.c ****     len    = OS_StrLen(*pname);
 1058              		.loc 1 705 12 view .LVU370
 1059 0034 3860     		str	r0, [r7]
 706:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 1060              		.loc 1 706 5 is_stmt 1 view .LVU371
 706:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 1061              		.loc 1 706 14 is_stmt 0 view .LVU372
 1062 0036 FFF7FEFF 		bl	OS_StrLen
 1063              	.LVL109:
 706:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 1064              		.loc 1 706 14 view .LVU373
 1065 003a 0446     		mov	r4, r0
ARM GAS  /tmp/ccbL9Ycs.s 			page 34


 1066              	.LVL110:
 707:uCOSII/Source/os_task.c ****     *perr  = OS_ERR_NONE;
 1067              		.loc 1 707 5 is_stmt 1 view .LVU374
 1068 003c 4046     		mov	r0, r8
 1069 003e FFF7FEFF 		bl	OS_CPU_SR_Restore
 1070              	.LVL111:
 707:uCOSII/Source/os_task.c ****     *perr  = OS_ERR_NONE;
 1071              		.loc 1 707 23 view .LVU375
 708:uCOSII/Source/os_task.c ****     return (len);
 1072              		.loc 1 708 5 view .LVU376
 708:uCOSII/Source/os_task.c ****     return (len);
 1073              		.loc 1 708 12 is_stmt 0 view .LVU377
 1074 0042 0023     		movs	r3, #0
 1075 0044 3370     		strb	r3, [r6]
 709:uCOSII/Source/os_task.c **** }
 1076              		.loc 1 709 5 is_stmt 1 view .LVU378
 709:uCOSII/Source/os_task.c **** }
 1077              		.loc 1 709 12 is_stmt 0 view .LVU379
 1078 0046 E4E7     		b	.L72
 1079              	.LVL112:
 1080              	.L77:
 692:uCOSII/Source/os_task.c ****     }
 1081              		.loc 1 692 9 is_stmt 1 view .LVU380
 692:uCOSII/Source/os_task.c ****     }
 1082              		.loc 1 692 24 is_stmt 0 view .LVU381
 1083 0048 0A4B     		ldr	r3, .L80+8
 1084 004a 1B68     		ldr	r3, [r3]
 692:uCOSII/Source/os_task.c ****     }
 1085              		.loc 1 692 14 view .LVU382
 1086 004c 93F83650 		ldrb	r5, [r3, #54]	@ zero_extendqisi2
 1087              	.LVL113:
 692:uCOSII/Source/os_task.c ****     }
 1088              		.loc 1 692 14 view .LVU383
 1089 0050 E9E7     		b	.L73
 1090              	.LVL114:
 1091              	.L78:
 696:uCOSII/Source/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 1092              		.loc 1 696 9 is_stmt 1 view .LVU384
 1093 0052 4046     		mov	r0, r8
 1094              	.LVL115:
 696:uCOSII/Source/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 1095              		.loc 1 696 9 is_stmt 0 view .LVU385
 1096 0054 FFF7FEFF 		bl	OS_CPU_SR_Restore
 1097              	.LVL116:
 696:uCOSII/Source/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 1098              		.loc 1 696 27 is_stmt 1 view .LVU386
 697:uCOSII/Source/os_task.c ****         return (0u);
 1099              		.loc 1 697 9 view .LVU387
 697:uCOSII/Source/os_task.c ****         return (0u);
 1100              		.loc 1 697 15 is_stmt 0 view .LVU388
 1101 0058 4323     		movs	r3, #67
 1102 005a 3370     		strb	r3, [r6]
 698:uCOSII/Source/os_task.c ****     }
 1103              		.loc 1 698 9 is_stmt 1 view .LVU389
 698:uCOSII/Source/os_task.c ****     }
 1104              		.loc 1 698 16 is_stmt 0 view .LVU390
 1105 005c D9E7     		b	.L72
ARM GAS  /tmp/ccbL9Ycs.s 			page 35


 1106              	.LVL117:
 1107              	.L79:
 701:uCOSII/Source/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 1108              		.loc 1 701 9 is_stmt 1 view .LVU391
 1109 005e 4046     		mov	r0, r8
 1110              	.LVL118:
 701:uCOSII/Source/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 1111              		.loc 1 701 9 is_stmt 0 view .LVU392
 1112 0060 FFF7FEFF 		bl	OS_CPU_SR_Restore
 1113              	.LVL119:
 701:uCOSII/Source/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 1114              		.loc 1 701 27 is_stmt 1 view .LVU393
 702:uCOSII/Source/os_task.c ****         return (0u);
 1115              		.loc 1 702 9 view .LVU394
 702:uCOSII/Source/os_task.c ****         return (0u);
 1116              		.loc 1 702 15 is_stmt 0 view .LVU395
 1117 0064 4323     		movs	r3, #67
 1118 0066 3370     		strb	r3, [r6]
 703:uCOSII/Source/os_task.c ****     }
 1119              		.loc 1 703 9 is_stmt 1 view .LVU396
 703:uCOSII/Source/os_task.c ****     }
 1120              		.loc 1 703 16 is_stmt 0 view .LVU397
 1121 0068 D3E7     		b	.L72
 1122              	.L81:
 1123 006a 00BF     		.align	2
 1124              	.L80:
 1125 006c 00000000 		.word	OSIntNesting
 1126 0070 00000000 		.word	OSTCBPrioTbl
 1127 0074 00000000 		.word	OSTCBCur
 1128              		.cfi_endproc
 1129              	.LFE5:
 1131              		.section	.text.OSTaskNameSet,"ax",%progbits
 1132              		.align	1
 1133              		.global	OSTaskNameSet
 1134              		.syntax unified
 1135              		.thumb
 1136              		.thumb_func
 1137              		.fpu fpv4-sp-d16
 1139              	OSTaskNameSet:
 1140              	.LVL120:
 1141              	.LFB6:
 711:uCOSII/Source/os_task.c **** #endif
 712:uCOSII/Source/os_task.c **** 
 713:uCOSII/Source/os_task.c **** /*$PAGE*/
 714:uCOSII/Source/os_task.c **** /*
 715:uCOSII/Source/os_task.c **** ***************************************************************************************************
 716:uCOSII/Source/os_task.c **** *                                       ASSIGN A NAME TO A TASK
 717:uCOSII/Source/os_task.c **** *
 718:uCOSII/Source/os_task.c **** * Description: This function is used to set the name of a task.
 719:uCOSII/Source/os_task.c **** *
 720:uCOSII/Source/os_task.c **** * Arguments  : prio      is the priority of the task that you want the assign a name to.
 721:uCOSII/Source/os_task.c **** *
 722:uCOSII/Source/os_task.c **** *              pname     is a pointer to an ASCII string that contains the name of the task.
 723:uCOSII/Source/os_task.c **** *
 724:uCOSII/Source/os_task.c **** *              perr       is a pointer to an error code that can contain one of the following value
 725:uCOSII/Source/os_task.c **** *
 726:uCOSII/Source/os_task.c **** *                        OS_ERR_NONE                if the requested task is resumed
ARM GAS  /tmp/ccbL9Ycs.s 			page 36


 727:uCOSII/Source/os_task.c **** *                        OS_ERR_TASK_NOT_EXIST      if the task has not been created or is assigned
 728:uCOSII/Source/os_task.c **** *                        OS_ERR_PNAME_NULL          You passed a NULL pointer for 'pname'
 729:uCOSII/Source/os_task.c **** *                        OS_ERR_PRIO_INVALID        if you specified an invalid priority:
 730:uCOSII/Source/os_task.c **** *                                                   A higher value than the idle task or not OS_PRI
 731:uCOSII/Source/os_task.c **** *                        OS_ERR_NAME_SET_ISR        if you called this function from an ISR
 732:uCOSII/Source/os_task.c **** *
 733:uCOSII/Source/os_task.c **** * Returns    : None
 734:uCOSII/Source/os_task.c **** ***************************************************************************************************
 735:uCOSII/Source/os_task.c **** */
 736:uCOSII/Source/os_task.c **** #if OS_TASK_NAME_EN > 0u
 737:uCOSII/Source/os_task.c **** void  OSTaskNameSet (INT8U   prio,
 738:uCOSII/Source/os_task.c ****                      INT8U  *pname,
 739:uCOSII/Source/os_task.c ****                      INT8U  *perr)
 740:uCOSII/Source/os_task.c **** {
 1142              		.loc 1 740 1 is_stmt 1 view -0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 0
 1145              		@ frame_needed = 0, uses_anonymous_args = 0
 1146              		.loc 1 740 1 is_stmt 0 view .LVU399
 1147 0000 70B5     		push	{r4, r5, r6, lr}
 1148              	.LCFI11:
 1149              		.cfi_def_cfa_offset 16
 1150              		.cfi_offset 4, -16
 1151              		.cfi_offset 5, -12
 1152              		.cfi_offset 6, -8
 1153              		.cfi_offset 14, -4
 1154 0002 1546     		mov	r5, r2
 741:uCOSII/Source/os_task.c ****     OS_TCB    *ptcb;
 1155              		.loc 1 741 5 is_stmt 1 view .LVU400
 742:uCOSII/Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                         /* Allocate storage for CPU status register   
 743:uCOSII/Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 1156              		.loc 1 743 5 view .LVU401
 1157              	.LVL121:
 744:uCOSII/Source/os_task.c **** #endif
 745:uCOSII/Source/os_task.c **** 
 746:uCOSII/Source/os_task.c **** 
 747:uCOSII/Source/os_task.c **** 
 748:uCOSII/Source/os_task.c **** #ifdef OS_SAFETY_CRITICAL
 749:uCOSII/Source/os_task.c ****     if (perr == (INT8U *)0) {
 750:uCOSII/Source/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 751:uCOSII/Source/os_task.c ****         return;
 752:uCOSII/Source/os_task.c ****     }
 753:uCOSII/Source/os_task.c **** #endif
 754:uCOSII/Source/os_task.c **** 
 755:uCOSII/Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
 756:uCOSII/Source/os_task.c ****     if (prio > OS_LOWEST_PRIO) {                     /* Task priority valid ?                      
 757:uCOSII/Source/os_task.c ****         if (prio != OS_PRIO_SELF) {
 758:uCOSII/Source/os_task.c ****             *perr = OS_ERR_PRIO_INVALID;             /* No                                         
 759:uCOSII/Source/os_task.c ****             return;
 760:uCOSII/Source/os_task.c ****         }
 761:uCOSII/Source/os_task.c ****     }
 762:uCOSII/Source/os_task.c ****     if (pname == (INT8U *)0) {                       /* Is 'pname' a NULL pointer?                 
 763:uCOSII/Source/os_task.c ****         *perr = OS_ERR_PNAME_NULL;                   /* Yes                                        
 764:uCOSII/Source/os_task.c ****         return;
 765:uCOSII/Source/os_task.c ****     }
 766:uCOSII/Source/os_task.c **** #endif
 767:uCOSII/Source/os_task.c ****     if (OSIntNesting > 0u) {                         /* See if trying to call from an ISR          
ARM GAS  /tmp/ccbL9Ycs.s 			page 37


 1158              		.loc 1 767 5 view .LVU402
 1159              		.loc 1 767 22 is_stmt 0 view .LVU403
 1160 0004 134B     		ldr	r3, .L92
 1161 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1162              		.loc 1 767 8 view .LVU404
 1163 0008 13B1     		cbz	r3, .L83
 768:uCOSII/Source/os_task.c ****         *perr = OS_ERR_NAME_SET_ISR;
 1164              		.loc 1 768 9 is_stmt 1 view .LVU405
 1165              		.loc 1 768 15 is_stmt 0 view .LVU406
 1166 000a 1223     		movs	r3, #18
 1167 000c 1370     		strb	r3, [r2]
 769:uCOSII/Source/os_task.c ****         return;
 1168              		.loc 1 769 9 is_stmt 1 view .LVU407
 1169              	.LVL122:
 1170              	.L82:
 770:uCOSII/Source/os_task.c ****     }
 771:uCOSII/Source/os_task.c ****     OS_ENTER_CRITICAL();
 772:uCOSII/Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                      /* See if caller desires to set it's own name 
 773:uCOSII/Source/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
 774:uCOSII/Source/os_task.c ****     }
 775:uCOSII/Source/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 776:uCOSII/Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                       /* Does task exist?                           
 777:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();                          /* No                                         
 778:uCOSII/Source/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 779:uCOSII/Source/os_task.c ****         return;
 780:uCOSII/Source/os_task.c ****     }
 781:uCOSII/Source/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                   /* Task assigned to a Mutex?                  
 782:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();                          /* Yes                                        
 783:uCOSII/Source/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 784:uCOSII/Source/os_task.c ****         return;
 785:uCOSII/Source/os_task.c ****     }
 786:uCOSII/Source/os_task.c ****     ptcb->OSTCBTaskName = pname;
 787:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 788:uCOSII/Source/os_task.c ****     *perr               = OS_ERR_NONE;
 789:uCOSII/Source/os_task.c **** }
 1171              		.loc 1 789 1 is_stmt 0 view .LVU408
 1172 000e 70BD     		pop	{r4, r5, r6, pc}
 1173              	.LVL123:
 1174              	.L83:
 1175              		.loc 1 789 1 view .LVU409
 1176 0010 0446     		mov	r4, r0
 1177 0012 0E46     		mov	r6, r1
 771:uCOSII/Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                      /* See if caller desires to set it's own name 
 1178              		.loc 1 771 5 is_stmt 1 view .LVU410
 1179 0014 FFF7FEFF 		bl	OS_CPU_SR_Save
 1180              	.LVL124:
 771:uCOSII/Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                      /* See if caller desires to set it's own name 
 1181              		.loc 1 771 24 view .LVU411
 772:uCOSII/Source/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
 1182              		.loc 1 772 5 view .LVU412
 772:uCOSII/Source/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
 1183              		.loc 1 772 8 is_stmt 0 view .LVU413
 1184 0018 FF2C     		cmp	r4, #255
 1185 001a 0BD0     		beq	.L89
 1186              	.LVL125:
 1187              	.L85:
 775:uCOSII/Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                       /* Does task exist?                           
ARM GAS  /tmp/ccbL9Ycs.s 			page 38


 1188              		.loc 1 775 5 is_stmt 1 view .LVU414
 775:uCOSII/Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                       /* Does task exist?                           
 1189              		.loc 1 775 10 is_stmt 0 view .LVU415
 1190 001c 0E4B     		ldr	r3, .L92+4
 1191 001e 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1192              	.LVL126:
 776:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();                          /* No                                         
 1193              		.loc 1 776 5 is_stmt 1 view .LVU416
 776:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();                          /* No                                         
 1194              		.loc 1 776 8 is_stmt 0 view .LVU417
 1195 0022 63B1     		cbz	r3, .L90
 781:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();                          /* Yes                                        
 1196              		.loc 1 781 5 is_stmt 1 view .LVU418
 781:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();                          /* Yes                                        
 1197              		.loc 1 781 8 is_stmt 0 view .LVU419
 1198 0024 012B     		cmp	r3, #1
 1199 0026 0FD0     		beq	.L91
 786:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 1200              		.loc 1 786 5 is_stmt 1 view .LVU420
 786:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 1201              		.loc 1 786 25 is_stmt 0 view .LVU421
 1202 0028 1E65     		str	r6, [r3, #80]
 787:uCOSII/Source/os_task.c ****     *perr               = OS_ERR_NONE;
 1203              		.loc 1 787 5 is_stmt 1 view .LVU422
 1204 002a FFF7FEFF 		bl	OS_CPU_SR_Restore
 1205              	.LVL127:
 787:uCOSII/Source/os_task.c ****     *perr               = OS_ERR_NONE;
 1206              		.loc 1 787 23 view .LVU423
 788:uCOSII/Source/os_task.c **** }
 1207              		.loc 1 788 5 view .LVU424
 788:uCOSII/Source/os_task.c **** }
 1208              		.loc 1 788 25 is_stmt 0 view .LVU425
 1209 002e 0023     		movs	r3, #0
 1210 0030 2B70     		strb	r3, [r5]
 1211 0032 ECE7     		b	.L82
 1212              	.LVL128:
 1213              	.L89:
 773:uCOSII/Source/os_task.c ****     }
 1214              		.loc 1 773 9 is_stmt 1 view .LVU426
 773:uCOSII/Source/os_task.c ****     }
 1215              		.loc 1 773 24 is_stmt 0 view .LVU427
 1216 0034 094B     		ldr	r3, .L92+8
 1217 0036 1B68     		ldr	r3, [r3]
 773:uCOSII/Source/os_task.c ****     }
 1218              		.loc 1 773 14 view .LVU428
 1219 0038 93F83640 		ldrb	r4, [r3, #54]	@ zero_extendqisi2
 1220              	.LVL129:
 773:uCOSII/Source/os_task.c ****     }
 1221              		.loc 1 773 14 view .LVU429
 1222 003c EEE7     		b	.L85
 1223              	.LVL130:
 1224              	.L90:
 777:uCOSII/Source/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 1225              		.loc 1 777 9 is_stmt 1 view .LVU430
 1226 003e FFF7FEFF 		bl	OS_CPU_SR_Restore
 1227              	.LVL131:
 777:uCOSII/Source/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
ARM GAS  /tmp/ccbL9Ycs.s 			page 39


 1228              		.loc 1 777 27 view .LVU431
 778:uCOSII/Source/os_task.c ****         return;
 1229              		.loc 1 778 9 view .LVU432
 778:uCOSII/Source/os_task.c ****         return;
 1230              		.loc 1 778 15 is_stmt 0 view .LVU433
 1231 0042 4323     		movs	r3, #67
 1232 0044 2B70     		strb	r3, [r5]
 779:uCOSII/Source/os_task.c ****     }
 1233              		.loc 1 779 9 is_stmt 1 view .LVU434
 1234 0046 E2E7     		b	.L82
 1235              	.LVL132:
 1236              	.L91:
 782:uCOSII/Source/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 1237              		.loc 1 782 9 view .LVU435
 1238 0048 FFF7FEFF 		bl	OS_CPU_SR_Restore
 1239              	.LVL133:
 782:uCOSII/Source/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 1240              		.loc 1 782 27 view .LVU436
 783:uCOSII/Source/os_task.c ****         return;
 1241              		.loc 1 783 9 view .LVU437
 783:uCOSII/Source/os_task.c ****         return;
 1242              		.loc 1 783 15 is_stmt 0 view .LVU438
 1243 004c 4323     		movs	r3, #67
 1244 004e 2B70     		strb	r3, [r5]
 784:uCOSII/Source/os_task.c ****     }
 1245              		.loc 1 784 9 is_stmt 1 view .LVU439
 1246 0050 DDE7     		b	.L82
 1247              	.L93:
 1248 0052 00BF     		.align	2
 1249              	.L92:
 1250 0054 00000000 		.word	OSIntNesting
 1251 0058 00000000 		.word	OSTCBPrioTbl
 1252 005c 00000000 		.word	OSTCBCur
 1253              		.cfi_endproc
 1254              	.LFE6:
 1256              		.section	.text.OSTaskResume,"ax",%progbits
 1257              		.align	1
 1258              		.global	OSTaskResume
 1259              		.syntax unified
 1260              		.thumb
 1261              		.thumb_func
 1262              		.fpu fpv4-sp-d16
 1264              	OSTaskResume:
 1265              	.LVL134:
 1266              	.LFB7:
 790:uCOSII/Source/os_task.c **** #endif
 791:uCOSII/Source/os_task.c **** 
 792:uCOSII/Source/os_task.c **** /*$PAGE*/
 793:uCOSII/Source/os_task.c **** /*
 794:uCOSII/Source/os_task.c **** ***************************************************************************************************
 795:uCOSII/Source/os_task.c **** *                                       RESUME A SUSPENDED TASK
 796:uCOSII/Source/os_task.c **** *
 797:uCOSII/Source/os_task.c **** * Description: This function is called to resume a previously suspended task.  This is the only cal
 798:uCOSII/Source/os_task.c **** *              will remove an explicit task suspension.
 799:uCOSII/Source/os_task.c **** *
 800:uCOSII/Source/os_task.c **** * Arguments  : prio     is the priority of the task to resume.
 801:uCOSII/Source/os_task.c **** *
ARM GAS  /tmp/ccbL9Ycs.s 			page 40


 802:uCOSII/Source/os_task.c **** * Returns    : OS_ERR_NONE                if the requested task is resumed
 803:uCOSII/Source/os_task.c **** *              OS_ERR_PRIO_INVALID        if the priority you specify is higher that the maximum al
 804:uCOSII/Source/os_task.c **** *                                         (i.e. >= OS_LOWEST_PRIO)
 805:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_RESUME_PRIO    if the task to resume does not exist
 806:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_NOT_EXIST      if the task is assigned to a Mutex PIP
 807:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_NOT_SUSPENDED  if the task to resume has not been suspended
 808:uCOSII/Source/os_task.c **** ***************************************************************************************************
 809:uCOSII/Source/os_task.c **** */
 810:uCOSII/Source/os_task.c **** 
 811:uCOSII/Source/os_task.c **** #if OS_TASK_SUSPEND_EN > 0u
 812:uCOSII/Source/os_task.c **** INT8U  OSTaskResume (INT8U prio)
 813:uCOSII/Source/os_task.c **** {
 1267              		.loc 1 813 1 view -0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271              		.loc 1 813 1 is_stmt 0 view .LVU441
 1272 0000 10B5     		push	{r4, lr}
 1273              	.LCFI12:
 1274              		.cfi_def_cfa_offset 8
 1275              		.cfi_offset 4, -8
 1276              		.cfi_offset 14, -4
 1277 0002 0446     		mov	r4, r0
 814:uCOSII/Source/os_task.c ****     OS_TCB    *ptcb;
 1278              		.loc 1 814 5 is_stmt 1 view .LVU442
 815:uCOSII/Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                                  /* Storage for CPU status register   
 816:uCOSII/Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 1279              		.loc 1 816 5 view .LVU443
 1280              	.LVL135:
 817:uCOSII/Source/os_task.c **** #endif
 818:uCOSII/Source/os_task.c **** 
 819:uCOSII/Source/os_task.c **** 
 820:uCOSII/Source/os_task.c **** 
 821:uCOSII/Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
 822:uCOSII/Source/os_task.c ****     if (prio >= OS_LOWEST_PRIO) {                             /* Make sure task priority is valid  
 823:uCOSII/Source/os_task.c ****         return (OS_ERR_PRIO_INVALID);
 824:uCOSII/Source/os_task.c ****     }
 825:uCOSII/Source/os_task.c **** #endif
 826:uCOSII/Source/os_task.c ****     OS_ENTER_CRITICAL();
 1281              		.loc 1 826 5 view .LVU444
 1282 0004 FFF7FEFF 		bl	OS_CPU_SR_Save
 1283              	.LVL136:
 1284              		.loc 1 826 24 view .LVU445
 827:uCOSII/Source/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 1285              		.loc 1 827 5 view .LVU446
 1286              		.loc 1 827 10 is_stmt 0 view .LVU447
 1287 0008 1E4B     		ldr	r3, .L105
 1288 000a 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1289              	.LVL137:
 828:uCOSII/Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                                /* Task to suspend must exist        
 1290              		.loc 1 828 5 is_stmt 1 view .LVU448
 1291              		.loc 1 828 8 is_stmt 0 view .LVU449
 1292 000e 33B3     		cbz	r3, .L103
 829:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 830:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_RESUME_PRIO);
 831:uCOSII/Source/os_task.c ****     }
 832:uCOSII/Source/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                            /* See if assigned to Mutex          
ARM GAS  /tmp/ccbL9Ycs.s 			page 41


 1293              		.loc 1 832 5 is_stmt 1 view .LVU450
 1294              		.loc 1 832 8 is_stmt 0 view .LVU451
 1295 0010 012B     		cmp	r3, #1
 1296 0012 28D0     		beq	.L104
 833:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 834:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 835:uCOSII/Source/os_task.c ****     }
 836:uCOSII/Source/os_task.c ****     if ((ptcb->OSTCBStat & OS_STAT_SUSPEND) != OS_STAT_RDY) { /* Task must be suspended            
 1297              		.loc 1 836 5 is_stmt 1 view .LVU452
 1298              		.loc 1 836 14 is_stmt 0 view .LVU453
 1299 0014 93F83420 		ldrb	r2, [r3, #52]	@ zero_extendqisi2
 1300              		.loc 1 836 8 view .LVU454
 1301 0018 12F0080F 		tst	r2, #8
 1302 001c 2ED0     		beq	.L98
 837:uCOSII/Source/os_task.c ****         ptcb->OSTCBStat &= (INT8U)~(INT8U)OS_STAT_SUSPEND;    /* Remove suspension                 
 1303              		.loc 1 837 9 is_stmt 1 view .LVU455
 1304              		.loc 1 837 25 is_stmt 0 view .LVU456
 1305 001e 02F0F702 		and	r2, r2, #247
 1306 0022 83F83420 		strb	r2, [r3, #52]
 838:uCOSII/Source/os_task.c ****         if ((ptcb->OSTCBStat & OS_STAT_PEND_ANY) == OS_STAT_RDY) { /* See if task is now ready     
 1307              		.loc 1 838 9 is_stmt 1 view .LVU457
 1308              		.loc 1 838 12 is_stmt 0 view .LVU458
 1309 0026 12F0370F 		tst	r2, #55
 1310 002a 24D1     		bne	.L99
 839:uCOSII/Source/os_task.c ****             if (ptcb->OSTCBDly == 0u) {
 1311              		.loc 1 839 13 is_stmt 1 view .LVU459
 1312              		.loc 1 839 21 is_stmt 0 view .LVU460
 1313 002c 1A6B     		ldr	r2, [r3, #48]
 1314              		.loc 1 839 16 view .LVU461
 1315 002e F2B9     		cbnz	r2, .L100
 840:uCOSII/Source/os_task.c ****                 OSRdyGrp               |= ptcb->OSTCBBitY;    /* Yes, Make task ready to run       
 1316              		.loc 1 840 17 is_stmt 1 view .LVU462
 1317              		.loc 1 840 47 is_stmt 0 view .LVU463
 1318 0030 93F83A20 		ldrb	r2, [r3, #58]	@ zero_extendqisi2
 1319              		.loc 1 840 40 view .LVU464
 1320 0034 1449     		ldr	r1, .L105+4
 1321 0036 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 1322 0038 2243     		orrs	r2, r2, r4
 1323 003a 0A70     		strb	r2, [r1]
 841:uCOSII/Source/os_task.c ****                 OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
 1324              		.loc 1 841 17 is_stmt 1 view .LVU465
 1325              		.loc 1 841 30 is_stmt 0 view .LVU466
 1326 003c 93F83820 		ldrb	r2, [r3, #56]	@ zero_extendqisi2
 1327              		.loc 1 841 47 view .LVU467
 1328 0040 93F83930 		ldrb	r3, [r3, #57]	@ zero_extendqisi2
 1329              	.LVL138:
 1330              		.loc 1 841 40 view .LVU468
 1331 0044 1149     		ldr	r1, .L105+8
 1332 0046 8C5C     		ldrb	r4, [r1, r2]	@ zero_extendqisi2
 1333 0048 2343     		orrs	r3, r3, r4
 1334 004a 8B54     		strb	r3, [r1, r2]
 842:uCOSII/Source/os_task.c ****                 OS_EXIT_CRITICAL();
 1335              		.loc 1 842 17 is_stmt 1 view .LVU469
 1336 004c FFF7FEFF 		bl	OS_CPU_SR_Restore
 1337              	.LVL139:
 1338              		.loc 1 842 35 view .LVU470
 843:uCOSII/Source/os_task.c ****                 if (OSRunning == OS_TRUE) {
ARM GAS  /tmp/ccbL9Ycs.s 			page 42


 1339              		.loc 1 843 17 view .LVU471
 1340              		.loc 1 843 31 is_stmt 0 view .LVU472
 1341 0050 0F4B     		ldr	r3, .L105+12
 1342 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1343              		.loc 1 843 20 view .LVU473
 1344 0054 012B     		cmp	r3, #1
 1345 0056 0CD1     		bne	.L101
 844:uCOSII/Source/os_task.c ****                     OS_Sched();                               /* Find new highest priority task    
 1346              		.loc 1 844 21 is_stmt 1 view .LVU474
 1347 0058 FFF7FEFF 		bl	OS_Sched
 1348              	.LVL140:
 1349 005c 09E0     		b	.L101
 1350              	.LVL141:
 1351              	.L103:
 829:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_RESUME_PRIO);
 1352              		.loc 1 829 9 view .LVU475
 1353 005e FFF7FEFF 		bl	OS_CPU_SR_Restore
 1354              	.LVL142:
 829:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_RESUME_PRIO);
 1355              		.loc 1 829 27 view .LVU476
 830:uCOSII/Source/os_task.c ****     }
 1356              		.loc 1 830 9 view .LVU477
 830:uCOSII/Source/os_task.c ****     }
 1357              		.loc 1 830 16 is_stmt 0 view .LVU478
 1358 0062 4620     		movs	r0, #70
 1359 0064 06E0     		b	.L96
 1360              	.LVL143:
 1361              	.L104:
 833:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 1362              		.loc 1 833 9 is_stmt 1 view .LVU479
 1363 0066 FFF7FEFF 		bl	OS_CPU_SR_Restore
 1364              	.LVL144:
 833:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 1365              		.loc 1 833 27 view .LVU480
 834:uCOSII/Source/os_task.c ****     }
 1366              		.loc 1 834 9 view .LVU481
 834:uCOSII/Source/os_task.c ****     }
 1367              		.loc 1 834 16 is_stmt 0 view .LVU482
 1368 006a 4320     		movs	r0, #67
 1369 006c 02E0     		b	.L96
 1370              	.LVL145:
 1371              	.L100:
 845:uCOSII/Source/os_task.c ****                 }
 846:uCOSII/Source/os_task.c ****             } else {
 847:uCOSII/Source/os_task.c ****                 OS_EXIT_CRITICAL();
 1372              		.loc 1 847 17 is_stmt 1 discriminator 1 view .LVU483
 1373 006e FFF7FEFF 		bl	OS_CPU_SR_Restore
 1374              	.LVL146:
 1375              	.L101:
 848:uCOSII/Source/os_task.c ****             }
 849:uCOSII/Source/os_task.c ****         } else {                                              /* Must be pending on event          
 850:uCOSII/Source/os_task.c ****             OS_EXIT_CRITICAL();
 1376              		.loc 1 850 31 discriminator 1 view .LVU484
 851:uCOSII/Source/os_task.c ****         }
 852:uCOSII/Source/os_task.c ****         return (OS_ERR_NONE);
 1377              		.loc 1 852 9 discriminator 1 view .LVU485
 1378              		.loc 1 852 16 is_stmt 0 discriminator 1 view .LVU486
ARM GAS  /tmp/ccbL9Ycs.s 			page 43


 1379 0072 0020     		movs	r0, #0
 1380              	.L96:
 853:uCOSII/Source/os_task.c ****     }
 854:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 855:uCOSII/Source/os_task.c ****     return (OS_ERR_TASK_NOT_SUSPENDED);
 856:uCOSII/Source/os_task.c **** }
 1381              		.loc 1 856 1 view .LVU487
 1382 0074 10BD     		pop	{r4, pc}
 1383              	.LVL147:
 1384              	.L99:
 850:uCOSII/Source/os_task.c ****         }
 1385              		.loc 1 850 13 is_stmt 1 view .LVU488
 1386 0076 FFF7FEFF 		bl	OS_CPU_SR_Restore
 1387              	.LVL148:
 850:uCOSII/Source/os_task.c ****         }
 1388              		.loc 1 850 13 is_stmt 0 view .LVU489
 1389 007a FAE7     		b	.L101
 1390              	.LVL149:
 1391              	.L98:
 854:uCOSII/Source/os_task.c ****     return (OS_ERR_TASK_NOT_SUSPENDED);
 1392              		.loc 1 854 5 is_stmt 1 view .LVU490
 1393 007c FFF7FEFF 		bl	OS_CPU_SR_Restore
 1394              	.LVL150:
 854:uCOSII/Source/os_task.c ****     return (OS_ERR_TASK_NOT_SUSPENDED);
 1395              		.loc 1 854 23 view .LVU491
 855:uCOSII/Source/os_task.c **** }
 1396              		.loc 1 855 5 view .LVU492
 855:uCOSII/Source/os_task.c **** }
 1397              		.loc 1 855 12 is_stmt 0 view .LVU493
 1398 0080 4420     		movs	r0, #68
 1399 0082 F7E7     		b	.L96
 1400              	.L106:
 1401              		.align	2
 1402              	.L105:
 1403 0084 00000000 		.word	OSTCBPrioTbl
 1404 0088 00000000 		.word	OSRdyGrp
 1405 008c 00000000 		.word	OSRdyTbl
 1406 0090 00000000 		.word	OSRunning
 1407              		.cfi_endproc
 1408              	.LFE7:
 1410              		.section	.text.OSTaskStkChk,"ax",%progbits
 1411              		.align	1
 1412              		.global	OSTaskStkChk
 1413              		.syntax unified
 1414              		.thumb
 1415              		.thumb_func
 1416              		.fpu fpv4-sp-d16
 1418              	OSTaskStkChk:
 1419              	.LVL151:
 1420              	.LFB8:
 857:uCOSII/Source/os_task.c **** #endif
 858:uCOSII/Source/os_task.c **** /*$PAGE*/
 859:uCOSII/Source/os_task.c **** /*
 860:uCOSII/Source/os_task.c **** ***************************************************************************************************
 861:uCOSII/Source/os_task.c **** *                                           STACK CHECKING
 862:uCOSII/Source/os_task.c **** *
 863:uCOSII/Source/os_task.c **** * Description: This function is called to check the amount of free memory left on the specified tas
ARM GAS  /tmp/ccbL9Ycs.s 			page 44


 864:uCOSII/Source/os_task.c **** *              stack.
 865:uCOSII/Source/os_task.c **** *
 866:uCOSII/Source/os_task.c **** * Arguments  : prio          is the task priority
 867:uCOSII/Source/os_task.c **** *
 868:uCOSII/Source/os_task.c **** *              p_stk_data    is a pointer to a data structure of type OS_STK_DATA.
 869:uCOSII/Source/os_task.c **** *
 870:uCOSII/Source/os_task.c **** * Returns    : OS_ERR_NONE            upon success
 871:uCOSII/Source/os_task.c **** *              OS_ERR_PRIO_INVALID    if the priority you specify is higher that the maximum allowe
 872:uCOSII/Source/os_task.c **** *                                     (i.e. > OS_LOWEST_PRIO) or, you have not specified OS_PRIO_SE
 873:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_NOT_EXIST  if the desired task has not been created or is assigned to a 
 874:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_OPT        if you did NOT specified OS_TASK_OPT_STK_CHK when the task wa
 875:uCOSII/Source/os_task.c **** *              OS_ERR_PDATA_NULL      if 'p_stk_data' is a NULL pointer
 876:uCOSII/Source/os_task.c **** ***************************************************************************************************
 877:uCOSII/Source/os_task.c **** */
 878:uCOSII/Source/os_task.c **** #if (OS_TASK_STAT_STK_CHK_EN > 0u) && (OS_TASK_CREATE_EXT_EN > 0u)
 879:uCOSII/Source/os_task.c **** INT8U  OSTaskStkChk (INT8U         prio,
 880:uCOSII/Source/os_task.c ****                      OS_STK_DATA  *p_stk_data)
 881:uCOSII/Source/os_task.c **** {
 1421              		.loc 1 881 1 is_stmt 1 view -0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 1425              		.loc 1 881 1 is_stmt 0 view .LVU495
 1426 0000 70B5     		push	{r4, r5, r6, lr}
 1427              	.LCFI13:
 1428              		.cfi_def_cfa_offset 16
 1429              		.cfi_offset 4, -16
 1430              		.cfi_offset 5, -12
 1431              		.cfi_offset 6, -8
 1432              		.cfi_offset 14, -4
 1433 0002 0446     		mov	r4, r0
 1434 0004 0D46     		mov	r5, r1
 882:uCOSII/Source/os_task.c ****     OS_TCB    *ptcb;
 1435              		.loc 1 882 5 is_stmt 1 view .LVU496
 883:uCOSII/Source/os_task.c ****     OS_STK    *pchk;
 1436              		.loc 1 883 5 view .LVU497
 884:uCOSII/Source/os_task.c ****     INT32U     nfree;
 1437              		.loc 1 884 5 view .LVU498
 885:uCOSII/Source/os_task.c ****     INT32U     size;
 1438              		.loc 1 885 5 view .LVU499
 886:uCOSII/Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                           /* Allocate storage for CPU status register 
 887:uCOSII/Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 1439              		.loc 1 887 5 view .LVU500
 1440              	.LVL152:
 888:uCOSII/Source/os_task.c **** #endif
 889:uCOSII/Source/os_task.c **** 
 890:uCOSII/Source/os_task.c **** 
 891:uCOSII/Source/os_task.c **** 
 892:uCOSII/Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
 893:uCOSII/Source/os_task.c ****     if (prio > OS_LOWEST_PRIO) {                       /* Make sure task priority is valid         
 894:uCOSII/Source/os_task.c ****         if (prio != OS_PRIO_SELF) {
 895:uCOSII/Source/os_task.c ****             return (OS_ERR_PRIO_INVALID);
 896:uCOSII/Source/os_task.c ****         }
 897:uCOSII/Source/os_task.c ****     }
 898:uCOSII/Source/os_task.c ****     if (p_stk_data == (OS_STK_DATA *)0) {              /* Validate 'p_stk_data'                    
 899:uCOSII/Source/os_task.c ****         return (OS_ERR_PDATA_NULL);
 900:uCOSII/Source/os_task.c ****     }
ARM GAS  /tmp/ccbL9Ycs.s 			page 45


 901:uCOSII/Source/os_task.c **** #endif
 902:uCOSII/Source/os_task.c ****     p_stk_data->OSFree = 0u;                           /* Assume failure, set to 0 size            
 1441              		.loc 1 902 5 view .LVU501
 1442              		.loc 1 902 24 is_stmt 0 view .LVU502
 1443 0006 0023     		movs	r3, #0
 1444 0008 0B60     		str	r3, [r1]
 903:uCOSII/Source/os_task.c ****     p_stk_data->OSUsed = 0u;
 1445              		.loc 1 903 5 is_stmt 1 view .LVU503
 1446              		.loc 1 903 24 is_stmt 0 view .LVU504
 1447 000a 4B60     		str	r3, [r1, #4]
 904:uCOSII/Source/os_task.c ****     OS_ENTER_CRITICAL();
 1448              		.loc 1 904 5 is_stmt 1 view .LVU505
 1449 000c FFF7FEFF 		bl	OS_CPU_SR_Save
 1450              	.LVL153:
 1451              		.loc 1 904 24 view .LVU506
 905:uCOSII/Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                        /* See if check for SELF                    
 1452              		.loc 1 905 5 view .LVU507
 1453              		.loc 1 905 8 is_stmt 0 view .LVU508
 1454 0010 FF2C     		cmp	r4, #255
 1455 0012 0FD0     		beq	.L116
 1456              	.LVL154:
 1457              	.L108:
 906:uCOSII/Source/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
 907:uCOSII/Source/os_task.c ****     }
 908:uCOSII/Source/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 1458              		.loc 1 908 5 is_stmt 1 view .LVU509
 1459              		.loc 1 908 10 is_stmt 0 view .LVU510
 1460 0014 164B     		ldr	r3, .L120
 1461 0016 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1462              	.LVL155:
 909:uCOSII/Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                         /* Make sure task exist                     
 1463              		.loc 1 909 5 is_stmt 1 view .LVU511
 1464              		.loc 1 909 8 is_stmt 0 view .LVU512
 1465 001a 83B1     		cbz	r3, .L117
 910:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 911:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 912:uCOSII/Source/os_task.c ****     }
 913:uCOSII/Source/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {
 1466              		.loc 1 913 5 is_stmt 1 view .LVU513
 1467              		.loc 1 913 8 is_stmt 0 view .LVU514
 1468 001c 012B     		cmp	r3, #1
 1469 001e 12D0     		beq	.L118
 914:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 915:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 916:uCOSII/Source/os_task.c ****     }
 917:uCOSII/Source/os_task.c ****     if ((ptcb->OSTCBOpt & OS_TASK_OPT_STK_CHK) == 0u) { /* Make sure stack checking option is set  
 1470              		.loc 1 917 5 is_stmt 1 view .LVU515
 1471              		.loc 1 917 14 is_stmt 0 view .LVU516
 1472 0020 1A8A     		ldrh	r2, [r3, #16]
 1473              		.loc 1 917 8 view .LVU517
 1474 0022 12F0010F 		tst	r2, #1
 1475 0026 12D0     		beq	.L119
 918:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 919:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_OPT);
 920:uCOSII/Source/os_task.c ****     }
 921:uCOSII/Source/os_task.c ****     nfree = 0u;
 1476              		.loc 1 921 5 is_stmt 1 view .LVU518
ARM GAS  /tmp/ccbL9Ycs.s 			page 46


 1477              	.LVL156:
 922:uCOSII/Source/os_task.c ****     size  = ptcb->OSTCBStkSize;
 1478              		.loc 1 922 5 view .LVU519
 1479              		.loc 1 922 11 is_stmt 0 view .LVU520
 1480 0028 DE68     		ldr	r6, [r3, #12]
 1481              	.LVL157:
 923:uCOSII/Source/os_task.c ****     pchk  = ptcb->OSTCBStkBottom;
 1482              		.loc 1 923 5 is_stmt 1 view .LVU521
 1483              		.loc 1 923 11 is_stmt 0 view .LVU522
 1484 002a 9C68     		ldr	r4, [r3, #8]
 1485              	.LVL158:
 924:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 1486              		.loc 1 924 5 is_stmt 1 view .LVU523
 1487 002c FFF7FEFF 		bl	OS_CPU_SR_Restore
 1488              	.LVL159:
 1489              		.loc 1 924 23 view .LVU524
 925:uCOSII/Source/os_task.c **** #if OS_STK_GROWTH == 1u
 926:uCOSII/Source/os_task.c ****     while (*pchk++ == (OS_STK)0) {                    /* Compute the number of zero entries on the 
 1490              		.loc 1 926 5 view .LVU525
 921:uCOSII/Source/os_task.c ****     size  = ptcb->OSTCBStkSize;
 1491              		.loc 1 921 11 is_stmt 0 view .LVU526
 1492 0030 0022     		movs	r2, #0
 1493              		.loc 1 926 11 view .LVU527
 1494 0032 12E0     		b	.L113
 1495              	.LVL160:
 1496              	.L116:
 906:uCOSII/Source/os_task.c ****     }
 1497              		.loc 1 906 9 is_stmt 1 view .LVU528
 906:uCOSII/Source/os_task.c ****     }
 1498              		.loc 1 906 24 is_stmt 0 view .LVU529
 1499 0034 0F4B     		ldr	r3, .L120+4
 1500 0036 1B68     		ldr	r3, [r3]
 906:uCOSII/Source/os_task.c ****     }
 1501              		.loc 1 906 14 view .LVU530
 1502 0038 93F83640 		ldrb	r4, [r3, #54]	@ zero_extendqisi2
 1503              	.LVL161:
 906:uCOSII/Source/os_task.c ****     }
 1504              		.loc 1 906 14 view .LVU531
 1505 003c EAE7     		b	.L108
 1506              	.LVL162:
 1507              	.L117:
 910:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 1508              		.loc 1 910 9 is_stmt 1 view .LVU532
 1509 003e FFF7FEFF 		bl	OS_CPU_SR_Restore
 1510              	.LVL163:
 910:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 1511              		.loc 1 910 27 view .LVU533
 911:uCOSII/Source/os_task.c ****     }
 1512              		.loc 1 911 9 view .LVU534
 911:uCOSII/Source/os_task.c ****     }
 1513              		.loc 1 911 16 is_stmt 0 view .LVU535
 1514 0042 4320     		movs	r0, #67
 1515 0044 12E0     		b	.L110
 1516              	.LVL164:
 1517              	.L118:
 914:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 1518              		.loc 1 914 9 is_stmt 1 view .LVU536
ARM GAS  /tmp/ccbL9Ycs.s 			page 47


 1519 0046 FFF7FEFF 		bl	OS_CPU_SR_Restore
 1520              	.LVL165:
 914:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 1521              		.loc 1 914 27 view .LVU537
 915:uCOSII/Source/os_task.c ****     }
 1522              		.loc 1 915 9 view .LVU538
 915:uCOSII/Source/os_task.c ****     }
 1523              		.loc 1 915 16 is_stmt 0 view .LVU539
 1524 004a 4320     		movs	r0, #67
 1525 004c 0EE0     		b	.L110
 1526              	.LVL166:
 1527              	.L119:
 918:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_OPT);
 1528              		.loc 1 918 9 is_stmt 1 view .LVU540
 1529 004e FFF7FEFF 		bl	OS_CPU_SR_Restore
 1530              	.LVL167:
 918:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_OPT);
 1531              		.loc 1 918 27 view .LVU541
 919:uCOSII/Source/os_task.c ****     }
 1532              		.loc 1 919 9 view .LVU542
 919:uCOSII/Source/os_task.c ****     }
 1533              		.loc 1 919 16 is_stmt 0 view .LVU543
 1534 0052 4520     		movs	r0, #69
 1535 0054 0AE0     		b	.L110
 1536              	.LVL168:
 1537              	.L114:
 927:uCOSII/Source/os_task.c ****         nfree++;
 1538              		.loc 1 927 9 is_stmt 1 view .LVU544
 1539              		.loc 1 927 14 is_stmt 0 view .LVU545
 1540 0056 0132     		adds	r2, r2, #1
 1541              	.LVL169:
 926:uCOSII/Source/os_task.c ****         nfree++;
 1542              		.loc 1 926 17 view .LVU546
 1543 0058 1C46     		mov	r4, r3
 1544              	.LVL170:
 1545              	.L113:
 926:uCOSII/Source/os_task.c ****         nfree++;
 1546              		.loc 1 926 11 is_stmt 1 view .LVU547
 926:uCOSII/Source/os_task.c ****         nfree++;
 1547              		.loc 1 926 17 is_stmt 0 view .LVU548
 1548 005a 2346     		mov	r3, r4
 1549              	.LVL171:
 926:uCOSII/Source/os_task.c ****         nfree++;
 1550              		.loc 1 926 12 view .LVU549
 1551 005c 53F8040B 		ldr	r0, [r3], #4
 1552              	.LVL172:
 926:uCOSII/Source/os_task.c ****         nfree++;
 1553              		.loc 1 926 11 view .LVU550
 1554 0060 0028     		cmp	r0, #0
 1555 0062 F8D0     		beq	.L114
 928:uCOSII/Source/os_task.c ****     }
 929:uCOSII/Source/os_task.c **** #else
 930:uCOSII/Source/os_task.c ****     while (*pchk-- == (OS_STK)0) {
 931:uCOSII/Source/os_task.c ****         nfree++;
 932:uCOSII/Source/os_task.c ****     }
 933:uCOSII/Source/os_task.c **** #endif
 934:uCOSII/Source/os_task.c ****     p_stk_data->OSFree = nfree;                       /* Store   number of free entries on the stk 
ARM GAS  /tmp/ccbL9Ycs.s 			page 48


 1556              		.loc 1 934 5 is_stmt 1 view .LVU551
 1557              		.loc 1 934 24 is_stmt 0 view .LVU552
 1558 0064 2A60     		str	r2, [r5]
 935:uCOSII/Source/os_task.c ****     p_stk_data->OSUsed = size - nfree;                /* Compute number of entries used on the stk 
 1559              		.loc 1 935 5 is_stmt 1 view .LVU553
 1560              		.loc 1 935 31 is_stmt 0 view .LVU554
 1561 0066 B21A     		subs	r2, r6, r2
 1562              	.LVL173:
 1563              		.loc 1 935 24 view .LVU555
 1564 0068 6A60     		str	r2, [r5, #4]
 936:uCOSII/Source/os_task.c ****     return (OS_ERR_NONE);
 1565              		.loc 1 936 5 is_stmt 1 view .LVU556
 1566              		.loc 1 936 12 is_stmt 0 view .LVU557
 1567 006a 0020     		movs	r0, #0
 1568              	.LVL174:
 1569              	.L110:
 937:uCOSII/Source/os_task.c **** }
 1570              		.loc 1 937 1 view .LVU558
 1571 006c 70BD     		pop	{r4, r5, r6, pc}
 1572              	.LVL175:
 1573              	.L121:
 1574              		.loc 1 937 1 view .LVU559
 1575 006e 00BF     		.align	2
 1576              	.L120:
 1577 0070 00000000 		.word	OSTCBPrioTbl
 1578 0074 00000000 		.word	OSTCBCur
 1579              		.cfi_endproc
 1580              	.LFE8:
 1582              		.section	.text.OSTaskSuspend,"ax",%progbits
 1583              		.align	1
 1584              		.global	OSTaskSuspend
 1585              		.syntax unified
 1586              		.thumb
 1587              		.thumb_func
 1588              		.fpu fpv4-sp-d16
 1590              	OSTaskSuspend:
 1591              	.LVL176:
 1592              	.LFB9:
 938:uCOSII/Source/os_task.c **** #endif
 939:uCOSII/Source/os_task.c **** /*$PAGE*/
 940:uCOSII/Source/os_task.c **** /*
 941:uCOSII/Source/os_task.c **** ***************************************************************************************************
 942:uCOSII/Source/os_task.c **** *                                           SUSPEND A TASK
 943:uCOSII/Source/os_task.c **** *
 944:uCOSII/Source/os_task.c **** * Description: This function is called to suspend a task.  The task can be the calling task if the
 945:uCOSII/Source/os_task.c **** *              priority passed to OSTaskSuspend() is the priority of the calling task or OS_PRIO_SE
 946:uCOSII/Source/os_task.c **** *
 947:uCOSII/Source/os_task.c **** * Arguments  : prio     is the priority of the task to suspend.  If you specify OS_PRIO_SELF, the
 948:uCOSII/Source/os_task.c **** *                       calling task will suspend itself and rescheduling will occur.
 949:uCOSII/Source/os_task.c **** *
 950:uCOSII/Source/os_task.c **** * Returns    : OS_ERR_NONE               if the requested task is suspended
 951:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_SUSPEND_IDLE  if you attempted to suspend the idle task which is not all
 952:uCOSII/Source/os_task.c **** *              OS_ERR_PRIO_INVALID       if the priority you specify is higher that the maximum all
 953:uCOSII/Source/os_task.c **** *                                        (i.e. >= OS_LOWEST_PRIO) or, you have not specified OS_PRI
 954:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_SUSPEND_PRIO  if the task to suspend does not exist
 955:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_NOT_EXITS     if the task is assigned to a Mutex PIP
 956:uCOSII/Source/os_task.c **** *
ARM GAS  /tmp/ccbL9Ycs.s 			page 49


 957:uCOSII/Source/os_task.c **** * Note       : You should use this function with great care.  If you suspend a task that is waiting
 958:uCOSII/Source/os_task.c **** *              an event (i.e. a message, a semaphore, a queue ...) you will prevent this task from
 959:uCOSII/Source/os_task.c **** *              running when the event arrives.
 960:uCOSII/Source/os_task.c **** ***************************************************************************************************
 961:uCOSII/Source/os_task.c **** */
 962:uCOSII/Source/os_task.c **** 
 963:uCOSII/Source/os_task.c **** #if OS_TASK_SUSPEND_EN > 0u
 964:uCOSII/Source/os_task.c **** INT8U  OSTaskSuspend (INT8U prio)
 965:uCOSII/Source/os_task.c **** {
 1593              		.loc 1 965 1 is_stmt 1 view -0
 1594              		.cfi_startproc
 1595              		@ args = 0, pretend = 0, frame = 0
 1596              		@ frame_needed = 0, uses_anonymous_args = 0
 1597              		.loc 1 965 1 is_stmt 0 view .LVU561
 1598 0000 70B5     		push	{r4, r5, r6, lr}
 1599              	.LCFI14:
 1600              		.cfi_def_cfa_offset 16
 1601              		.cfi_offset 4, -16
 1602              		.cfi_offset 5, -12
 1603              		.cfi_offset 6, -8
 1604              		.cfi_offset 14, -4
 1605 0002 0446     		mov	r4, r0
 966:uCOSII/Source/os_task.c ****     BOOLEAN    self;
 1606              		.loc 1 966 5 is_stmt 1 view .LVU562
 967:uCOSII/Source/os_task.c ****     OS_TCB    *ptcb;
 1607              		.loc 1 967 5 view .LVU563
 968:uCOSII/Source/os_task.c ****     INT8U      y;
 1608              		.loc 1 968 5 view .LVU564
 969:uCOSII/Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 970:uCOSII/Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 1609              		.loc 1 970 5 view .LVU565
 1610              	.LVL177:
 971:uCOSII/Source/os_task.c **** #endif
 972:uCOSII/Source/os_task.c **** 
 973:uCOSII/Source/os_task.c **** 
 974:uCOSII/Source/os_task.c **** 
 975:uCOSII/Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
 976:uCOSII/Source/os_task.c ****     if (prio == OS_TASK_IDLE_PRIO) {                            /* Not allowed to suspend idle task
 977:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_SUSPEND_IDLE);
 978:uCOSII/Source/os_task.c ****     }
 979:uCOSII/Source/os_task.c ****     if (prio >= OS_LOWEST_PRIO) {                               /* Task priority valid ?           
 980:uCOSII/Source/os_task.c ****         if (prio != OS_PRIO_SELF) {
 981:uCOSII/Source/os_task.c ****             return (OS_ERR_PRIO_INVALID);
 982:uCOSII/Source/os_task.c ****         }
 983:uCOSII/Source/os_task.c ****     }
 984:uCOSII/Source/os_task.c **** #endif
 985:uCOSII/Source/os_task.c ****     OS_ENTER_CRITICAL();
 1611              		.loc 1 985 5 view .LVU566
 1612 0004 FFF7FEFF 		bl	OS_CPU_SR_Save
 1613              	.LVL178:
 1614              		.loc 1 985 24 view .LVU567
 986:uCOSII/Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                                 /* See if suspend SELF             
 1615              		.loc 1 986 5 view .LVU568
 1616              		.loc 1 986 8 is_stmt 0 view .LVU569
 1617 0008 FF2C     		cmp	r4, #255
 1618 000a 29D0     		beq	.L131
 987:uCOSII/Source/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
ARM GAS  /tmp/ccbL9Ycs.s 			page 50


 988:uCOSII/Source/os_task.c ****         self = OS_TRUE;
 989:uCOSII/Source/os_task.c ****     } else if (prio == OSTCBCur->OSTCBPrio) {                   /* See if suspending self          
 1619              		.loc 1 989 12 is_stmt 1 view .LVU570
 1620              		.loc 1 989 32 is_stmt 0 view .LVU571
 1621 000c 1E4B     		ldr	r3, .L136
 1622 000e 1B68     		ldr	r3, [r3]
 1623 0010 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 1624              		.loc 1 989 15 view .LVU572
 1625 0014 A342     		cmp	r3, r4
 1626 0016 29D0     		beq	.L132
 990:uCOSII/Source/os_task.c ****         self = OS_TRUE;
 991:uCOSII/Source/os_task.c ****     } else {
 992:uCOSII/Source/os_task.c ****         self = OS_FALSE;                                        /* No suspending another task      
 1627              		.loc 1 992 14 view .LVU573
 1628 0018 0025     		movs	r5, #0
 1629              	.LVL179:
 1630              	.L124:
 993:uCOSII/Source/os_task.c ****     }
 994:uCOSII/Source/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 1631              		.loc 1 994 5 is_stmt 1 view .LVU574
 1632              		.loc 1 994 10 is_stmt 0 view .LVU575
 1633 001a 1C4B     		ldr	r3, .L136+4
 1634 001c 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1635              	.LVL180:
 995:uCOSII/Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                                  /* Task to suspend must exist      
 1636              		.loc 1 995 5 is_stmt 1 view .LVU576
 1637              		.loc 1 995 8 is_stmt 0 view .LVU577
 1638 0020 33B3     		cbz	r3, .L133
 996:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 997:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_SUSPEND_PRIO);
 998:uCOSII/Source/os_task.c ****     }
 999:uCOSII/Source/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                              /* See if assigned to Mutex        
 1639              		.loc 1 999 5 is_stmt 1 view .LVU578
 1640              		.loc 1 999 8 is_stmt 0 view .LVU579
 1641 0022 012B     		cmp	r3, #1
 1642 0024 28D0     		beq	.L134
1000:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
1001:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
1002:uCOSII/Source/os_task.c ****     }
1003:uCOSII/Source/os_task.c ****     y            = ptcb->OSTCBY;
 1643              		.loc 1 1003 5 is_stmt 1 view .LVU580
 1644              		.loc 1 1003 18 is_stmt 0 view .LVU581
 1645 0026 93F83810 		ldrb	r1, [r3, #56]	@ zero_extendqisi2
 1646              	.LVL181:
1004:uCOSII/Source/os_task.c ****     OSRdyTbl[y] &= (OS_PRIO)~ptcb->OSTCBBitX;                   /* Make task not ready             
 1647              		.loc 1 1004 5 is_stmt 1 view .LVU582
 1648              		.loc 1 1004 34 is_stmt 0 view .LVU583
 1649 002a 93F83960 		ldrb	r6, [r3, #57]	@ zero_extendqisi2
 1650              		.loc 1 1004 17 view .LVU584
 1651 002e 184C     		ldr	r4, .L136+8
 1652              	.LVL182:
 1653              		.loc 1 1004 17 view .LVU585
 1654 0030 625C     		ldrb	r2, [r4, r1]	@ zero_extendqisi2
 1655 0032 22EA0602 		bic	r2, r2, r6
 1656 0036 6254     		strb	r2, [r4, r1]
1005:uCOSII/Source/os_task.c ****     if (OSRdyTbl[y] == 0u) {
 1657              		.loc 1 1005 5 is_stmt 1 view .LVU586
ARM GAS  /tmp/ccbL9Ycs.s 			page 51


 1658              		.loc 1 1005 8 is_stmt 0 view .LVU587
 1659 0038 32B9     		cbnz	r2, .L128
1006:uCOSII/Source/os_task.c ****         OSRdyGrp &= (OS_PRIO)~ptcb->OSTCBBitY;
 1660              		.loc 1 1006 9 is_stmt 1 view .LVU588
 1661              		.loc 1 1006 35 is_stmt 0 view .LVU589
 1662 003a 93F83A40 		ldrb	r4, [r3, #58]	@ zero_extendqisi2
 1663              		.loc 1 1006 18 view .LVU590
 1664 003e 1549     		ldr	r1, .L136+12
 1665              	.LVL183:
 1666              		.loc 1 1006 18 view .LVU591
 1667 0040 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1668 0042 22EA0402 		bic	r2, r2, r4
 1669 0046 0A70     		strb	r2, [r1]
 1670              	.L128:
1007:uCOSII/Source/os_task.c ****     }
1008:uCOSII/Source/os_task.c ****     ptcb->OSTCBStat |= OS_STAT_SUSPEND;                         /* Status of task is 'SUSPENDED'   
 1671              		.loc 1 1008 5 is_stmt 1 view .LVU592
 1672              		.loc 1 1008 21 is_stmt 0 view .LVU593
 1673 0048 93F83420 		ldrb	r2, [r3, #52]	@ zero_extendqisi2
 1674 004c 42F00802 		orr	r2, r2, #8
 1675 0050 83F83420 		strb	r2, [r3, #52]
1009:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 1676              		.loc 1 1009 5 is_stmt 1 view .LVU594
 1677 0054 FFF7FEFF 		bl	OS_CPU_SR_Restore
 1678              	.LVL184:
 1679              		.loc 1 1009 23 view .LVU595
1010:uCOSII/Source/os_task.c ****     if (self == OS_TRUE) {                                      /* Context switch only if SELF     
 1680              		.loc 1 1010 5 view .LVU596
 1681              		.loc 1 1010 8 is_stmt 0 view .LVU597
 1682 0058 012D     		cmp	r5, #1
 1683 005a 11D0     		beq	.L135
 1684              	.LVL185:
 1685              	.L126:
1011:uCOSII/Source/os_task.c ****         OS_Sched();                                             /* Find new highest priority task  
1012:uCOSII/Source/os_task.c ****     }
1013:uCOSII/Source/os_task.c ****     return (OS_ERR_NONE);
1014:uCOSII/Source/os_task.c **** }
 1686              		.loc 1 1014 1 view .LVU598
 1687 005c 2846     		mov	r0, r5
 1688 005e 70BD     		pop	{r4, r5, r6, pc}
 1689              	.LVL186:
 1690              	.L131:
 987:uCOSII/Source/os_task.c ****         self = OS_TRUE;
 1691              		.loc 1 987 9 is_stmt 1 view .LVU599
 987:uCOSII/Source/os_task.c ****         self = OS_TRUE;
 1692              		.loc 1 987 24 is_stmt 0 view .LVU600
 1693 0060 094B     		ldr	r3, .L136
 1694 0062 1B68     		ldr	r3, [r3]
 987:uCOSII/Source/os_task.c ****         self = OS_TRUE;
 1695              		.loc 1 987 14 view .LVU601
 1696 0064 93F83640 		ldrb	r4, [r3, #54]	@ zero_extendqisi2
 1697              	.LVL187:
 988:uCOSII/Source/os_task.c ****     } else if (prio == OSTCBCur->OSTCBPrio) {                   /* See if suspending self          
 1698              		.loc 1 988 9 is_stmt 1 view .LVU602
 988:uCOSII/Source/os_task.c ****     } else if (prio == OSTCBCur->OSTCBPrio) {                   /* See if suspending self          
 1699              		.loc 1 988 14 is_stmt 0 view .LVU603
 1700 0068 0125     		movs	r5, #1
ARM GAS  /tmp/ccbL9Ycs.s 			page 52


 1701 006a D6E7     		b	.L124
 1702              	.LVL188:
 1703              	.L132:
 990:uCOSII/Source/os_task.c ****     } else {
 1704              		.loc 1 990 14 view .LVU604
 1705 006c 0125     		movs	r5, #1
 1706 006e D4E7     		b	.L124
 1707              	.LVL189:
 1708              	.L133:
 996:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_SUSPEND_PRIO);
 1709              		.loc 1 996 9 is_stmt 1 view .LVU605
 1710 0070 FFF7FEFF 		bl	OS_CPU_SR_Restore
 1711              	.LVL190:
 996:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_SUSPEND_PRIO);
 1712              		.loc 1 996 27 view .LVU606
 997:uCOSII/Source/os_task.c ****     }
 1713              		.loc 1 997 9 view .LVU607
 997:uCOSII/Source/os_task.c ****     }
 1714              		.loc 1 997 16 is_stmt 0 view .LVU608
 1715 0074 4825     		movs	r5, #72
 1716              	.LVL191:
 997:uCOSII/Source/os_task.c ****     }
 1717              		.loc 1 997 16 view .LVU609
 1718 0076 F1E7     		b	.L126
 1719              	.LVL192:
 1720              	.L134:
1000:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 1721              		.loc 1 1000 9 is_stmt 1 view .LVU610
 1722 0078 FFF7FEFF 		bl	OS_CPU_SR_Restore
 1723              	.LVL193:
1000:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 1724              		.loc 1 1000 27 view .LVU611
1001:uCOSII/Source/os_task.c ****     }
 1725              		.loc 1 1001 9 view .LVU612
1001:uCOSII/Source/os_task.c ****     }
 1726              		.loc 1 1001 16 is_stmt 0 view .LVU613
 1727 007c 4325     		movs	r5, #67
 1728              	.LVL194:
1001:uCOSII/Source/os_task.c ****     }
 1729              		.loc 1 1001 16 view .LVU614
 1730 007e EDE7     		b	.L126
 1731              	.LVL195:
 1732              	.L135:
1011:uCOSII/Source/os_task.c ****     }
 1733              		.loc 1 1011 9 is_stmt 1 view .LVU615
 1734 0080 FFF7FEFF 		bl	OS_Sched
 1735              	.LVL196:
1013:uCOSII/Source/os_task.c **** }
 1736              		.loc 1 1013 12 is_stmt 0 view .LVU616
 1737 0084 0025     		movs	r5, #0
 1738              	.LVL197:
1013:uCOSII/Source/os_task.c **** }
 1739              		.loc 1 1013 12 view .LVU617
 1740 0086 E9E7     		b	.L126
 1741              	.L137:
 1742              		.align	2
 1743              	.L136:
ARM GAS  /tmp/ccbL9Ycs.s 			page 53


 1744 0088 00000000 		.word	OSTCBCur
 1745 008c 00000000 		.word	OSTCBPrioTbl
 1746 0090 00000000 		.word	OSRdyTbl
 1747 0094 00000000 		.word	OSRdyGrp
 1748              		.cfi_endproc
 1749              	.LFE9:
 1751              		.section	.text.OSTaskQuery,"ax",%progbits
 1752              		.align	1
 1753              		.global	OSTaskQuery
 1754              		.syntax unified
 1755              		.thumb
 1756              		.thumb_func
 1757              		.fpu fpv4-sp-d16
 1759              	OSTaskQuery:
 1760              	.LVL198:
 1761              	.LFB10:
1015:uCOSII/Source/os_task.c **** #endif
1016:uCOSII/Source/os_task.c **** /*$PAGE*/
1017:uCOSII/Source/os_task.c **** /*
1018:uCOSII/Source/os_task.c **** ***************************************************************************************************
1019:uCOSII/Source/os_task.c **** *                                            QUERY A TASK
1020:uCOSII/Source/os_task.c **** *
1021:uCOSII/Source/os_task.c **** * Description: This function is called to obtain a copy of the desired task's TCB.
1022:uCOSII/Source/os_task.c **** *
1023:uCOSII/Source/os_task.c **** * Arguments  : prio         is the priority of the task to obtain information from.
1024:uCOSII/Source/os_task.c **** *
1025:uCOSII/Source/os_task.c **** *              p_task_data  is a pointer to where the desired task's OS_TCB will be stored.
1026:uCOSII/Source/os_task.c **** *
1027:uCOSII/Source/os_task.c **** * Returns    : OS_ERR_NONE            if the requested task is suspended
1028:uCOSII/Source/os_task.c **** *              OS_ERR_PRIO_INVALID    if the priority you specify is higher that the maximum allowe
1029:uCOSII/Source/os_task.c **** *                                     (i.e. > OS_LOWEST_PRIO) or, you have not specified OS_PRIO_SE
1030:uCOSII/Source/os_task.c **** *              OS_ERR_PRIO            if the desired task has not been created
1031:uCOSII/Source/os_task.c **** *              OS_ERR_TASK_NOT_EXIST  if the task is assigned to a Mutex PIP
1032:uCOSII/Source/os_task.c **** *              OS_ERR_PDATA_NULL      if 'p_task_data' is a NULL pointer
1033:uCOSII/Source/os_task.c **** ***************************************************************************************************
1034:uCOSII/Source/os_task.c **** */
1035:uCOSII/Source/os_task.c **** 
1036:uCOSII/Source/os_task.c **** #if OS_TASK_QUERY_EN > 0u
1037:uCOSII/Source/os_task.c **** INT8U  OSTaskQuery (INT8U    prio,
1038:uCOSII/Source/os_task.c ****                     OS_TCB  *p_task_data)
1039:uCOSII/Source/os_task.c **** {
 1762              		.loc 1 1039 1 is_stmt 1 view -0
 1763              		.cfi_startproc
 1764              		@ args = 0, pretend = 0, frame = 0
 1765              		@ frame_needed = 0, uses_anonymous_args = 0
 1766              		.loc 1 1039 1 is_stmt 0 view .LVU619
 1767 0000 70B5     		push	{r4, r5, r6, lr}
 1768              	.LCFI15:
 1769              		.cfi_def_cfa_offset 16
 1770              		.cfi_offset 4, -16
 1771              		.cfi_offset 5, -12
 1772              		.cfi_offset 6, -8
 1773              		.cfi_offset 14, -4
 1774 0002 0446     		mov	r4, r0
 1775 0004 0E46     		mov	r6, r1
1040:uCOSII/Source/os_task.c ****     OS_TCB    *ptcb;
 1776              		.loc 1 1040 5 is_stmt 1 view .LVU620
ARM GAS  /tmp/ccbL9Ycs.s 			page 54


1041:uCOSII/Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
1042:uCOSII/Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 1777              		.loc 1 1042 5 view .LVU621
 1778              	.LVL199:
1043:uCOSII/Source/os_task.c **** #endif
1044:uCOSII/Source/os_task.c **** 
1045:uCOSII/Source/os_task.c **** 
1046:uCOSII/Source/os_task.c **** 
1047:uCOSII/Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
1048:uCOSII/Source/os_task.c ****     if (prio > OS_LOWEST_PRIO) {                 /* Task priority valid ?                          
1049:uCOSII/Source/os_task.c ****         if (prio != OS_PRIO_SELF) {
1050:uCOSII/Source/os_task.c ****             return (OS_ERR_PRIO_INVALID);
1051:uCOSII/Source/os_task.c ****         }
1052:uCOSII/Source/os_task.c ****     }
1053:uCOSII/Source/os_task.c ****     if (p_task_data == (OS_TCB *)0) {            /* Validate 'p_task_data'                         
1054:uCOSII/Source/os_task.c ****         return (OS_ERR_PDATA_NULL);
1055:uCOSII/Source/os_task.c ****     }
1056:uCOSII/Source/os_task.c **** #endif
1057:uCOSII/Source/os_task.c ****     OS_ENTER_CRITICAL();
 1779              		.loc 1 1057 5 view .LVU622
 1780 0006 FFF7FEFF 		bl	OS_CPU_SR_Save
 1781              	.LVL200:
 1782              		.loc 1 1057 5 is_stmt 0 view .LVU623
 1783 000a 0546     		mov	r5, r0
 1784              	.LVL201:
 1785              		.loc 1 1057 24 is_stmt 1 view .LVU624
1058:uCOSII/Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                  /* See if suspend SELF                            
 1786              		.loc 1 1058 5 view .LVU625
 1787              		.loc 1 1058 8 is_stmt 0 view .LVU626
 1788 000c FF2C     		cmp	r4, #255
 1789 000e 0ED0     		beq	.L144
 1790              	.LVL202:
 1791              	.L139:
1059:uCOSII/Source/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
1060:uCOSII/Source/os_task.c ****     }
1061:uCOSII/Source/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 1792              		.loc 1 1061 5 is_stmt 1 view .LVU627
 1793              		.loc 1 1061 10 is_stmt 0 view .LVU628
 1794 0010 0E4B     		ldr	r3, .L147
 1795 0012 53F82410 		ldr	r1, [r3, r4, lsl #2]
 1796              	.LVL203:
1062:uCOSII/Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                   /* Task to query must exist                       
 1797              		.loc 1 1062 5 is_stmt 1 view .LVU629
 1798              		.loc 1 1062 8 is_stmt 0 view .LVU630
 1799 0016 79B1     		cbz	r1, .L145
1063:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
1064:uCOSII/Source/os_task.c ****         return (OS_ERR_PRIO);
1065:uCOSII/Source/os_task.c ****     }
1066:uCOSII/Source/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {               /* Task to query must not be assigned to a Mutex  
 1800              		.loc 1 1066 5 is_stmt 1 view .LVU631
 1801              		.loc 1 1066 8 is_stmt 0 view .LVU632
 1802 0018 0129     		cmp	r1, #1
 1803 001a 12D0     		beq	.L146
1067:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
1068:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
1069:uCOSII/Source/os_task.c ****     }
1070:uCOSII/Source/os_task.c ****                                                  /* Copy TCB into user storage area                
ARM GAS  /tmp/ccbL9Ycs.s 			page 55


1071:uCOSII/Source/os_task.c ****     OS_MemCopy((INT8U *)p_task_data, (INT8U *)ptcb, sizeof(OS_TCB));
 1804              		.loc 1 1071 5 is_stmt 1 view .LVU633
 1805 001c 5822     		movs	r2, #88
 1806 001e 3046     		mov	r0, r6
 1807              	.LVL204:
 1808              		.loc 1 1071 5 is_stmt 0 view .LVU634
 1809 0020 FFF7FEFF 		bl	OS_MemCopy
 1810              	.LVL205:
1072:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 1811              		.loc 1 1072 5 is_stmt 1 view .LVU635
 1812 0024 2846     		mov	r0, r5
 1813 0026 FFF7FEFF 		bl	OS_CPU_SR_Restore
 1814              	.LVL206:
 1815              		.loc 1 1072 23 view .LVU636
1073:uCOSII/Source/os_task.c ****     return (OS_ERR_NONE);
 1816              		.loc 1 1073 5 view .LVU637
 1817              		.loc 1 1073 12 is_stmt 0 view .LVU638
 1818 002a 0020     		movs	r0, #0
 1819              	.L141:
1074:uCOSII/Source/os_task.c **** }
 1820              		.loc 1 1074 1 view .LVU639
 1821 002c 70BD     		pop	{r4, r5, r6, pc}
 1822              	.LVL207:
 1823              	.L144:
1059:uCOSII/Source/os_task.c ****     }
 1824              		.loc 1 1059 9 is_stmt 1 view .LVU640
1059:uCOSII/Source/os_task.c ****     }
 1825              		.loc 1 1059 24 is_stmt 0 view .LVU641
 1826 002e 084B     		ldr	r3, .L147+4
 1827 0030 1B68     		ldr	r3, [r3]
1059:uCOSII/Source/os_task.c ****     }
 1828              		.loc 1 1059 14 view .LVU642
 1829 0032 93F83640 		ldrb	r4, [r3, #54]	@ zero_extendqisi2
 1830              	.LVL208:
1059:uCOSII/Source/os_task.c ****     }
 1831              		.loc 1 1059 14 view .LVU643
 1832 0036 EBE7     		b	.L139
 1833              	.LVL209:
 1834              	.L145:
1063:uCOSII/Source/os_task.c ****         return (OS_ERR_PRIO);
 1835              		.loc 1 1063 9 is_stmt 1 view .LVU644
 1836 0038 2846     		mov	r0, r5
 1837              	.LVL210:
1063:uCOSII/Source/os_task.c ****         return (OS_ERR_PRIO);
 1838              		.loc 1 1063 9 is_stmt 0 view .LVU645
 1839 003a FFF7FEFF 		bl	OS_CPU_SR_Restore
 1840              	.LVL211:
1063:uCOSII/Source/os_task.c ****         return (OS_ERR_PRIO);
 1841              		.loc 1 1063 27 is_stmt 1 view .LVU646
1064:uCOSII/Source/os_task.c ****     }
 1842              		.loc 1 1064 9 view .LVU647
1064:uCOSII/Source/os_task.c ****     }
 1843              		.loc 1 1064 16 is_stmt 0 view .LVU648
 1844 003e 2920     		movs	r0, #41
 1845 0040 F4E7     		b	.L141
 1846              	.LVL212:
 1847              	.L146:
ARM GAS  /tmp/ccbL9Ycs.s 			page 56


1067:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 1848              		.loc 1 1067 9 is_stmt 1 view .LVU649
 1849 0042 2846     		mov	r0, r5
 1850              	.LVL213:
1067:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 1851              		.loc 1 1067 9 is_stmt 0 view .LVU650
 1852 0044 FFF7FEFF 		bl	OS_CPU_SR_Restore
 1853              	.LVL214:
1067:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 1854              		.loc 1 1067 27 is_stmt 1 view .LVU651
1068:uCOSII/Source/os_task.c ****     }
 1855              		.loc 1 1068 9 view .LVU652
1068:uCOSII/Source/os_task.c ****     }
 1856              		.loc 1 1068 16 is_stmt 0 view .LVU653
 1857 0048 4320     		movs	r0, #67
 1858 004a EFE7     		b	.L141
 1859              	.L148:
 1860              		.align	2
 1861              	.L147:
 1862 004c 00000000 		.word	OSTCBPrioTbl
 1863 0050 00000000 		.word	OSTCBCur
 1864              		.cfi_endproc
 1865              	.LFE10:
 1867              		.section	.text.OSTaskRegGet,"ax",%progbits
 1868              		.align	1
 1869              		.global	OSTaskRegGet
 1870              		.syntax unified
 1871              		.thumb
 1872              		.thumb_func
 1873              		.fpu fpv4-sp-d16
 1875              	OSTaskRegGet:
 1876              	.LVL215:
 1877              	.LFB11:
1075:uCOSII/Source/os_task.c **** #endif
1076:uCOSII/Source/os_task.c **** /*$PAGE*/
1077:uCOSII/Source/os_task.c **** /*
1078:uCOSII/Source/os_task.c **** ***************************************************************************************************
1079:uCOSII/Source/os_task.c **** *                              GET THE CURRENT VALUE OF A TASK REGISTER
1080:uCOSII/Source/os_task.c **** *
1081:uCOSII/Source/os_task.c **** * Description: This function is called to obtain the current value of a task register.  Task regist
1082:uCOSII/Source/os_task.c **** *              are application specific and can be used to store task specific values such as 'erro
1083:uCOSII/Source/os_task.c **** *              numbers' (i.e. errno), statistics, etc.  Each task register can hold a 32-bit value.
1084:uCOSII/Source/os_task.c **** *
1085:uCOSII/Source/os_task.c **** * Arguments  : prio      is the priority of the task you want to get the task register from.  If yo
1086:uCOSII/Source/os_task.c **** *                        specify OS_PRIO_SELF then the task register of the current task will be ob
1087:uCOSII/Source/os_task.c **** *
1088:uCOSII/Source/os_task.c **** *              id        is the 'id' of the desired task register.  Note that the 'id' must be less
1089:uCOSII/Source/os_task.c **** *                        than OS_TASK_REG_TBL_SIZE
1090:uCOSII/Source/os_task.c **** *
1091:uCOSII/Source/os_task.c **** *              perr      is a pointer to a variable that will hold an error code related to this ca
1092:uCOSII/Source/os_task.c **** *
1093:uCOSII/Source/os_task.c **** *                        OS_ERR_NONE            if the call was successful
1094:uCOSII/Source/os_task.c **** *                        OS_ERR_PRIO_INVALID    if you specified an invalid priority
1095:uCOSII/Source/os_task.c **** *                        OS_ERR_ID_INVALID      if the 'id' is not between 0 and OS_TASK_REG_TBL_SI
1096:uCOSII/Source/os_task.c **** *
1097:uCOSII/Source/os_task.c **** * Returns    : The current value of the task's register or 0 if an error is detected.
1098:uCOSII/Source/os_task.c **** *
ARM GAS  /tmp/ccbL9Ycs.s 			page 57


1099:uCOSII/Source/os_task.c **** * Note(s)    : The maximum number of task variables is 254
1100:uCOSII/Source/os_task.c **** ***************************************************************************************************
1101:uCOSII/Source/os_task.c **** */
1102:uCOSII/Source/os_task.c **** 
1103:uCOSII/Source/os_task.c **** #if OS_TASK_REG_TBL_SIZE > 0u
1104:uCOSII/Source/os_task.c **** INT32U  OSTaskRegGet (INT8U   prio,
1105:uCOSII/Source/os_task.c ****                       INT8U   id,
1106:uCOSII/Source/os_task.c ****                       INT8U  *perr)
1107:uCOSII/Source/os_task.c **** {
 1878              		.loc 1 1107 1 is_stmt 1 view -0
 1879              		.cfi_startproc
 1880              		@ args = 0, pretend = 0, frame = 0
 1881              		@ frame_needed = 0, uses_anonymous_args = 0
 1882              		.loc 1 1107 1 is_stmt 0 view .LVU655
 1883 0000 70B5     		push	{r4, r5, r6, lr}
 1884              	.LCFI16:
 1885              		.cfi_def_cfa_offset 16
 1886              		.cfi_offset 4, -16
 1887              		.cfi_offset 5, -12
 1888              		.cfi_offset 6, -8
 1889              		.cfi_offset 14, -4
 1890 0002 0546     		mov	r5, r0
 1891 0004 0C46     		mov	r4, r1
 1892 0006 1646     		mov	r6, r2
1108:uCOSII/Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
1109:uCOSII/Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 1893              		.loc 1 1109 5 is_stmt 1 view .LVU656
 1894              	.LVL216:
1110:uCOSII/Source/os_task.c **** #endif
1111:uCOSII/Source/os_task.c ****     INT32U     value;
 1895              		.loc 1 1111 5 view .LVU657
1112:uCOSII/Source/os_task.c ****     OS_TCB    *ptcb;
 1896              		.loc 1 1112 5 view .LVU658
1113:uCOSII/Source/os_task.c **** 
1114:uCOSII/Source/os_task.c **** 
1115:uCOSII/Source/os_task.c **** 
1116:uCOSII/Source/os_task.c **** #ifdef OS_SAFETY_CRITICAL
1117:uCOSII/Source/os_task.c ****     if (perr == (INT8U *)0) {
1118:uCOSII/Source/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1119:uCOSII/Source/os_task.c ****         return (0u);
1120:uCOSII/Source/os_task.c ****     }
1121:uCOSII/Source/os_task.c **** #endif
1122:uCOSII/Source/os_task.c **** 
1123:uCOSII/Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
1124:uCOSII/Source/os_task.c ****     if (prio >= OS_LOWEST_PRIO) {
1125:uCOSII/Source/os_task.c ****         if (prio != OS_PRIO_SELF) {
1126:uCOSII/Source/os_task.c ****             *perr = OS_ERR_PRIO_INVALID;
1127:uCOSII/Source/os_task.c ****             return (0u);
1128:uCOSII/Source/os_task.c ****         }
1129:uCOSII/Source/os_task.c ****     }
1130:uCOSII/Source/os_task.c ****     if (id >= OS_TASK_REG_TBL_SIZE) {
1131:uCOSII/Source/os_task.c ****         *perr = OS_ERR_ID_INVALID;
1132:uCOSII/Source/os_task.c ****         return (0u);
1133:uCOSII/Source/os_task.c ****     }
1134:uCOSII/Source/os_task.c **** #endif
1135:uCOSII/Source/os_task.c ****     OS_ENTER_CRITICAL();
 1897              		.loc 1 1135 5 view .LVU659
ARM GAS  /tmp/ccbL9Ycs.s 			page 58


 1898 0008 FFF7FEFF 		bl	OS_CPU_SR_Save
 1899              	.LVL217:
 1900              		.loc 1 1135 24 view .LVU660
1136:uCOSII/Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                  /* See if need to get register from current task  
 1901              		.loc 1 1136 5 view .LVU661
 1902              		.loc 1 1136 8 is_stmt 0 view .LVU662
 1903 000c FF2D     		cmp	r5, #255
 1904 000e 0CD0     		beq	.L153
1137:uCOSII/Source/os_task.c ****         ptcb = OSTCBCur;
1138:uCOSII/Source/os_task.c ****     } else {
1139:uCOSII/Source/os_task.c ****         ptcb = OSTCBPrioTbl[prio];
 1905              		.loc 1 1139 9 is_stmt 1 view .LVU663
 1906              		.loc 1 1139 14 is_stmt 0 view .LVU664
 1907 0010 074B     		ldr	r3, .L154
 1908 0012 53F82530 		ldr	r3, [r3, r5, lsl #2]
 1909              	.LVL218:
 1910              	.L151:
1140:uCOSII/Source/os_task.c ****     }
1141:uCOSII/Source/os_task.c ****     value = ptcb->OSTCBRegTbl[id];
 1911              		.loc 1 1141 5 is_stmt 1 view .LVU665
 1912              		.loc 1 1141 11 is_stmt 0 view .LVU666
 1913 0016 1434     		adds	r4, r4, #20
 1914 0018 03EB8404 		add	r4, r3, r4, lsl #2
 1915 001c 6468     		ldr	r4, [r4, #4]
 1916              	.LVL219:
1142:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 1917              		.loc 1 1142 5 is_stmt 1 view .LVU667
 1918 001e FFF7FEFF 		bl	OS_CPU_SR_Restore
 1919              	.LVL220:
 1920              		.loc 1 1142 23 view .LVU668
1143:uCOSII/Source/os_task.c ****     *perr = OS_ERR_NONE;
 1921              		.loc 1 1143 5 view .LVU669
 1922              		.loc 1 1143 11 is_stmt 0 view .LVU670
 1923 0022 0023     		movs	r3, #0
 1924 0024 3370     		strb	r3, [r6]
1144:uCOSII/Source/os_task.c ****     return (value);
 1925              		.loc 1 1144 5 is_stmt 1 view .LVU671
1145:uCOSII/Source/os_task.c **** }
 1926              		.loc 1 1145 1 is_stmt 0 view .LVU672
 1927 0026 2046     		mov	r0, r4
 1928 0028 70BD     		pop	{r4, r5, r6, pc}
 1929              	.LVL221:
 1930              	.L153:
1137:uCOSII/Source/os_task.c ****     } else {
 1931              		.loc 1 1137 9 is_stmt 1 view .LVU673
1137:uCOSII/Source/os_task.c ****     } else {
 1932              		.loc 1 1137 14 is_stmt 0 view .LVU674
 1933 002a 024B     		ldr	r3, .L154+4
 1934 002c 1B68     		ldr	r3, [r3]
 1935              	.LVL222:
1137:uCOSII/Source/os_task.c ****     } else {
 1936              		.loc 1 1137 14 view .LVU675
 1937 002e F2E7     		b	.L151
 1938              	.L155:
 1939              		.align	2
 1940              	.L154:
 1941 0030 00000000 		.word	OSTCBPrioTbl
ARM GAS  /tmp/ccbL9Ycs.s 			page 59


 1942 0034 00000000 		.word	OSTCBCur
 1943              		.cfi_endproc
 1944              	.LFE11:
 1946              		.section	.text.OSTaskRegGetID,"ax",%progbits
 1947              		.align	1
 1948              		.global	OSTaskRegGetID
 1949              		.syntax unified
 1950              		.thumb
 1951              		.thumb_func
 1952              		.fpu fpv4-sp-d16
 1954              	OSTaskRegGetID:
 1955              	.LVL223:
 1956              	.LFB12:
1146:uCOSII/Source/os_task.c **** #endif
1147:uCOSII/Source/os_task.c **** 
1148:uCOSII/Source/os_task.c **** /*$PAGE*/
1149:uCOSII/Source/os_task.c **** /*
1150:uCOSII/Source/os_task.c **** ***************************************************************************************************
1151:uCOSII/Source/os_task.c **** *                                    ALLOCATE THE NEXT AVAILABLE TASK REGISTER ID
1152:uCOSII/Source/os_task.c **** *
1153:uCOSII/Source/os_task.c **** * Description: This function is called to obtain a task register ID.  This function thus allows tas
1154:uCOSII/Source/os_task.c **** *              allocated dynamically instead of statically.
1155:uCOSII/Source/os_task.c **** *
1156:uCOSII/Source/os_task.c **** * Arguments  : p_err       is a pointer to a variable that will hold an error code related to this 
1157:uCOSII/Source/os_task.c **** *
1158:uCOSII/Source/os_task.c **** *                            OS_ERR_NONE               if the call was successful
1159:uCOSII/Source/os_task.c **** *                            OS_ERR_NO_MORE_ID_AVAIL   if you are attempting to assign more task re
1160:uCOSII/Source/os_task.c **** *                                                           have available through OS_TASK_REG_TBL_
1161:uCOSII/Source/os_task.c **** *
1162:uCOSII/Source/os_task.c **** * Returns    : The next available task register 'id' or OS_TASK_REG_TBL_SIZE if an error is detecte
1163:uCOSII/Source/os_task.c **** ***************************************************************************************************
1164:uCOSII/Source/os_task.c **** */
1165:uCOSII/Source/os_task.c **** 
1166:uCOSII/Source/os_task.c **** #if OS_TASK_REG_TBL_SIZE > 0u
1167:uCOSII/Source/os_task.c **** INT8U  OSTaskRegGetID (INT8U  *perr)
1168:uCOSII/Source/os_task.c **** {
 1957              		.loc 1 1168 1 is_stmt 1 view -0
 1958              		.cfi_startproc
 1959              		@ args = 0, pretend = 0, frame = 0
 1960              		@ frame_needed = 0, uses_anonymous_args = 0
 1961              		.loc 1 1168 1 is_stmt 0 view .LVU677
 1962 0000 38B5     		push	{r3, r4, r5, lr}
 1963              	.LCFI17:
 1964              		.cfi_def_cfa_offset 16
 1965              		.cfi_offset 3, -16
 1966              		.cfi_offset 4, -12
 1967              		.cfi_offset 5, -8
 1968              		.cfi_offset 14, -4
 1969 0002 0546     		mov	r5, r0
1169:uCOSII/Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                                    /* Allocate storage for CPU status 
1170:uCOSII/Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 1970              		.loc 1 1170 5 is_stmt 1 view .LVU678
 1971              	.LVL224:
1171:uCOSII/Source/os_task.c **** #endif
1172:uCOSII/Source/os_task.c ****     INT8U      id;
 1972              		.loc 1 1172 5 view .LVU679
1173:uCOSII/Source/os_task.c **** 
ARM GAS  /tmp/ccbL9Ycs.s 			page 60


1174:uCOSII/Source/os_task.c **** 
1175:uCOSII/Source/os_task.c **** #ifdef OS_SAFETY_CRITICAL
1176:uCOSII/Source/os_task.c ****     if (perr == (INT8U *)0) {
1177:uCOSII/Source/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1178:uCOSII/Source/os_task.c ****         return ((INT8U)OS_TASK_REG_TBL_SIZE);
1179:uCOSII/Source/os_task.c ****     }
1180:uCOSII/Source/os_task.c **** #endif
1181:uCOSII/Source/os_task.c **** 
1182:uCOSII/Source/os_task.c ****     OS_ENTER_CRITICAL();
 1973              		.loc 1 1182 5 view .LVU680
 1974 0004 FFF7FEFF 		bl	OS_CPU_SR_Save
 1975              	.LVL225:
 1976              		.loc 1 1182 24 view .LVU681
1183:uCOSII/Source/os_task.c ****     if (OSTaskRegNextAvailID >= OS_TASK_REG_TBL_SIZE) {         /* See if we exceeded the number of
 1977              		.loc 1 1183 5 view .LVU682
 1978              		.loc 1 1183 30 is_stmt 0 view .LVU683
 1979 0008 084B     		ldr	r3, .L161
 1980 000a 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1981              		.loc 1 1183 8 view .LVU684
 1982 000c 44B9     		cbnz	r4, .L160
1184:uCOSII/Source/os_task.c ****        *perr = OS_ERR_NO_MORE_ID_AVAIL;                         /* Yes, cannot allocate more task r
1185:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
1186:uCOSII/Source/os_task.c ****         return ((INT8U)OS_TASK_REG_TBL_SIZE);
1187:uCOSII/Source/os_task.c ****     }
1188:uCOSII/Source/os_task.c ****      
1189:uCOSII/Source/os_task.c ****     id   = OSTaskRegNextAvailID;                                /* Assign the next available ID    
 1983              		.loc 1 1189 5 is_stmt 1 view .LVU685
 1984              	.LVL226:
1190:uCOSII/Source/os_task.c ****     OSTaskRegNextAvailID++;                                     /* Increment available ID for next 
 1985              		.loc 1 1190 5 view .LVU686
 1986              		.loc 1 1190 25 is_stmt 0 view .LVU687
 1987 000e 631C     		adds	r3, r4, #1
 1988 0010 064A     		ldr	r2, .L161
 1989 0012 1370     		strb	r3, [r2]
1191:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 1990              		.loc 1 1191 5 is_stmt 1 view .LVU688
 1991 0014 FFF7FEFF 		bl	OS_CPU_SR_Restore
 1992              	.LVL227:
 1993              		.loc 1 1191 23 view .LVU689
1192:uCOSII/Source/os_task.c ****    *perr = OS_ERR_NONE;
 1994              		.loc 1 1192 4 view .LVU690
 1995              		.loc 1 1192 10 is_stmt 0 view .LVU691
 1996 0018 0023     		movs	r3, #0
 1997 001a 2B70     		strb	r3, [r5]
1193:uCOSII/Source/os_task.c ****     return (id);
 1998              		.loc 1 1193 5 is_stmt 1 view .LVU692
 1999              	.LVL228:
 2000              	.L158:
1194:uCOSII/Source/os_task.c **** }
 2001              		.loc 1 1194 1 is_stmt 0 view .LVU693
 2002 001c 2046     		mov	r0, r4
 2003 001e 38BD     		pop	{r3, r4, r5, pc}
 2004              	.LVL229:
 2005              	.L160:
1184:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 2006              		.loc 1 1184 8 is_stmt 1 view .LVU694
1184:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
ARM GAS  /tmp/ccbL9Ycs.s 			page 61


 2007              		.loc 1 1184 14 is_stmt 0 view .LVU695
 2008 0020 9623     		movs	r3, #150
 2009 0022 2B70     		strb	r3, [r5]
1185:uCOSII/Source/os_task.c ****         return ((INT8U)OS_TASK_REG_TBL_SIZE);
 2010              		.loc 1 1185 9 is_stmt 1 view .LVU696
 2011 0024 FFF7FEFF 		bl	OS_CPU_SR_Restore
 2012              	.LVL230:
1185:uCOSII/Source/os_task.c ****         return ((INT8U)OS_TASK_REG_TBL_SIZE);
 2013              		.loc 1 1185 27 view .LVU697
1186:uCOSII/Source/os_task.c ****     }
 2014              		.loc 1 1186 9 view .LVU698
1186:uCOSII/Source/os_task.c ****     }
 2015              		.loc 1 1186 16 is_stmt 0 view .LVU699
 2016 0028 0124     		movs	r4, #1
 2017 002a F7E7     		b	.L158
 2018              	.L162:
 2019              		.align	2
 2020              	.L161:
 2021 002c 00000000 		.word	OSTaskRegNextAvailID
 2022              		.cfi_endproc
 2023              	.LFE12:
 2025              		.section	.text.OSTaskRegSet,"ax",%progbits
 2026              		.align	1
 2027              		.global	OSTaskRegSet
 2028              		.syntax unified
 2029              		.thumb
 2030              		.thumb_func
 2031              		.fpu fpv4-sp-d16
 2033              	OSTaskRegSet:
 2034              	.LVL231:
 2035              	.LFB13:
1195:uCOSII/Source/os_task.c **** #endif
1196:uCOSII/Source/os_task.c **** 
1197:uCOSII/Source/os_task.c **** /*$PAGE*/
1198:uCOSII/Source/os_task.c **** /*
1199:uCOSII/Source/os_task.c **** ***************************************************************************************************
1200:uCOSII/Source/os_task.c **** *                              SET THE CURRENT VALUE OF A TASK VARIABLE
1201:uCOSII/Source/os_task.c **** *
1202:uCOSII/Source/os_task.c **** * Description: This function is called to change the current value of a task register.  Task regist
1203:uCOSII/Source/os_task.c **** *              are application specific and can be used to store task specific values such as 'erro
1204:uCOSII/Source/os_task.c **** *              numbers' (i.e. errno), statistics, etc.  Each task register can hold a 32-bit value.
1205:uCOSII/Source/os_task.c **** *
1206:uCOSII/Source/os_task.c **** * Arguments  : prio      is the priority of the task you want to set the task register for.  If you
1207:uCOSII/Source/os_task.c **** *                        specify OS_PRIO_SELF then the task register of the current task will be ob
1208:uCOSII/Source/os_task.c **** *
1209:uCOSII/Source/os_task.c **** *              id        is the 'id' of the desired task register.  Note that the 'id' must be less
1210:uCOSII/Source/os_task.c **** *                        than OS_TASK_REG_TBL_SIZE
1211:uCOSII/Source/os_task.c **** *
1212:uCOSII/Source/os_task.c **** *              value     is the desired value for the task register.
1213:uCOSII/Source/os_task.c **** *
1214:uCOSII/Source/os_task.c **** *              perr      is a pointer to a variable that will hold an error code related to this ca
1215:uCOSII/Source/os_task.c **** *
1216:uCOSII/Source/os_task.c **** *                        OS_ERR_NONE            if the call was successful
1217:uCOSII/Source/os_task.c **** *                        OS_ERR_PRIO_INVALID    if you specified an invalid priority
1218:uCOSII/Source/os_task.c **** *                        OS_ERR_ID_INVALID      if the 'id' is not between 0 and OS_TASK_REG_TBL_SI
1219:uCOSII/Source/os_task.c **** *
1220:uCOSII/Source/os_task.c **** * Returns    : The current value of the task's variable or 0 if an error is detected.
ARM GAS  /tmp/ccbL9Ycs.s 			page 62


1221:uCOSII/Source/os_task.c **** *
1222:uCOSII/Source/os_task.c **** * Note(s)    : The maximum number of task variables is 254
1223:uCOSII/Source/os_task.c **** ***************************************************************************************************
1224:uCOSII/Source/os_task.c **** */
1225:uCOSII/Source/os_task.c **** 
1226:uCOSII/Source/os_task.c **** #if OS_TASK_REG_TBL_SIZE > 0u
1227:uCOSII/Source/os_task.c **** void  OSTaskRegSet (INT8U    prio,
1228:uCOSII/Source/os_task.c ****                     INT8U    id,
1229:uCOSII/Source/os_task.c ****                     INT32U   value,
1230:uCOSII/Source/os_task.c ****                     INT8U   *perr)
1231:uCOSII/Source/os_task.c **** {
 2036              		.loc 1 1231 1 is_stmt 1 view -0
 2037              		.cfi_startproc
 2038              		@ args = 0, pretend = 0, frame = 0
 2039              		@ frame_needed = 0, uses_anonymous_args = 0
 2040              		.loc 1 1231 1 is_stmt 0 view .LVU701
 2041 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2042              	.LCFI18:
 2043              		.cfi_def_cfa_offset 24
 2044              		.cfi_offset 3, -24
 2045              		.cfi_offset 4, -20
 2046              		.cfi_offset 5, -16
 2047              		.cfi_offset 6, -12
 2048              		.cfi_offset 7, -8
 2049              		.cfi_offset 14, -4
 2050 0002 0546     		mov	r5, r0
 2051 0004 0C46     		mov	r4, r1
 2052 0006 1746     		mov	r7, r2
 2053 0008 1E46     		mov	r6, r3
1232:uCOSII/Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
1233:uCOSII/Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 2054              		.loc 1 1233 5 is_stmt 1 view .LVU702
 2055              	.LVL232:
1234:uCOSII/Source/os_task.c **** #endif
1235:uCOSII/Source/os_task.c ****     OS_TCB    *ptcb;
 2056              		.loc 1 1235 5 view .LVU703
1236:uCOSII/Source/os_task.c **** 
1237:uCOSII/Source/os_task.c **** 
1238:uCOSII/Source/os_task.c **** #ifdef OS_SAFETY_CRITICAL
1239:uCOSII/Source/os_task.c ****     if (perr == (INT8U *)0) {
1240:uCOSII/Source/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1241:uCOSII/Source/os_task.c ****         return;
1242:uCOSII/Source/os_task.c ****     }
1243:uCOSII/Source/os_task.c **** #endif
1244:uCOSII/Source/os_task.c **** 
1245:uCOSII/Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
1246:uCOSII/Source/os_task.c ****     if (prio >= OS_LOWEST_PRIO) {
1247:uCOSII/Source/os_task.c ****         if (prio != OS_PRIO_SELF) {
1248:uCOSII/Source/os_task.c ****             *perr = OS_ERR_PRIO_INVALID;
1249:uCOSII/Source/os_task.c ****             return;
1250:uCOSII/Source/os_task.c ****         }
1251:uCOSII/Source/os_task.c ****     }
1252:uCOSII/Source/os_task.c ****     if (id >= OS_TASK_REG_TBL_SIZE) {
1253:uCOSII/Source/os_task.c ****         *perr = OS_ERR_ID_INVALID;
1254:uCOSII/Source/os_task.c ****         return;
1255:uCOSII/Source/os_task.c ****     }
1256:uCOSII/Source/os_task.c **** #endif
ARM GAS  /tmp/ccbL9Ycs.s 			page 63


1257:uCOSII/Source/os_task.c ****     OS_ENTER_CRITICAL();
 2057              		.loc 1 1257 5 view .LVU704
 2058 000a FFF7FEFF 		bl	OS_CPU_SR_Save
 2059              	.LVL233:
 2060              		.loc 1 1257 24 view .LVU705
1258:uCOSII/Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                  /* See if need to get register from current task  
 2061              		.loc 1 1258 5 view .LVU706
 2062              		.loc 1 1258 8 is_stmt 0 view .LVU707
 2063 000e FF2D     		cmp	r5, #255
 2064 0010 0BD0     		beq	.L167
1259:uCOSII/Source/os_task.c ****         ptcb = OSTCBCur;
1260:uCOSII/Source/os_task.c ****     } else {
1261:uCOSII/Source/os_task.c ****         ptcb = OSTCBPrioTbl[prio];
 2065              		.loc 1 1261 9 is_stmt 1 view .LVU708
 2066              		.loc 1 1261 14 is_stmt 0 view .LVU709
 2067 0012 074B     		ldr	r3, .L168
 2068 0014 53F82530 		ldr	r3, [r3, r5, lsl #2]
 2069              	.LVL234:
 2070              	.L165:
1262:uCOSII/Source/os_task.c ****     }
1263:uCOSII/Source/os_task.c ****     ptcb->OSTCBRegTbl[id] = value;
 2071              		.loc 1 1263 5 is_stmt 1 view .LVU710
 2072              		.loc 1 1263 27 is_stmt 0 view .LVU711
 2073 0018 1434     		adds	r4, r4, #20
 2074 001a 03EB8404 		add	r4, r3, r4, lsl #2
 2075 001e 6760     		str	r7, [r4, #4]
1264:uCOSII/Source/os_task.c ****     OS_EXIT_CRITICAL();
 2076              		.loc 1 1264 5 is_stmt 1 view .LVU712
 2077 0020 FFF7FEFF 		bl	OS_CPU_SR_Restore
 2078              	.LVL235:
 2079              		.loc 1 1264 23 view .LVU713
1265:uCOSII/Source/os_task.c ****     *perr                 = OS_ERR_NONE;
 2080              		.loc 1 1265 5 view .LVU714
 2081              		.loc 1 1265 27 is_stmt 0 view .LVU715
 2082 0024 0023     		movs	r3, #0
 2083 0026 3370     		strb	r3, [r6]
1266:uCOSII/Source/os_task.c **** }
 2084              		.loc 1 1266 1 view .LVU716
 2085 0028 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2086              	.LVL236:
 2087              	.L167:
1259:uCOSII/Source/os_task.c ****     } else {
 2088              		.loc 1 1259 9 is_stmt 1 view .LVU717
1259:uCOSII/Source/os_task.c ****     } else {
 2089              		.loc 1 1259 14 is_stmt 0 view .LVU718
 2090 002a 024B     		ldr	r3, .L168+4
 2091 002c 1B68     		ldr	r3, [r3]
 2092              	.LVL237:
1259:uCOSII/Source/os_task.c ****     } else {
 2093              		.loc 1 1259 14 view .LVU719
 2094 002e F3E7     		b	.L165
 2095              	.L169:
 2096              		.align	2
 2097              	.L168:
 2098 0030 00000000 		.word	OSTCBPrioTbl
 2099 0034 00000000 		.word	OSTCBCur
 2100              		.cfi_endproc
ARM GAS  /tmp/ccbL9Ycs.s 			page 64


 2101              	.LFE13:
 2103              		.section	.text.OS_TaskReturn,"ax",%progbits
 2104              		.align	1
 2105              		.global	OS_TaskReturn
 2106              		.syntax unified
 2107              		.thumb
 2108              		.thumb_func
 2109              		.fpu fpv4-sp-d16
 2111              	OS_TaskReturn:
 2112              	.LFB14:
1267:uCOSII/Source/os_task.c **** #endif
1268:uCOSII/Source/os_task.c **** 
1269:uCOSII/Source/os_task.c **** /*$PAGE*/
1270:uCOSII/Source/os_task.c **** /*
1271:uCOSII/Source/os_task.c **** ***************************************************************************************************
1272:uCOSII/Source/os_task.c **** *                                    CATCH ACCIDENTAL TASK RETURN
1273:uCOSII/Source/os_task.c **** *
1274:uCOSII/Source/os_task.c **** * Description: This function is called if a task accidentally returns without deleting itself.  In 
1275:uCOSII/Source/os_task.c **** *              words, a task should either be an infinite loop or delete itself if it's done.
1276:uCOSII/Source/os_task.c **** *
1277:uCOSII/Source/os_task.c **** * Arguments  : none
1278:uCOSII/Source/os_task.c **** *
1279:uCOSII/Source/os_task.c **** * Returns    : none
1280:uCOSII/Source/os_task.c **** *
1281:uCOSII/Source/os_task.c **** * Note(s)    : This function is INTERNAL to uC/OS-II and your application should not call it.
1282:uCOSII/Source/os_task.c **** ***************************************************************************************************
1283:uCOSII/Source/os_task.c **** */
1284:uCOSII/Source/os_task.c **** 
1285:uCOSII/Source/os_task.c **** void  OS_TaskReturn (void)
1286:uCOSII/Source/os_task.c **** {
 2113              		.loc 1 1286 1 is_stmt 1 view -0
 2114              		.cfi_startproc
 2115              		@ args = 0, pretend = 0, frame = 0
 2116              		@ frame_needed = 0, uses_anonymous_args = 0
 2117 0000 08B5     		push	{r3, lr}
 2118              	.LCFI19:
 2119              		.cfi_def_cfa_offset 8
 2120              		.cfi_offset 3, -8
 2121              		.cfi_offset 14, -4
1287:uCOSII/Source/os_task.c ****     OSTaskReturnHook(OSTCBCur);                   /* Call hook to let user decide on what to do    
 2122              		.loc 1 1287 5 view .LVU721
 2123 0002 044B     		ldr	r3, .L172
 2124 0004 1868     		ldr	r0, [r3]
 2125 0006 FFF7FEFF 		bl	OSTaskReturnHook
 2126              	.LVL238:
1288:uCOSII/Source/os_task.c **** 
1289:uCOSII/Source/os_task.c **** #if OS_TASK_DEL_EN > 0u
1290:uCOSII/Source/os_task.c ****     (void)OSTaskDel(OS_PRIO_SELF);                /* Delete task if it accidentally returns!       
 2127              		.loc 1 1290 5 view .LVU722
 2128              		.loc 1 1290 11 is_stmt 0 view .LVU723
 2129 000a FF20     		movs	r0, #255
 2130 000c FFF7FEFF 		bl	OSTaskDel
 2131              	.LVL239:
1291:uCOSII/Source/os_task.c **** #else
1292:uCOSII/Source/os_task.c ****     for (;;) {
1293:uCOSII/Source/os_task.c ****         OSTimeDly(OS_TICKS_PER_SEC);
1294:uCOSII/Source/os_task.c ****     }
ARM GAS  /tmp/ccbL9Ycs.s 			page 65


1295:uCOSII/Source/os_task.c **** #endif
1296:uCOSII/Source/os_task.c **** }
 2132              		.loc 1 1296 1 view .LVU724
 2133 0010 08BD     		pop	{r3, pc}
 2134              	.L173:
 2135 0012 00BF     		.align	2
 2136              	.L172:
 2137 0014 00000000 		.word	OSTCBCur
 2138              		.cfi_endproc
 2139              	.LFE14:
 2141              		.section	.text.OS_TaskStkClr,"ax",%progbits
 2142              		.align	1
 2143              		.global	OS_TaskStkClr
 2144              		.syntax unified
 2145              		.thumb
 2146              		.thumb_func
 2147              		.fpu fpv4-sp-d16
 2149              	OS_TaskStkClr:
 2150              	.LVL240:
 2151              	.LFB15:
1297:uCOSII/Source/os_task.c **** 
1298:uCOSII/Source/os_task.c **** /*$PAGE*/
1299:uCOSII/Source/os_task.c **** /*
1300:uCOSII/Source/os_task.c **** ***************************************************************************************************
1301:uCOSII/Source/os_task.c **** *                                          CLEAR TASK STACK
1302:uCOSII/Source/os_task.c **** *
1303:uCOSII/Source/os_task.c **** * Description: This function is used to clear the stack of a task (i.e. write all zeros)
1304:uCOSII/Source/os_task.c **** *
1305:uCOSII/Source/os_task.c **** * Arguments  : pbos     is a pointer to the task's bottom of stack.  If the configuration constant
1306:uCOSII/Source/os_task.c **** *                       OS_STK_GROWTH is set to 1, the stack is assumed to grow downward (i.e. from
1307:uCOSII/Source/os_task.c **** *                       memory to low memory).  'pbos' will thus point to the lowest (valid) memory
1308:uCOSII/Source/os_task.c **** *                       location of the stack.  If OS_STK_GROWTH is set to 0, 'pbos' will point to 
1309:uCOSII/Source/os_task.c **** *                       highest memory location of the stack and the stack will grow with increasin
1310:uCOSII/Source/os_task.c **** *                       memory locations.  'pbos' MUST point to a valid 'free' data item.
1311:uCOSII/Source/os_task.c **** *
1312:uCOSII/Source/os_task.c **** *              size     is the number of 'stack elements' to clear.
1313:uCOSII/Source/os_task.c **** *
1314:uCOSII/Source/os_task.c **** *              opt      contains additional information (or options) about the behavior of the task
1315:uCOSII/Source/os_task.c **** *                       LOWER 8-bits are reserved by uC/OS-II while the upper 8 bits can be applica
1316:uCOSII/Source/os_task.c **** *                       specific.  See OS_TASK_OPT_??? in uCOS-II.H.
1317:uCOSII/Source/os_task.c **** *
1318:uCOSII/Source/os_task.c **** * Returns    : none
1319:uCOSII/Source/os_task.c **** ***************************************************************************************************
1320:uCOSII/Source/os_task.c **** */
1321:uCOSII/Source/os_task.c **** #if (OS_TASK_STAT_STK_CHK_EN > 0u) && (OS_TASK_CREATE_EXT_EN > 0u)
1322:uCOSII/Source/os_task.c **** void  OS_TaskStkClr (OS_STK  *pbos,
1323:uCOSII/Source/os_task.c ****                      INT32U   size,
1324:uCOSII/Source/os_task.c ****                      INT16U   opt)
1325:uCOSII/Source/os_task.c **** {
 2152              		.loc 1 1325 1 is_stmt 1 view -0
 2153              		.cfi_startproc
 2154              		@ args = 0, pretend = 0, frame = 0
 2155              		@ frame_needed = 0, uses_anonymous_args = 0
 2156              		@ link register save eliminated.
1326:uCOSII/Source/os_task.c ****     if ((opt & OS_TASK_OPT_STK_CHK) != 0x0000u) {      /* See if stack checking has been enabled   
 2157              		.loc 1 1326 5 view .LVU726
 2158              		.loc 1 1326 8 is_stmt 0 view .LVU727
ARM GAS  /tmp/ccbL9Ycs.s 			page 66


 2159 0000 12F0010F 		tst	r2, #1
 2160 0004 09D0     		beq	.L174
1327:uCOSII/Source/os_task.c ****         if ((opt & OS_TASK_OPT_STK_CLR) != 0x0000u) {  /* See if stack needs to be cleared         
 2161              		.loc 1 1327 9 is_stmt 1 view .LVU728
 2162              		.loc 1 1327 12 is_stmt 0 view .LVU729
 2163 0006 12F0020F 		tst	r2, #2
 2164 000a 00D1     		bne	.L176
 2165 000c 7047     		bx	lr
 2166              	.L176:
1328:uCOSII/Source/os_task.c **** #if OS_STK_GROWTH == 1u
1329:uCOSII/Source/os_task.c ****             while (size > 0u) {                        /* Stack grows from HIGH to LOW memory      
 2167              		.loc 1 1329 19 is_stmt 1 view .LVU730
 2168 000e 21B1     		cbz	r1, .L174
1330:uCOSII/Source/os_task.c ****                 size--;
 2169              		.loc 1 1330 17 view .LVU731
 2170              		.loc 1 1330 21 is_stmt 0 view .LVU732
 2171 0010 0139     		subs	r1, r1, #1
 2172              	.LVL241:
1331:uCOSII/Source/os_task.c ****                 *pbos++ = (OS_STK)0;                   /* Clear from bottom of stack and up!       
 2173              		.loc 1 1331 17 is_stmt 1 view .LVU733
 2174              		.loc 1 1331 25 is_stmt 0 view .LVU734
 2175 0012 0023     		movs	r3, #0
 2176 0014 40F8043B 		str	r3, [r0], #4
 2177              	.LVL242:
 2178              		.loc 1 1331 25 view .LVU735
 2179 0018 F9E7     		b	.L176
 2180              	.L174:
1332:uCOSII/Source/os_task.c ****             }
1333:uCOSII/Source/os_task.c **** #else
1334:uCOSII/Source/os_task.c ****             while (size > 0u) {                        /* Stack grows from LOW to HIGH memory      
1335:uCOSII/Source/os_task.c ****                 size--;
1336:uCOSII/Source/os_task.c ****                 *pbos-- = (OS_STK)0;                   /* Clear from bottom of stack and down      
1337:uCOSII/Source/os_task.c ****             }
1338:uCOSII/Source/os_task.c **** #endif
1339:uCOSII/Source/os_task.c ****         }
1340:uCOSII/Source/os_task.c ****     }
1341:uCOSII/Source/os_task.c **** }
 2181              		.loc 1 1341 1 view .LVU736
 2182 001a 7047     		bx	lr
 2183              		.cfi_endproc
 2184              	.LFE15:
 2186              		.section	.text.OSTaskCreateExt,"ax",%progbits
 2187              		.align	1
 2188              		.global	OSTaskCreateExt
 2189              		.syntax unified
 2190              		.thumb
 2191              		.thumb_func
 2192              		.fpu fpv4-sp-d16
 2194              	OSTaskCreateExt:
 2195              	.LVL243:
 2196              	.LFB2:
 345:uCOSII/Source/os_task.c ****     OS_STK     *psp;
 2197              		.loc 1 345 1 is_stmt 1 view -0
 2198              		.cfi_startproc
 2199              		@ args = 20, pretend = 0, frame = 0
 2200              		@ frame_needed = 0, uses_anonymous_args = 0
 345:uCOSII/Source/os_task.c ****     OS_STK     *psp;
ARM GAS  /tmp/ccbL9Ycs.s 			page 67


 2201              		.loc 1 345 1 is_stmt 0 view .LVU738
 2202 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2203              	.LCFI20:
 2204              		.cfi_def_cfa_offset 24
 2205              		.cfi_offset 4, -24
 2206              		.cfi_offset 5, -20
 2207              		.cfi_offset 6, -16
 2208              		.cfi_offset 7, -12
 2209              		.cfi_offset 8, -8
 2210              		.cfi_offset 14, -4
 2211 0004 84B0     		sub	sp, sp, #16
 2212              	.LCFI21:
 2213              		.cfi_def_cfa_offset 40
 2214 0006 0546     		mov	r5, r0
 2215 0008 0E46     		mov	r6, r1
 2216 000a 1746     		mov	r7, r2
 2217 000c 1C46     		mov	r4, r3
 2218 000e BDF83880 		ldrh	r8, [sp, #56]
 346:uCOSII/Source/os_task.c ****     INT8U       err;
 2219              		.loc 1 346 5 is_stmt 1 view .LVU739
 347:uCOSII/Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                 /* Allocate storage for CPU status register           
 2220              		.loc 1 347 5 view .LVU740
 349:uCOSII/Source/os_task.c **** #endif
 2221              		.loc 1 349 5 view .LVU741
 2222              	.LVL244:
 366:uCOSII/Source/os_task.c ****     if (OSIntNesting > 0u) {                 /* Make sure we don't create the task from within an I
 2223              		.loc 1 366 5 view .LVU742
 2224 0012 FFF7FEFF 		bl	OS_CPU_SR_Save
 2225              	.LVL245:
 366:uCOSII/Source/os_task.c ****     if (OSIntNesting > 0u) {                 /* Make sure we don't create the task from within an I
 2226              		.loc 1 366 24 view .LVU743
 367:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 2227              		.loc 1 367 5 view .LVU744
 367:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 2228              		.loc 1 367 22 is_stmt 0 view .LVU745
 2229 0016 214B     		ldr	r3, .L187
 2230 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 367:uCOSII/Source/os_task.c ****         OS_EXIT_CRITICAL();
 2231              		.loc 1 367 8 view .LVU746
 2232 001a 53B9     		cbnz	r3, .L185
 371:uCOSII/Source/os_task.c ****         OSTCBPrioTbl[prio] = OS_TCB_RESERVED;/* Reserve the priority to prevent others from doing .
 2233              		.loc 1 371 5 is_stmt 1 view .LVU747
 371:uCOSII/Source/os_task.c ****         OSTCBPrioTbl[prio] = OS_TCB_RESERVED;/* Reserve the priority to prevent others from doing .
 2234              		.loc 1 371 21 is_stmt 0 view .LVU748
 2235 001c 204B     		ldr	r3, .L187+4
 2236 001e 53F82430 		ldr	r3, [r3, r4, lsl #2]
 371:uCOSII/Source/os_task.c ****         OSTCBPrioTbl[prio] = OS_TCB_RESERVED;/* Reserve the priority to prevent others from doing .
 2237              		.loc 1 371 8 view .LVU749
 2238 0022 53B1     		cbz	r3, .L186
 393:uCOSII/Source/os_task.c ****     return (OS_ERR_PRIO_EXIST);
 2239              		.loc 1 393 5 is_stmt 1 view .LVU750
 2240 0024 FFF7FEFF 		bl	OS_CPU_SR_Restore
 2241              	.LVL246:
 393:uCOSII/Source/os_task.c ****     return (OS_ERR_PRIO_EXIST);
 2242              		.loc 1 393 23 view .LVU751
 394:uCOSII/Source/os_task.c **** }
 2243              		.loc 1 394 5 view .LVU752
ARM GAS  /tmp/ccbL9Ycs.s 			page 68


 394:uCOSII/Source/os_task.c **** }
 2244              		.loc 1 394 12 is_stmt 0 view .LVU753
 2245 0028 2825     		movs	r5, #40
 2246              	.LVL247:
 2247              	.L180:
 395:uCOSII/Source/os_task.c **** #endif
 2248              		.loc 1 395 1 view .LVU754
 2249 002a 2846     		mov	r0, r5
 2250 002c 04B0     		add	sp, sp, #16
 2251              	.LCFI22:
 2252              		.cfi_remember_state
 2253              		.cfi_def_cfa_offset 24
 2254              		@ sp needed
 2255 002e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2256              	.LVL248:
 2257              	.L185:
 2258              	.LCFI23:
 2259              		.cfi_restore_state
 368:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_CREATE_ISR);
 2260              		.loc 1 368 9 is_stmt 1 view .LVU755
 2261 0032 FFF7FEFF 		bl	OS_CPU_SR_Restore
 2262              	.LVL249:
 368:uCOSII/Source/os_task.c ****         return (OS_ERR_TASK_CREATE_ISR);
 2263              		.loc 1 368 27 view .LVU756
 369:uCOSII/Source/os_task.c ****     }
 2264              		.loc 1 369 9 view .LVU757
 369:uCOSII/Source/os_task.c ****     }
 2265              		.loc 1 369 16 is_stmt 0 view .LVU758
 2266 0036 3C25     		movs	r5, #60
 2267              	.LVL250:
 369:uCOSII/Source/os_task.c ****     }
 2268              		.loc 1 369 16 view .LVU759
 2269 0038 F7E7     		b	.L180
 2270              	.LVL251:
 2271              	.L186:
 372:uCOSII/Source/os_task.c ****                                              /* ... the same thing until task is created.          
 2272              		.loc 1 372 9 is_stmt 1 view .LVU760
 372:uCOSII/Source/os_task.c ****                                              /* ... the same thing until task is created.          
 2273              		.loc 1 372 28 is_stmt 0 view .LVU761
 2274 003a 194B     		ldr	r3, .L187+4
 2275 003c 0122     		movs	r2, #1
 2276 003e 43F82420 		str	r2, [r3, r4, lsl #2]
 374:uCOSII/Source/os_task.c **** 
 2277              		.loc 1 374 9 is_stmt 1 view .LVU762
 2278 0042 FFF7FEFF 		bl	OS_CPU_SR_Restore
 2279              	.LVL252:
 374:uCOSII/Source/os_task.c **** 
 2280              		.loc 1 374 27 view .LVU763
 377:uCOSII/Source/os_task.c **** #endif
 2281              		.loc 1 377 9 view .LVU764
 2282 0046 4246     		mov	r2, r8
 2283 0048 0C99     		ldr	r1, [sp, #48]
 2284 004a 0B98     		ldr	r0, [sp, #44]
 2285 004c FFF7FEFF 		bl	OS_TaskStkClr
 2286              	.LVL253:
 380:uCOSII/Source/os_task.c ****         err = OS_TCBInit(prio, psp, pbos, id, stk_size, pext, opt);
 2287              		.loc 1 380 9 view .LVU765
ARM GAS  /tmp/ccbL9Ycs.s 			page 69


 380:uCOSII/Source/os_task.c ****         err = OS_TCBInit(prio, psp, pbos, id, stk_size, pext, opt);
 2288              		.loc 1 380 15 is_stmt 0 view .LVU766
 2289 0050 4346     		mov	r3, r8
 2290 0052 3A46     		mov	r2, r7
 2291 0054 3146     		mov	r1, r6
 2292 0056 2846     		mov	r0, r5
 2293 0058 FFF7FEFF 		bl	OSTaskStkInit
 2294              	.LVL254:
 2295 005c 0146     		mov	r1, r0
 2296              	.LVL255:
 381:uCOSII/Source/os_task.c ****         if (err == OS_ERR_NONE) {
 2297              		.loc 1 381 9 is_stmt 1 view .LVU767
 381:uCOSII/Source/os_task.c ****         if (err == OS_ERR_NONE) {
 2298              		.loc 1 381 15 is_stmt 0 view .LVU768
 2299 005e CDF80880 		str	r8, [sp, #8]
 2300 0062 0D9B     		ldr	r3, [sp, #52]
 2301 0064 0193     		str	r3, [sp, #4]
 2302 0066 0C9B     		ldr	r3, [sp, #48]
 2303 0068 0093     		str	r3, [sp]
 2304 006a BDF82830 		ldrh	r3, [sp, #40]
 2305 006e 0B9A     		ldr	r2, [sp, #44]
 2306 0070 2046     		mov	r0, r4
 2307              	.LVL256:
 381:uCOSII/Source/os_task.c ****         if (err == OS_ERR_NONE) {
 2308              		.loc 1 381 15 view .LVU769
 2309 0072 FFF7FEFF 		bl	OS_TCBInit
 2310              	.LVL257:
 382:uCOSII/Source/os_task.c ****             if (OSRunning == OS_TRUE) {                        /* Find HPT if multitasking has star
 2311              		.loc 1 382 9 is_stmt 1 view .LVU770
 382:uCOSII/Source/os_task.c ****             if (OSRunning == OS_TRUE) {                        /* Find HPT if multitasking has star
 2312              		.loc 1 382 12 is_stmt 0 view .LVU771
 2313 0076 0546     		mov	r5, r0
 2314              	.LVL258:
 382:uCOSII/Source/os_task.c ****             if (OSRunning == OS_TRUE) {                        /* Find HPT if multitasking has star
 2315              		.loc 1 382 12 view .LVU772
 2316 0078 30B9     		cbnz	r0, .L182
 383:uCOSII/Source/os_task.c ****                 OS_Sched();
 2317              		.loc 1 383 13 is_stmt 1 view .LVU773
 383:uCOSII/Source/os_task.c ****                 OS_Sched();
 2318              		.loc 1 383 27 is_stmt 0 view .LVU774
 2319 007a 0A4B     		ldr	r3, .L187+8
 2320 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 383:uCOSII/Source/os_task.c ****                 OS_Sched();
 2321              		.loc 1 383 16 view .LVU775
 2322 007e 012B     		cmp	r3, #1
 2323 0080 D3D1     		bne	.L180
 384:uCOSII/Source/os_task.c ****             }
 2324              		.loc 1 384 17 is_stmt 1 view .LVU776
 2325 0082 FFF7FEFF 		bl	OS_Sched
 2326              	.LVL259:
 384:uCOSII/Source/os_task.c ****             }
 2327              		.loc 1 384 17 is_stmt 0 view .LVU777
 2328 0086 D0E7     		b	.L180
 2329              	.LVL260:
 2330              	.L182:
 387:uCOSII/Source/os_task.c ****             OSTCBPrioTbl[prio] = (OS_TCB *)0;                  /* Make this priority avail. to othe
 2331              		.loc 1 387 13 is_stmt 1 view .LVU778
ARM GAS  /tmp/ccbL9Ycs.s 			page 70


 2332 0088 FFF7FEFF 		bl	OS_CPU_SR_Save
 2333              	.LVL261:
 387:uCOSII/Source/os_task.c ****             OSTCBPrioTbl[prio] = (OS_TCB *)0;                  /* Make this priority avail. to othe
 2334              		.loc 1 387 32 view .LVU779
 388:uCOSII/Source/os_task.c ****             OS_EXIT_CRITICAL();
 2335              		.loc 1 388 13 view .LVU780
 388:uCOSII/Source/os_task.c ****             OS_EXIT_CRITICAL();
 2336              		.loc 1 388 32 is_stmt 0 view .LVU781
 2337 008c 044B     		ldr	r3, .L187+4
 2338 008e 0022     		movs	r2, #0
 2339 0090 43F82420 		str	r2, [r3, r4, lsl #2]
 389:uCOSII/Source/os_task.c ****         }
 2340              		.loc 1 389 13 is_stmt 1 view .LVU782
 2341 0094 FFF7FEFF 		bl	OS_CPU_SR_Restore
 2342              	.LVL262:
 389:uCOSII/Source/os_task.c ****         }
 2343              		.loc 1 389 31 view .LVU783
 391:uCOSII/Source/os_task.c ****     }
 2344              		.loc 1 391 9 view .LVU784
 391:uCOSII/Source/os_task.c ****     }
 2345              		.loc 1 391 16 is_stmt 0 view .LVU785
 2346 0098 C7E7     		b	.L180
 2347              	.L188:
 2348 009a 00BF     		.align	2
 2349              	.L187:
 2350 009c 00000000 		.word	OSIntNesting
 2351 00a0 00000000 		.word	OSTCBPrioTbl
 2352 00a4 00000000 		.word	OSRunning
 2353              		.cfi_endproc
 2354              	.LFE2:
 2356              		.text
 2357              	.Letext0:
 2358              		.file 2 "uCOSII/Ports/ARM-Cortex-M4/Generic/GNU/os_cpu.h"
 2359              		.file 3 "uCOSII/Include/ucos_ii.h"
ARM GAS  /tmp/ccbL9Ycs.s 			page 71


DEFINED SYMBOLS
                            *ABS*:0000000000000000 os_task.c
     /tmp/ccbL9Ycs.s:18     .text.OSTaskChangePrio:0000000000000000 $t
     /tmp/ccbL9Ycs.s:26     .text.OSTaskChangePrio:0000000000000000 OSTaskChangePrio
     /tmp/ccbL9Ycs.s:371    .text.OSTaskChangePrio:0000000000000144 $d
     /tmp/ccbL9Ycs.s:380    .text.OSTaskCreate:0000000000000000 $t
     /tmp/ccbL9Ycs.s:387    .text.OSTaskCreate:0000000000000000 OSTaskCreate
     /tmp/ccbL9Ycs.s:533    .text.OSTaskCreate:0000000000000080 $d
     /tmp/ccbL9Ycs.s:540    .rodata.OSTaskDel.str1.4:0000000000000000 $d
     /tmp/ccbL9Ycs.s:544    .text.OSTaskDel:0000000000000000 $t
     /tmp/ccbL9Ycs.s:551    .text.OSTaskDel:0000000000000000 OSTaskDel
     /tmp/ccbL9Ycs.s:844    .text.OSTaskDel:000000000000011c $d
     /tmp/ccbL9Ycs.s:859    .text.OSTaskDelReq:0000000000000000 $t
     /tmp/ccbL9Ycs.s:866    .text.OSTaskDelReq:0000000000000000 OSTaskDelReq
     /tmp/ccbL9Ycs.s:971    .text.OSTaskDelReq:0000000000000054 $d
     /tmp/ccbL9Ycs.s:977    .text.OSTaskNameGet:0000000000000000 $t
     /tmp/ccbL9Ycs.s:984    .text.OSTaskNameGet:0000000000000000 OSTaskNameGet
     /tmp/ccbL9Ycs.s:1125   .text.OSTaskNameGet:000000000000006c $d
     /tmp/ccbL9Ycs.s:1132   .text.OSTaskNameSet:0000000000000000 $t
     /tmp/ccbL9Ycs.s:1139   .text.OSTaskNameSet:0000000000000000 OSTaskNameSet
     /tmp/ccbL9Ycs.s:1250   .text.OSTaskNameSet:0000000000000054 $d
     /tmp/ccbL9Ycs.s:1257   .text.OSTaskResume:0000000000000000 $t
     /tmp/ccbL9Ycs.s:1264   .text.OSTaskResume:0000000000000000 OSTaskResume
     /tmp/ccbL9Ycs.s:1403   .text.OSTaskResume:0000000000000084 $d
     /tmp/ccbL9Ycs.s:1411   .text.OSTaskStkChk:0000000000000000 $t
     /tmp/ccbL9Ycs.s:1418   .text.OSTaskStkChk:0000000000000000 OSTaskStkChk
     /tmp/ccbL9Ycs.s:1577   .text.OSTaskStkChk:0000000000000070 $d
     /tmp/ccbL9Ycs.s:1583   .text.OSTaskSuspend:0000000000000000 $t
     /tmp/ccbL9Ycs.s:1590   .text.OSTaskSuspend:0000000000000000 OSTaskSuspend
     /tmp/ccbL9Ycs.s:1744   .text.OSTaskSuspend:0000000000000088 $d
     /tmp/ccbL9Ycs.s:1752   .text.OSTaskQuery:0000000000000000 $t
     /tmp/ccbL9Ycs.s:1759   .text.OSTaskQuery:0000000000000000 OSTaskQuery
     /tmp/ccbL9Ycs.s:1862   .text.OSTaskQuery:000000000000004c $d
     /tmp/ccbL9Ycs.s:1868   .text.OSTaskRegGet:0000000000000000 $t
     /tmp/ccbL9Ycs.s:1875   .text.OSTaskRegGet:0000000000000000 OSTaskRegGet
     /tmp/ccbL9Ycs.s:1941   .text.OSTaskRegGet:0000000000000030 $d
     /tmp/ccbL9Ycs.s:1947   .text.OSTaskRegGetID:0000000000000000 $t
     /tmp/ccbL9Ycs.s:1954   .text.OSTaskRegGetID:0000000000000000 OSTaskRegGetID
     /tmp/ccbL9Ycs.s:2021   .text.OSTaskRegGetID:000000000000002c $d
     /tmp/ccbL9Ycs.s:2026   .text.OSTaskRegSet:0000000000000000 $t
     /tmp/ccbL9Ycs.s:2033   .text.OSTaskRegSet:0000000000000000 OSTaskRegSet
     /tmp/ccbL9Ycs.s:2098   .text.OSTaskRegSet:0000000000000030 $d
     /tmp/ccbL9Ycs.s:2104   .text.OS_TaskReturn:0000000000000000 $t
     /tmp/ccbL9Ycs.s:2111   .text.OS_TaskReturn:0000000000000000 OS_TaskReturn
     /tmp/ccbL9Ycs.s:2137   .text.OS_TaskReturn:0000000000000014 $d
     /tmp/ccbL9Ycs.s:2142   .text.OS_TaskStkClr:0000000000000000 $t
     /tmp/ccbL9Ycs.s:2149   .text.OS_TaskStkClr:0000000000000000 OS_TaskStkClr
     /tmp/ccbL9Ycs.s:2187   .text.OSTaskCreateExt:0000000000000000 $t
     /tmp/ccbL9Ycs.s:2194   .text.OSTaskCreateExt:0000000000000000 OSTaskCreateExt
     /tmp/ccbL9Ycs.s:2350   .text.OSTaskCreateExt:000000000000009c $d

UNDEFINED SYMBOLS
OS_CPU_SR_Save
OS_CPU_SR_Restore
OS_Sched
OSTCBPrioTbl
OSRdyTbl
ARM GAS  /tmp/ccbL9Ycs.s 			page 72


OSRdyGrp
OSTCBCur
OSRunning
OSTaskStkInit
OS_TCBInit
OSIntNesting
OS_EventTaskRemove
OS_EventTaskRemoveMulti
OS_FlagUnlink
OS_Dummy
OSTaskDelHook
OSLockNesting
OSTaskCtr
OSTCBFreeList
OSTCBList
OS_StrLen
OS_MemCopy
OSTaskRegNextAvailID
OSTaskReturnHook
